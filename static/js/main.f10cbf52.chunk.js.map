{"version":3,"sources":["assets/wordmark_white.svg","contexts/LocalStorage.js","Theme/index.js","apollo/client.js","constants/index.js","apollo/queries.js","utils/tokenLists.ts","contexts/Application.js","utils/index.js","utils/data.ts","contexts/PairData.js","contexts/GlobalData.js","contexts/TokenData.js","utils/returns.ts","contexts/User.js","components/Row/index.js","components/Column/index.js","components/LocalLoader/index.js","components/Link/index.js","components/index.js","components/TokenLogo/index.js","components/DoubleLogo/index.js","hooks/index.ts","components/Popover/index.tsx","components/QuestionHelper/index.tsx","components/FormattedName/index.js","components/PairList/index.js","components/TokenList/index.js","components/DropdownSelect/index.js","components/TxnList/index.js","components/TradingviewChart/index.js","components/ButtonStyled/index.js","components/GlobalChart/index.js","components/Search/index.js","components/GlobalStats/index.js","components/Panel/index.js","pages/GlobalPage.js","components/CandleChart/index.js","components/TokenChart/index.js","components/Copy/index.js","components/Warning/index.js","components/HoverText/index.tsx","components/Checkbox/index.js","pages/TokenPage.js","components/PairChart/index.js","pages/PairPage.js","components/UserChart/index.js","components/PairReturnsChart/index.js","components/PositionList/index.js","pages/AccountPage.js","pages/AllTokensPage.js","pages/AllPairsPage.js","components/AccountSearch/index.js","components/PinnedData/index.js","components/Title/index.js","components/Toggle/index.tsx","components/SideNav/index.js","components/LPList/index.js","pages/AccountLookup.js","App.js","index.js"],"names":["module","exports","UPDATABLE_KEYS","LocalStorageContext","createContext","useLocalStorageContext","useContext","reducer","state","type","payload","key","value","some","k","Error","init","defaultLocalStorage","parsed","JSON","parse","window","localStorage","getItem","Provider","children","useReducer","undefined","dispatch","updateKey","useCallback","useMemo","Updater","useEffect","setItem","stringify","Math","floor","Date","now","useDarkModeManager","isDarkMode","toggleDarkMode","usePathDismissed","path","newPaths","useSavedAccounts","savedAccounts","addAccount","account","removeAccount","index","indexOf","slice","length","useSavedPairs","address","token0Address","token1Address","token0Symbol","token1Symbol","newList","useSavedTokens","symbol","theme","darkMode","color","customColor","textColor","panelColor","backgroundColor","uniswapPink","concreteGray","inputBackground","shadowColor","mercuryGray","text1","text2","text3","text4","text5","white","bg1","bg2","bg3","bg4","bg5","bg6","modalBG","advancedBG","onlyLight","divider","primary1","primary2","primary3","primary4","primary5","primaryText1","secondary1","secondary2","secondary3","shadow1","red1","green1","yellow1","yellow2","link","blue","background","TextWrapper","styled","Text","TYPE","props","fontWeight","fontSize","ThemedBackground","div","a","attrs","target","rel","GlobalStyle","createGlobalStyle","client","ApolloClient","HttpLink","uri","cache","InMemoryCache","shouldBatch","healthClient","blockClient","timeframeOptions","WEEK","MONTH","ALL_TIME","SUPPORTED_LIST_URLS__NO_ENS","OVERVIEW_TOKEN_BLACKLIST","PAIR_BLACKLIST","FEE_WARNING_TOKENS","UNTRACKED_COPY","SUBGRAPH_HEALTH","gql","GET_BLOCK","GET_BLOCKS","timestamps","queryString","map","timestamp","PRICES_BY_BLOCK","tokenAddress","blocks","block","number","TOP_LPS_PER_PAIRS","HOURLY_PAIR_RATES","pairAddress","SHARE_VALUE","ETH_PRICE","USER_MINTS_BUNRS_PER_PAIR","USER_HISTORY","USER_POSITIONS","USER_TRANSACTIONS","PAIR_CHART","PAIR_DAY_DATA_BULK","pairs","startTimestamp","pairsString","pair","GLOBAL_CHART","GLOBAL_DATA","GLOBAL_TXNS","ALL_TOKENS","TOKEN_SEARCH","PAIR_SEARCH","ALL_PAIRS","PairFields","PAIRS_CURRENT","PAIR_DATA","PAIRS_BULK","PAIRS_HISTORICAL_BULK","TOKEN_CHART","TokenFields","TOKENS_CURRENT","TOKENS_DYNAMIC","TOKEN_DATA","FILTERED_TRANSACTIONS","uriToHttp","split","toLowerCase","substr","hash","match","name","tokenListValidator","Ajv","allErrors","compile","schema","getTokenList","listUrl","urls","i","url","isLast","response","fetch","console","debug","ok","json","validationErrors","errors","reduce","memo","error","add","dataPath","message","dayjs","extend","utc","ApplicationContext","useApplicationContext","currency","newTimeFrame","supportedTokens","INITIAL_STATE","CURRENCY","TIME_KEY","update","updateTimeframe","updateSessionStart","updateSupportedTokens","updateLatestBlock","updateHeadBlock","useLatestBlocks","latestBlock","headBlock","query","then","res","syncedBlock","data","indexingStatusForCurrentVersion","chains","chainHeadBlock","catch","e","log","useTimeframe","useListedTokens","fetchedTokens","tokensSoFar","newTokens","Promise","resolve","tokens","allFetched","formatted","t","fetchList","toFormat","_Decimal","getTimeframe","timeWindow","utcStartTime","utcEndTime","subtract","endOf","unix","startOf","getPoolLink","remove","getSwapLink","localNumber","val","Numeral","format","BigNumber","set","EXPONENTIAL_AT","toNiceDate","date","getTimestampsForChanges","utcCurrentTime","splitQuery","localClient","vars","list","skipCount","fetchedData","allFound","skip","end","sliced","fetchPolicy","result","Object","keys","getBlockFromTimestamp","variables","timestampFrom","timestampTo","getBlocksFromTimestamps","push","getShareValueOverTime","utcSevenDaysBack","getTimestampRange","row","values","sharePriceUsd","parseFloat","reserveUSD","totalSupply","reserve0","reserve1","token0DerivedETH","token0","derivedETH","token1DerivedETH","token1","roiUsd","ethPrice","token0PriceUSD","token1PriceUSD","brow","timestamp_from","period_length","periods","toNiceDateYear","isAddress","ethers","utils","getAddress","toK","num","tx","formatDollarAmount","digits","Intl","NumberFormat","style","minimumFractionDigits","maximumFractionDigits","formattedNum","usd","isNaN","toFixed","Number","toLocaleString","formattedPercent","percent","fixedPercent","get2DayPercentChange","valueNow","value24HoursAgo","value48HoursAgo","currentChange","previousChange","adjustedPercentChange","isFinite","getPercentChange","TOKEN_OVERRIDES","updateNameData","id","includes","safeAccess","object","accumulator","currentValue","PairDataContext","usePairDataContext","topPairs","added","transactions","txns","chartData","hourlyData","updateTopPairs","updatePairTxns","updateChartData","updateHourlyData","getBulkPairData","pairList","t1","t2","tWeek","b1","b2","bWeek","allPairs","current","all","oneDayResult","twoDayResult","oneWeekResult","oneDayData","obj","cur","twoDayData","oneWeekData","oneDayHistory","newData","twoDayHistory","oneWeekHistory","parseData","pairData","oneDayBlock","volumeUSD","oneDayVolumeUSD","volumeChangeUSD","untrackedVolumeUSD","oneDayVolumeUntracked","volumeChangeUntracked","oneWeekVolumeUSD","oneWeekVolumeUntracked","trackedReserveUSD","trackedReserveETH","liquidityChangeUSD","createdAtBlockNumber","getPairTransactions","mints","burns","swaps","getPairChartData","startTime","concat","pairDayDatas","dayIndexSet","Set","dayIndexArray","forEach","dayData","dailyVolumeUSD","latestLiquidityUSD","currentDayIndex","nextDay","has","dayString","sort","b","parseInt","getHourlyRateData","time","filter","rate0","token0Price","rate1","token1Price","formattedHistoryRate0","formattedHistoryRate1","open","close","useEthPrice","formattedPairs","getData","usePairData","fetchData","useAllPairData","weekOfYear","GlobalDataContext","useGlobalDataContext","globalData","daily","weekly","oneDayPrice","ethPriceChange","allTokens","topLps","updateTransactions","updateChart","updateEthPrice","updateAllPairsInUniswap","updateAllTokensInUniswap","updateTopLps","getGlobalData","oldEthPrice","utcOneDayBack","utcTwoDaysBack","utcOneWeekBack","utcTwoWeeksBack","twoDayBlock","oneWeekBlock","twoWeekBlock","uniswapFactories","twoWeekResult","twoWeekData","totalVolumeUSD","oneWeekVolume","weeklyVolumeChange","txCount","oneDayTxns","txnChange","totalLiquidityUSD","totalLiquidityETH","getChartData","oldestDateToFetch","weeklyData","uniswapDayDatas","latestDayDats","mostLiquidTokens","startIndexWeekly","currentWeek","entry","week","weeklyVolumeUSD","getGlobalTransactions","transaction","mint","burn","swap","getEthPrice","ethPriceOneDay","priceChangeETH","resultOneDay","currentPrice","bundles","oneDayBackPrice","getAllPairsOnUniswap","getAllTokensOnUniswap","useGlobalData","useGlobalChartData","useState","oldestDateFetch","setOldestDateFetched","activeWindow","chartDataDaily","chartDataWeekly","newChartData","newWeeklyData","ethPriceOld","newPrice","priceChange","checkForEthPrice","TokenDataContext","useTokenDataContext","topTokens","token","interval","updateTopTokens","updateTokenTxns","updateAllPairs","updatePriceData","getTopTokens","tradeVolumeUSD","currentLiquidityUSD","totalLiquidity","oldLiquidityUSD","priceChangeUSD","priceUSD","oneDayVolumeETH","tradeVolume","aaveData","bulkResults","getTokenData","oneDayVolumeUT","volumeChangeUT","getTokenTransactions","allPairsFormatted","getTokenPairs","getIntervalTokenData","formattedHistory","getTokenChartData","tokenAddr","tokenDayDatas","latestPriceUSD","latestPairDatas","mostLiquidPairs","useTokenData","tokenData","useTokenPriceData","currentTime","windowSize","useAllTokenData","priceOverrides","formatPricesForEarlyTimestamps","position","getPrincipalForUserPerPair","user","amount0","amount1","results","mintToken0","mintToken1","amountUSD","burnToken0","burnToken1","getMetricsForPositionWindow","positionT0","positionT1","t0Ownership","liquidityTokenBalance","liquidityTokenTotalSupply","t1Ownership","token0_amount_t0","token1_amount_t0","token0_amount_t1","token1_amount_t1","sqrK_t0","sqrt","priceRatioT1","token0_amount_no_fees","token1_amount_no_fees","no_fees_usd","difference_fees_token1","difference_fees_usd","assetValueT0","assetValueT1","imp_loss_usd","uniswap_return","netValueT0","hodleReturn","netReturn","uniswapReturn","impLoss","fees","getHistoricalPairReturns","startDateTimestamp","currentPairData","pairSnapshots","currentETHPrice","createdAtTimestamp","dayIndex","round","sortedPositions","dayTimestamps","shareValues","shareValuesFormatted","share","netFees","dayTimestamp","timestampCeiling","dailyChanges","snapshot","localReturns","currentLiquidityValue","localFees","usdValue","getLPReturnsOnPair","snapshots","principal","currentPosition","net","return","uniswap","sum","UserContext","useUserContext","positions","miningPositions","historyData","updatePositions","updateMiningPositions","updateUserSnapshots","updateUserPairReturns","useUserSnapshots","allResults","found","liquidityPositionSnapshots","useUserPositionChart","setStartDateTimestamp","useStartTimestamp","currentSnapshot","Row","Box","align","padding","border","borderRadius","justify","RowBetween","AutoRow","wrap","gap","RowFixed","Column","AutoColumn","rotate","keyframes","Wrapper","fill","height","css","AnimatedImg","StyledSVG","size","String","stroke","LocalLoader","rest","viewBox","xmlns","d","strokeWidth","strokeLinecap","strokeLinejoin","Link","external","CustomLink","RouterLink","lighten","darken","BasicLink","Divider","IconWrapper","Hover","fade","StyledIcon","EmptyCard","PageWrapper","span","ul","li","isActive","ContentWrapper","ContentWrapperLarge","FullWrapper","BAD_IMAGES","Inline","Image","img","StyledUbiqLogo","TokenLogo","header","setError","alt","role","aria-label","src","boxShadow","onError","event","preventDefault","DoubleTokenLogo","a0","a1","margin","TokenWrapper","sizeraw","toString","HigherLogo","CoveredLogo","useColor","setColor","Vibrant","from","getPalette","err","palette","detectedHex","hex","AAscore","shade","PopoverContainer","show","transparentize","ReferenceElement","Popover","content","placement","referenceElement","setReferenceElement","popperElement","setPopperElement","arrowElement","usePopper","strategy","modifiers","options","offset","element","styles","attributes","callback","delay","savedCallback","useRef","tick","setInterval","clearInterval","useInterval","ref","popper","QuestionWrapper","TooltipContainer","Tooltip","text","QuestionHelper","disabled","setShow","marginLeft","onClick","onMouseEnter","onMouseLeave","adjustSize","FormattedName","maxCharacters","showHover","setShowHover","PageButtons","Arrow","faded","List","DashGrid","ListWrapper","ClickableText","DataText","Flex","SORT_FIELD","FIELD_TO_VALUE","field","useTracked","withRouter","disbaleLinks","maxItems","below600","useMedia","below740","below1080","page","setPage","maxPage","setMaxPage","ITEMS_PER_PAGE","sortDirection","setSortDirection","sortedColumn","setSortedColumn","extraPages","ListItem","liquidity","volume","apy","weekVolume","noTracked","focus","area","marginRight","width","whiteSpace","to","addressA","addressB","pairA","pairB","center","alignItems","justifyContent","p","itemMax","below680","formattedTokens","filteredList","item","Dropdown","ArrowStyled","DropdownSelect","active","setActive","showDropdown","toggleDropdown","option","SortText","button","TXN_TYPE","ALL","SWAP","ADD","REMOVE","TxnList","symbol0Override","symbol1Override","filteredItems","setFilteredItems","txFilter","setTxFilter","toggleCurrency","useCurrentCurrency","newTxns","newTxn","token0Amount","token1Amount","sender","netToken0","amount0In","amount0Out","netToken1","amount1In","amount1Out","abs","filtered","below780","href","symbol0","symbol1","formattedS0","formattedS1","getTransactionType","valueETH","inSeconds","diff","inMinutes","inHours","inDays","formatTime","pl","CHART_TYPES","TradingViewChart","base","baseChange","title","useWeekly","chartCreated","setChartCreated","dataPrev","usePrevious","tooltip","document","getElementById","removeChild","resize","formattedData","topScale","previousTheme","setLastBarText","toolTip","innerHTML","formattedPercentChange","chart","createChart","layout","rightPriceScale","scaleMargins","top","bottom","borderVisible","timeScale","grid","horzLines","visible","vertLines","crosshair","horzLine","labelVisible","vertLine","localization","priceFormatter","series","addHistogramSeries","priceFormat","lineColor","lineWidth","addAreaSeries","topColor","bottomColor","setData","createElement","setAttribute","className","appendChild","display","left","percentChange","subscribeCrosshairMove","param","point","x","y","dateStr","year","month","day","price","seriesPrices","get","fitContent","scrollToPosition","Base","RebassButton","ButtonLight","ButtonDropdown","ButtonFaded","ope","ButtonDark","OptionButton","CHART_VIEW","VOLUME","LIQUIDITY","VOLUME_WINDOW","GlobalChart","chartView","setChartView","volumeWindow","setVolumeWindow","dailyData","chartDataFiltered","currentData","below800","isClient","container","clientWidth","setWidth","handleResize","addEventListener","removeEventListener","aspect","zIndex","Container","small","Input","input","large","SearchIconLarge","SearchIcon","CloseIcon","X","Menu","hide","MenuItem","Heading","Gray","Blue","Search","useAllTokensInUniswap","allTokenData","useAllPairsInUniswap","allPairData","showMenu","toggleMenu","setValue","toggleShadow","toggleBottomShadow","below700","below470","below410","searchedTokens","setSearchedTokens","searchedPairs","setSearchedPairs","escapeRegExp","string","replace","toUpperCase","asSymbol","as0","as1","asAddress","foundTokens","asName","searchedToken","included","uniqueTokens","searchedPair","uniquePairs","pairsFound","filteredTokenList","tokenA","tokenB","tokenEntryKey","RegExp","m","filteredPairList","tokensShown","setTokensShown","pairsShown","setPairsShown","onDismiss","wrapperRef","menuRef","handleClick","contains","shadow","placeholder","onChange","onFocus","Header","Medium","GlobalStats","below1295","below1180","below1024","below400","below816","pairCount","formattedEthPrice","oneDayFees","mr","panelPseudo","Panel","RebassBox","hover","grouped","rounded","last","ListOptions","GridRow","useGlobalTransactions","querySelector","scrollTo","behavior","paddingBottom","mb","lineHeight","minHeight","marginTop","marginBottom","CandleStickChart","valueFormatter","low","high","min","max","mode","CrosshairMode","Normal","borderColor","candleSeries","addCandlestickSeries","upColor","downColor","borderDownColor","borderUpColor","wickDownColor","wickUpColor","ChartWrapper","PriceOption","PRICE","LINE_PRICE","DATA_FREQUENCY","TokenChart","chartFilter","setChartFilter","frequency","setFrequency","addressPrev","checkForChartData","useTokenChartData","setTimeWindow","prevWindow","hourlyWeek","hourlyMonth","hourlyAll","dailyWeek","dailyMonth","dailyAll","priceData","domain","dataMin","right","barCategoryGap","x1","y1","x2","y2","stopColor","stopOpacity","tickLine","axisLine","tickMargin","minTickGap","tickFormatter","dataKey","orientation","yAxisId","cursor","formatter","labelFormatter","label","labelStyle","paddingTop","contentStyle","wrapperStyle","stackId","dot","opacity","CopyIcon","TransactionStatusText","flexRowNoWrap","CopyHelper","toCopy","timeout","isCopied","setIsCopied","staticCopy","didCopy","copy","setTimeout","clearTimeout","useCopyClipboard","setCopied","WarningWrapper","StyledWarningIcon","AlertTriangle","Warning","textContent","mt","ml","minWidth","HoverText","StyleCheckbox","ButtonText","CheckBox","checked","setChecked","DashboardWrapper","PanelWrapper","TokenDetailsLayout","WarningIcon","AlertCircle","WarningGrouping","history","fetchedPairsList","stale","setStale","fetched","setFetched","newFetched","unfetched","newPairData","fetchNewPairData","useDataForList","tokenPairs","useTokenPairs","tokenTxns","TOKEN_PAIRS_KEY","checkForTxns","useTokenTransactions","usingUtVolume","volumeChange","liquidityChange","txnChangeFormatted","below500","LENGTH","formattedSymbol","location","pathname","dismissed","markAsDismissed","savedTokens","addToken","listedTokens","setUseTracked","flexWrap","alingItems","alignSelf","gridColumn","gridRow","Checkbox","OptionsRow","RATE0","RATE1","PairChart","base0","base1","clientHeight","setHeight","usePairChartData","useHourlyRateData","hourlyRate0","hourlyRate1","formattedSymbol0","formattedSymbol1","below1600","FixedPanel","HoverSpan","pairTxns","usePairTransactions","formattedLiquidity","usingUntrackedLiquidity","showUSDWaning","token0USD","token1USD","token0Rate","token1Rate","below900","savedPairs","addPair","flexDirection","UserChart","setFormattedHistory","ownershipPerPair","relevantPositions","lpTokenBalance","dailyUSD","dayDatasForThisPair","mostRecent","totalUSD","valueUSD","useUserLiquidityChart","PairReturnsChart","strokeDasharray","VALUE","UNISWAP_RETURN","poolOwnership","positionsSorted","p0","p1","PRINCIPAL","HODL","hodl","AccountWrapper","DropdownWrapper","Flyout","MenuRow","AccountPage","useUserTransactions","liquidityPositions","positionData","returnData","formattedPositions","useUserPositions","transactionCount","totalSwappedUSD","total","showWarning","setShowWarning","hideLPContent","setShowDropdown","activePosition","setActivePosition","dynamicPositions","aggregateFees","positionValue","isBookmarked","handleBookmarkClick","AllTokensPage","AllPairsPage","AccountLink","accountValue","setAccountValue","stopPropagation","RightColumn","SavedButton","ScrollableDiv","setSavedOpen","removePair","removeToken","TitleWrapper","Title","useHistory","Wordmark","StyledToggle","Toggle","toggle","isMobile","Option","activeText","DesktopWrapper","MobileWrapper","HeaderText","Polling","PollingDot","seconds","sessionStart","setSeconds","useSessionStart","isDark","lps","lp","pairName","lpList","topLpLists","sorted","shorter","splice","useTopLps","AppWrapper","Right","Center","WarningBanner","LayoutWrapper","savedOpen","App","globalChartData","exacts","strict","render","params","accountAddress","ReactDOM"],"mappings":"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","file":"static/js/main.f10cbf52.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/wordmark_white.f23378ce.svg\";","import React, { createContext, useContext, useReducer, useMemo, useCallback, useEffect } from 'react'\n\nconst UNISWAP = 'SHINOBI'\n\nconst VERSION = 'VERSION'\nconst CURRENT_VERSION = 0\nconst LAST_SAVED = 'LAST_SAVED'\nconst DISMISSED_PATHS = 'DISMISSED_PATHS'\nconst SAVED_ACCOUNTS = 'SAVED_ACCOUNTS'\nconst SAVED_TOKENS = 'SAVED_TOKENS'\nconst SAVED_PAIRS = 'SAVED_PAIRS'\n\nconst DARK_MODE = 'DARK_MODE'\n\nconst UPDATABLE_KEYS = [DARK_MODE, DISMISSED_PATHS, SAVED_ACCOUNTS, SAVED_PAIRS, SAVED_TOKENS]\n\nconst UPDATE_KEY = 'UPDATE_KEY'\n\nconst LocalStorageContext = createContext()\n\nfunction useLocalStorageContext() {\n  return useContext(LocalStorageContext)\n}\n\nfunction reducer(state, { type, payload }) {\n  switch (type) {\n    case UPDATE_KEY: {\n      const { key, value } = payload\n      if (!UPDATABLE_KEYS.some((k) => k === key)) {\n        throw Error(`Unexpected key in LocalStorageContext reducer: '${key}'.`)\n      } else {\n        return {\n          ...state,\n          [key]: value,\n        }\n      }\n    }\n    default: {\n      throw Error(`Unexpected action type in LocalStorageContext reducer: '${type}'.`)\n    }\n  }\n}\n\nfunction init() {\n  const defaultLocalStorage = {\n    [VERSION]: CURRENT_VERSION,\n    [DARK_MODE]: true,\n    [DISMISSED_PATHS]: {},\n    [SAVED_ACCOUNTS]: [],\n    [SAVED_TOKENS]: {},\n    [SAVED_PAIRS]: {},\n  }\n\n  try {\n    const parsed = JSON.parse(window.localStorage.getItem(UNISWAP))\n    if (parsed[VERSION] !== CURRENT_VERSION) {\n      // this is where we could run migration logic\n      return defaultLocalStorage\n    } else {\n      return { ...defaultLocalStorage, ...parsed }\n    }\n  } catch {\n    return defaultLocalStorage\n  }\n}\n\nexport default function Provider({ children }) {\n  const [state, dispatch] = useReducer(reducer, undefined, init)\n\n  const updateKey = useCallback((key, value) => {\n    dispatch({ type: UPDATE_KEY, payload: { key, value } })\n  }, [])\n\n  return (\n    <LocalStorageContext.Provider value={useMemo(() => [state, { updateKey }], [state, updateKey])}>\n      {children}\n    </LocalStorageContext.Provider>\n  )\n}\n\nexport function Updater() {\n  const [state] = useLocalStorageContext()\n\n  useEffect(() => {\n    window.localStorage.setItem(UNISWAP, JSON.stringify({ ...state, [LAST_SAVED]: Math.floor(Date.now() / 1000) }))\n  })\n\n  return null\n}\n\nexport function useDarkModeManager() {\n  const [state, { updateKey }] = useLocalStorageContext()\n  let isDarkMode = state[DARK_MODE]\n  const toggleDarkMode = useCallback(\n    (value) => {\n      updateKey(DARK_MODE, value === false || value === true ? value : !isDarkMode)\n    },\n    [updateKey, isDarkMode]\n  )\n  return [isDarkMode, toggleDarkMode]\n}\n\nexport function usePathDismissed(path) {\n  const [state, { updateKey }] = useLocalStorageContext()\n  const pathDismissed = state?.[DISMISSED_PATHS]?.[path]\n  function dismiss() {\n    let newPaths = state?.[DISMISSED_PATHS]\n    newPaths[path] = true\n    updateKey(DISMISSED_PATHS, newPaths)\n  }\n\n  return [pathDismissed, dismiss]\n}\n\nexport function useSavedAccounts() {\n  const [state, { updateKey }] = useLocalStorageContext()\n  const savedAccounts = state?.[SAVED_ACCOUNTS]\n\n  const addAccount = useCallback(\n    (account) => {\n      updateKey(SAVED_ACCOUNTS, [...(savedAccounts ?? []), account])\n    },\n    [savedAccounts, updateKey]\n  )\n\n  const removeAccount = useCallback(\n    (account) => {\n      let index = savedAccounts?.indexOf(account) ?? -1\n      if (index > -1) {\n        updateKey(SAVED_ACCOUNTS, [\n          ...savedAccounts.slice(0, index),\n          ...savedAccounts.slice(index + 1, savedAccounts.length),\n        ])\n      }\n    },\n    [savedAccounts, updateKey]\n  )\n\n  return [savedAccounts, addAccount, removeAccount]\n}\n\nexport function useSavedPairs() {\n  const [state, { updateKey }] = useLocalStorageContext()\n  const savedPairs = state?.[SAVED_PAIRS]\n\n  function addPair(address, token0Address, token1Address, token0Symbol, token1Symbol) {\n    let newList = state?.[SAVED_PAIRS]\n    newList[address] = {\n      address,\n      token0Address,\n      token1Address,\n      token0Symbol,\n      token1Symbol,\n    }\n    updateKey(SAVED_PAIRS, newList)\n  }\n\n  function removePair(address) {\n    let newList = state?.[SAVED_PAIRS]\n    newList[address] = null\n    updateKey(SAVED_PAIRS, newList)\n  }\n\n  return [savedPairs, addPair, removePair]\n}\n\nexport function useSavedTokens() {\n  const [state, { updateKey }] = useLocalStorageContext()\n  const savedTokens = state?.[SAVED_TOKENS]\n\n  function addToken(address, symbol) {\n    let newList = state?.[SAVED_TOKENS]\n    newList[address] = {\n      symbol,\n    }\n    updateKey(SAVED_TOKENS, newList)\n  }\n\n  function removeToken(address) {\n    let newList = state?.[SAVED_TOKENS]\n    newList[address] = null\n    updateKey(SAVED_TOKENS, newList)\n  }\n\n  return [savedTokens, addToken, removeToken]\n}\n","import React from 'react'\nimport { ThemeProvider as StyledComponentsThemeProvider, createGlobalStyle } from 'styled-components'\nimport { useDarkModeManager } from '../contexts/LocalStorage'\nimport styled from 'styled-components'\nimport { Text } from 'rebass'\n\nexport default function ThemeProvider({ children }) {\n  const [darkMode] = useDarkModeManager()\n\n  return <StyledComponentsThemeProvider theme={theme(darkMode)}>{children}</StyledComponentsThemeProvider>\n}\n\nexport const globalPrimary = '#2172E5';\n\nconst theme = (darkMode, color) => ({\n  customColor: color,\n  textColor: darkMode ? color : 'black',\n\n  panelColor: darkMode ? 'rgba(255, 255, 255, 0)' : 'rgba(255, 255, 255, 0)',\n  backgroundColor: darkMode ? '#212429' : '#F7F8FA',\n\n  uniswapPink: darkMode ? '#ff007a' : 'black',\n\n  concreteGray: darkMode ? '#292C2F' : '#FAFAFA',\n  inputBackground: darkMode ? '#1F1F1F' : '#FAFAFA',\n  shadowColor: darkMode ? '#000' : '#00ea90',\n  mercuryGray: darkMode ? '#333333' : '#E1E1E1',\n\n  text1: darkMode ? '#FAFAFA' : '#1F1F1F',\n  text2: darkMode ? '#C3C5CB' : '#565A69',\n  text3: darkMode ? '#6C7284' : '#888D9B',\n  text4: darkMode ? '#565A69' : '#C3C5CB',\n  text5: darkMode ? '#2C2F36' : '#EDEEF2',\n\n  // special case text types\n  white: '#FFFFFF',\n\n  // backgrounds / greys\n  bg1: darkMode ? '#111111' : '#FAFAFA',\n  bg2: darkMode ? '#2C2F36' : '#F7F8FA',\n  bg3: darkMode ? '#40444F' : '#EDEEF2',\n  bg4: darkMode ? '#565A69' : '#CED0D9',\n  bg5: darkMode ? '#565A69' : '#888D9B',\n  bg6: darkMode ? '#000' : '#FFFFFF',\n\n  //specialty colors\n  modalBG: darkMode ? 'rgba(0,0,0,0.85)' : 'rgba(0,0,0,0.6)',\n  advancedBG: darkMode ? 'rgba(0,0,0,0.1)' : 'rgba(255,255,255,0.4)',\n  onlyLight: darkMode ? '#0e0e0e' : 'transparent',\n  divider: darkMode ? 'rgba(43, 43, 43, 0.435)' : 'rgba(43, 43, 43, 0.035)',\n\n  //primary colors\n  primary1: darkMode ? '#2172E5' : '#2172E5',\n  primary2: darkMode ? '#3680E7' : '#FF8CC3',\n  primary3: darkMode ? '#4D8FEA' : '#FF99C9',\n  primary4: darkMode ? '#376bad70' : '#F6DDE8',\n  primary5: darkMode ? '#153d6f70' : '#FDEAF1',\n\n  // color text\n  primaryText1: darkMode ? '#6da8ff' : '#ff007a',\n\n  // secondary colors\n  secondary1: darkMode ? '#2172E5' : '#ff007a',\n  secondary2: darkMode ? '#17000b26' : '#F6DDE8',\n  secondary3: darkMode ? '#17000b26' : '#FDEAF1',\n\n  shadow1: darkMode ? '#000' : '#2F80ED',\n\n  // other\n  red1: '#FF6871',\n  green1: '#27AE60',\n  yellow1: '#FFE270',\n  yellow2: '#F3841E',\n  link: '#2172E5',\n  blue: '2f80ed',\n\n  background: darkMode ? 'black' : `radial-gradient(50% 50% at 50% 50%, #ff007a30 0%, #fff 0%)`,\n})\n\nconst TextWrapper = styled(Text)`\n  color: ${({ color, theme }) => theme[color]};\n`\n\nexport const TYPE = {\n  main(props) {\n    return <TextWrapper fontWeight={500} fontSize={14} color={'text1'} {...props} />\n  },\n\n  body(props) {\n    return <TextWrapper fontWeight={400} fontSize={14} color={'text1'} {...props} />\n  },\n\n  small(props) {\n    return <TextWrapper fontWeight={500} fontSize={11} color={'text1'} {...props} />\n  },\n\n  header(props) {\n    return <TextWrapper fontWeight={600} color={'text1'} {...props} />\n  },\n\n  largeHeader(props) {\n    return <TextWrapper fontWeight={500} color={'text1'} fontSize={24} {...props} />\n  },\n\n  light(props) {\n    return <TextWrapper fontWeight={400} color={'text3'} fontSize={14} {...props} />\n  },\n\n  pink(props) {\n    return <TextWrapper fontWeight={props.faded ? 400 : 600} color={props.faded ? 'text1' : 'text1'} {...props} />\n  },\n}\n\nexport const Hover = styled.div`\n  :hover {\n    cursor: pointer;\n  }\n`\n\nexport const Link = styled.a.attrs({\n  target: '_blank',\n  rel: 'noopener noreferrer',\n})`\n  text-decoration: none;\n  cursor: pointer;\n  color: ${({ theme }) => theme.primary1};\n  font-weight: 500;\n  :hover {\n    text-decoration: underline;\n  }\n  :focus {\n    outline: none;\n    text-decoration: underline;\n  }\n  :active {\n    text-decoration: none;\n  }\n`\n\nexport const ThemedBackground = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  pointer-events: none;\n  max-width: 100vw !important;\n  height: 200vh;\n  mix-blend-mode: color;\n  background: ${({ backgroundColor }) =>\n    `radial-gradient(50% 50% at 50% 50%, ${backgroundColor} 0%, rgba(255, 255, 255, 0) 100%)`};\n  position: absolute;\n  top: 0px;\n  left: 0px;\n  z-index: 9999;\n\n  transform: translateY(-110vh);\n`\n\nexport const GlobalStyle = createGlobalStyle`\n  @import url('https://rsms.me/inter/inter.css');\n  html { font-family: 'Inter', sans-serif; }\n  @supports (font-variation-settings: normal) {\n    html { font-family: 'Inter var', sans-serif; }\n  }\n  \n  html,\n  body {\n    margin: 0;\n    padding: 0;\n    width: 100%;\n    height: 100%;\n    font-size: 14px;    \n    background-color: ${({ theme }) => theme.bg6};\n  }\n\n  a {\n    text-decoration: none;\n\n    :hover {\n      text-decoration: none\n    }\n  }\n\n  \n.three-line-legend {\n\twidth: 100%;\n\theight: 70px;\n\tposition: absolute;\n\tpadding: 8px;\n\tfont-size: 12px;\n\tcolor: #20262E;\n\tbackground-color: rgba(255, 255, 255, 0.23);\n\ttext-align: left;\n\tz-index: 10;\n  pointer-events: none;\n}\n\n.three-line-legend-dark {\n\twidth: 100%;\n\theight: 70px;\n\tposition: absolute;\n\tpadding: 8px;\n\tfont-size: 12px;\n\tcolor: white;\n\tbackground-color: rgba(255, 255, 255, 0.23);\n\ttext-align: left;\n\tz-index: 10;\n  pointer-events: none;\n}\n\n::-webkit-scrollbar\n{\n  width: 4px;  /* for vertical scrollbars */\n  height: 4px; /* for horizontal scrollbars */\n  border-radius: 3px;\n}\n::-webkit-scrollbar-track\n{\n  background: ${({ theme }) => theme.bg1};\n}\n::-webkit-scrollbar-thumb\n{\n  background: ${globalPrimary};\n  border-radius: 3px;\n}\n\n@media screen and (max-width: 800px) {\n  .three-line-legend {\n    display: none !important;\n  }\n}\n\n.tv-lightweight-charts{\n  width: 100% !important;\n  \n\n  & > * {\n    width: 100% !important;\n  }\n}\n\n\n  html {\n    font-size: 1rem;\n    font-variant: none;\n    color: 'black';\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n    height: 100%;\n  }\n`\n","import { ApolloClient } from 'apollo-client'\nimport { InMemoryCache } from 'apollo-cache-inmemory'\nimport { HttpLink } from 'apollo-link-http'\n\nexport const client = new ApolloClient({\n  link: new HttpLink({\n    uri: 'https://graphnode.octano.dev/subgraphs/name/octanolabs/shinobi',\n  }),\n  cache: new InMemoryCache(),\n  shouldBatch: true,\n})\n\nexport const healthClient = new ApolloClient({\n  link: new HttpLink({\n    uri: 'https://graphnode.octano.dev/graphql',\n  }),\n  cache: new InMemoryCache(),\n  shouldBatch: true,\n})\n\nexport const blockClient = new ApolloClient({\n  link: new HttpLink({\n    uri: 'https://graphnode.octano.dev/subgraphs/name/octanolabs/ethereum-blocks',\n  }),\n  cache: new InMemoryCache(),\n})\n","export const FACTORY_ADDRESS = '0xbA831e62ac14d8500cEF0367b14F383d7b1B1b0A'\n\nexport const BUNDLE_ID = '1'\n\nexport const timeframeOptions = {\n  WEEK: '1 week',\n  MONTH: '1 month',\n  // THREE_MONTHS: '3 months',\n  // YEAR: '1 year',\n  ALL_TIME: 'All time',\n}\n\n// token list urls to fetch tokens from - use for warnings on tokens and pairs\nexport const SUPPORTED_LIST_URLS__NO_ENS = [\n  //  'https://gateway.ipfs.io/ipns/tokens.uniswap.org',\n  //  'https://www.coingecko.com/tokens_list/uniswap/defi_100/v_0_0_0.json',\n]\n\n// hide from overview list\nexport const OVERVIEW_TOKEN_BLACKLIST = [\n  '0x495c7f3a713870f68f8b418b355c085dfdc412c3',\n  '0xc3761eb917cd790b30dad99f6cc5b4ff93c4f9ea',\n  '0xe31debd7abff90b06bca21010dd860d8701fd901',\n  '0xfc989fbb6b3024de5ca0144dc23c18a063942ac1',\n  '0xd364159f3f0ba87a993806c74f68b0a1fba72946',\n  '0xcf4a5aefdc0b25ecefad43eefbd8021678cb3765',\n  '0xc54269b4b98a84812e12f8e2392d41a1a3ea5f77',\n  '0x27e9db81e49307687e6a9b1190825dd5c438b45e',\n  '0x3e607a939fd243b8c1666d4aff3af4a52d536633',\n  '0x85f81ace89ffafbde99ad7a2400f664a93d3c886',\n  '0x2ad8bea457391fe67d4b66ea05adb4346b8c9748',\n  '0x929ef9ae80fa0fe24713734f4a0f7ae79bb80dd5',\n  '0x996fd5e4500eeb8af930b12f4c215e0f9aa76562',\n  '0x142c162777632c13fe019d9081383a30cb73c870'\n]\n\n// pair blacklist\nexport const PAIR_BLACKLIST = [\n  '0xb6a741f37d6e455ebcc9f17e2c16d0586c3f57a5',\n  '0xeb440af50028178407fab916a260f1cbf09d863c',\n  '0xaf82c22269776ad476ae301f463578dd7f0cf984',\n  '0xc59093d8102840dd49918e19238b71b990f85709',\n  '0xed4ea5a103c83c3f8d49c36493ce7c77cb4f8198',\n  '0x99551f34e7cb47cd3b31bef0d728719a7f187a56',\n  '0xfcd0ffd15771af8cec590f14c0b5f0d7833aa0c2',\n  '0xc3df4f67234ff53c3df667795310953a6f2652de',\n  '0x1590febc55cbb4549daf29b79c5596c594b08f65'\n]\n\n/**\n * For tokens that cause erros on fee calculations\n */\nexport const FEE_WARNING_TOKENS = ['0xd46ba6d942050d489dbd938a2c909a5d5039a161']\n\nexport const UNTRACKED_COPY = 'Derived USD values may be inaccurate without liquid UBQ pairings.'\n","import gql from 'graphql-tag'\nimport { FACTORY_ADDRESS, BUNDLE_ID } from '../constants'\n\nexport const SUBGRAPH_HEALTH = gql`\n  query health {\n    indexingStatusForCurrentVersion(subgraphName: \"octanolabs/shinobi\") {\n      synced\n      health\n      chains {\n        chainHeadBlock {\n          number\n        }\n        latestBlock {\n          number\n        }\n      }\n    }\n  }\n`\n\nexport const V1_DATA_QUERY = gql`\n  query uniswap($date: Int!, $date2: Int!) {\n    current: uniswap(id: \"1\") {\n      totalVolumeUSD\n      totalLiquidityUSD\n      txCount\n    }\n    oneDay: uniswapHistoricalDatas(where: { timestamp_lt: $date }, first: 1, orderBy: timestamp, orderDirection: desc) {\n      totalVolumeUSD\n      totalLiquidityUSD\n      txCount\n    }\n    twoDay: uniswapHistoricalDatas(\n      where: { timestamp_lt: $date2 }\n      first: 1\n      orderBy: timestamp\n      orderDirection: desc\n    ) {\n      totalVolumeUSD\n      totalLiquidityUSD\n      txCount\n    }\n    exchanges(first: 200, orderBy: ethBalance, orderDirection: desc) {\n      ethBalance\n    }\n  }\n`\n\nexport const GET_BLOCK = gql`\n  query blocks($timestampFrom: Int!, $timestampTo: Int!) {\n    blocks(\n      first: 1\n      orderBy: timestamp\n      orderDirection: asc\n      where: { timestamp_gt: $timestampFrom, timestamp_lt: $timestampTo }\n    ) {\n      id\n      number\n      timestamp\n    }\n  }\n`\n\nexport const GET_BLOCKS = (timestamps) => {\n  let queryString = 'query blocks {'\n  queryString += timestamps.map((timestamp) => {\n    return `t${timestamp}:blocks(first: 1, orderBy: timestamp, orderDirection: desc, where: { timestamp_gt: ${timestamp}, timestamp_lt: ${timestamp + 600\n      } }) {\n      number\n    }`\n  })\n  queryString += '}'\n  return gql(queryString)\n}\n\nexport const POSITIONS_BY_BLOCK = (account, blocks) => {\n  let queryString = 'query blocks {'\n  queryString += blocks.map(\n    (block) => `\n      t${block.timestamp}:liquidityPositions(where: {user: \"${account}\"}, block: { number: ${block.number} }) { \n        liquidityTokenBalance\n        pair  {\n          id\n          totalSupply\n          reserveUSD\n        }\n      }\n    `\n  )\n  queryString += '}'\n  return gql(queryString)\n}\n\nexport const PRICES_BY_BLOCK = (tokenAddress, blocks) => {\n  let queryString = 'query blocks {'\n  queryString += blocks.map(\n    (block) => `\n      t${block.timestamp}:token(id:\"${tokenAddress}\", block: { number: ${block.number} }) { \n        derivedETH\n      }\n    `\n  )\n  queryString += ','\n  queryString += blocks.map(\n    (block) => `\n      b${block.timestamp}: bundle(id:\"1\", block: { number: ${block.number} }) { \n        ethPrice\n      }\n    `\n  )\n\n  queryString += '}'\n  return gql(queryString)\n}\n\nexport const TOP_LPS_PER_PAIRS = gql`\n  query lps($pair: Bytes!) {\n    liquidityPositions(where: { pair: $pair }, orderBy: liquidityTokenBalance, orderDirection: desc, first: 10) {\n      user {\n        id\n      }\n      pair {\n        id\n      }\n      liquidityTokenBalance\n    }\n  }\n`\n\nexport const HOURLY_PAIR_RATES = (pairAddress, blocks) => {\n  let queryString = 'query blocks {'\n  queryString += blocks.map(\n    (block) => `\n      t${block.timestamp}: pair(id:\"${pairAddress}\", block: { number: ${block.number} }) { \n        token0Price\n        token1Price\n      }\n    `\n  )\n\n  queryString += '}'\n  return gql(queryString)\n}\n\nexport const SHARE_VALUE = (pairAddress, blocks) => {\n  let queryString = 'query blocks {'\n  queryString += blocks.map(\n    (block) => `\n      t${block.timestamp}:pair(id:\"${pairAddress}\", block: { number: ${block.number} }) { \n        reserve0\n        reserve1\n        reserveUSD\n        totalSupply \n        token0{\n          derivedETH\n        }\n        token1{\n          derivedETH\n        }\n      }\n    `\n  )\n  queryString += ','\n  queryString += blocks.map(\n    (block) => `\n      b${block.timestamp}: bundle(id:\"1\", block: { number: ${block.number} }) { \n        ethPrice\n      }\n    `\n  )\n\n  queryString += '}'\n  return gql(queryString)\n}\n\nexport const ETH_PRICE = (block) => {\n  const queryString = block\n    ? `\n    query bundles {\n      bundles(where: { id: ${BUNDLE_ID} } block: {number: ${block}}) {\n        id\n        ethPrice\n      }\n    }\n  `\n    : ` query bundles {\n      bundles(where: { id: ${BUNDLE_ID} }) {\n        id\n        ethPrice\n      }\n    }\n  `\n  return gql(queryString)\n}\n\nexport const USER = (block, account) => {\n  const queryString = `\n    query users {\n      user(id: \"${account}\", block: {number: ${block}}) {\n        liquidityPositions\n      }\n    }\n`\n  return gql(queryString)\n}\n\nexport const USER_MINTS_BUNRS_PER_PAIR = gql`\n  query events($user: Bytes!, $pair: Bytes!) {\n    mints(where: { to: $user, pair: $pair }) {\n      amountUSD\n      amount0\n      amount1\n      timestamp\n      pair {\n        token0 {\n          id\n        }\n        token1 {\n          id\n        }\n      }\n    }\n    burns(where: { sender: $user, pair: $pair }) {\n      amountUSD\n      amount0\n      amount1\n      timestamp\n      pair {\n        token0 {\n          id\n        }\n        token1 {\n          id\n        }\n      }\n    }\n  }\n`\n\nexport const FIRST_SNAPSHOT = gql`\n  query snapshots($user: Bytes!) {\n    liquidityPositionSnapshots(first: 1, where: { user: $user }, orderBy: timestamp, orderDirection: asc) {\n      timestamp\n    }\n  }\n`\n\nexport const USER_HISTORY = gql`\n  query snapshots($user: Bytes!, $skip: Int!) {\n    liquidityPositionSnapshots(first: 1000, skip: $skip, where: { user: $user }) {\n      timestamp\n      reserveUSD\n      liquidityTokenBalance\n      liquidityTokenTotalSupply\n      reserve0\n      reserve1\n      token0PriceUSD\n      token1PriceUSD\n      pair {\n        id\n        reserve0\n        reserve1\n        reserveUSD\n        token0 {\n          id\n        }\n        token1 {\n          id\n        }\n      }\n    }\n  }\n`\n\nexport const USER_POSITIONS = gql`\n  query liquidityPositions($user: Bytes!) {\n    liquidityPositions(where: { user: $user }) {\n      pair {\n        id\n        reserve0\n        reserve1\n        reserveUSD\n        token0 {\n          id\n          symbol\n          derivedETH\n        }\n        token1 {\n          id\n          symbol\n          derivedETH\n        }\n        totalSupply\n      }\n      liquidityTokenBalance\n    }\n  }\n`\n\nexport const USER_TRANSACTIONS = gql`\n  query transactions($user: Bytes!) {\n    mints(orderBy: timestamp, orderDirection: desc, where: { to: $user }) {\n      id\n      transaction {\n        id\n        timestamp\n      }\n      pair {\n        id\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      to\n      liquidity\n      amount0\n      amount1\n      amountUSD\n    }\n    burns(orderBy: timestamp, orderDirection: desc, where: { sender: $user }) {\n      id\n      transaction {\n        id\n        timestamp\n      }\n      pair {\n        id\n        token0 {\n          symbol\n        }\n        token1 {\n          symbol\n        }\n      }\n      sender\n      to\n      liquidity\n      amount0\n      amount1\n      amountUSD\n    }\n    swaps(orderBy: timestamp, orderDirection: desc, where: { to: $user }) {\n      id\n      transaction {\n        id\n        timestamp\n      }\n      pair {\n        token0 {\n          symbol\n        }\n        token1 {\n          symbol\n        }\n      }\n      amount0In\n      amount0Out\n      amount1In\n      amount1Out\n      amountUSD\n      to\n    }\n  }\n`\n\nexport const PAIR_CHART = gql`\n  query pairDayDatas($pairAddress: Bytes!, $skip: Int!) {\n    pairDayDatas(first: 1000, skip: $skip, orderBy: date, orderDirection: asc, where: { pairAddress: $pairAddress }) {\n      id\n      date\n      dailyVolumeToken0\n      dailyVolumeToken1\n      dailyVolumeUSD\n      reserveUSD\n    }\n  }\n`\n\nexport const PAIR_DAY_DATA = gql`\n  query pairDayDatas($pairAddress: Bytes!, $date: Int!) {\n    pairDayDatas(first: 1, orderBy: date, orderDirection: desc, where: { pairAddress: $pairAddress, date_lt: $date }) {\n      id\n      date\n      dailyVolumeToken0\n      dailyVolumeToken1\n      dailyVolumeUSD\n      totalSupply\n      reserveUSD\n    }\n  }\n`\n\nexport const PAIR_DAY_DATA_BULK = (pairs, startTimestamp) => {\n  let pairsString = `[`\n  pairs.map((pair) => {\n    return (pairsString += `\"${pair}\"`)\n  })\n  pairsString += ']'\n  const queryString = `\n    query days {\n      pairDayDatas(first: 1000, orderBy: date, orderDirection: asc, where: { pairAddress_in: ${pairsString}, date_gt: ${startTimestamp} }) {\n        id\n        pairAddress\n        date\n        dailyVolumeToken0\n        dailyVolumeToken1\n        dailyVolumeUSD\n        totalSupply\n        reserveUSD\n      }\n    } \n`\n  return gql(queryString)\n}\n\nexport const GLOBAL_CHART = gql`\n  query uniswapDayDatas($startTime: Int!, $skip: Int!) {\n    uniswapDayDatas(first: 1000, skip: $skip, where: { date_gt: $startTime }, orderBy: date, orderDirection: asc) {\n      id\n      date\n      totalVolumeUSD\n      dailyVolumeUSD\n      dailyVolumeETH\n      totalLiquidityUSD\n      totalLiquidityETH\n    }\n  }\n`\n\nexport const GLOBAL_DATA = (block) => {\n  const queryString = ` query uniswapFactories {\n      uniswapFactories(\n       ${block ? `block: { number: ${block}}` : ``} \n       where: { id: \"${FACTORY_ADDRESS}\" }) {\n        id\n        totalVolumeUSD\n        totalVolumeETH\n        untrackedVolumeUSD\n        totalLiquidityUSD\n        totalLiquidityETH\n        txCount\n        pairCount\n      }\n    }`\n  return gql(queryString)\n}\n\nexport const GLOBAL_TXNS = gql`\n  query transactions {\n    transactions(first: 100, orderBy: timestamp, orderDirection: desc) {\n      mints(orderBy: timestamp, orderDirection: desc) {\n        transaction {\n          id\n          timestamp\n        }\n        pair {\n          token0 {\n            id\n            symbol\n          }\n          token1 {\n            id\n            symbol\n          }\n        }\n        to\n        liquidity\n        amount0\n        amount1\n        amountUSD\n      }\n      burns(orderBy: timestamp, orderDirection: desc) {\n        transaction {\n          id\n          timestamp\n        }\n        pair {\n          token0 {\n            id\n            symbol\n          }\n          token1 {\n            id\n            symbol\n          }\n        }\n        sender\n        liquidity\n        amount0\n        amount1\n        amountUSD\n      }\n      swaps(orderBy: timestamp, orderDirection: desc) {\n        transaction {\n          id\n          timestamp\n        }\n        pair {\n          token0 {\n            id\n            symbol\n          }\n          token1 {\n            id\n            symbol\n          }\n        }\n        amount0In\n        amount0Out\n        amount1In\n        amount1Out\n        amountUSD\n        to\n      }\n    }\n  }\n`\n\nexport const ALL_TOKENS = gql`\n  query tokens($skip: Int!) {\n    tokens(first: 500, skip: $skip) {\n      id\n      name\n      symbol\n      totalLiquidity\n    }\n  }\n`\n\nexport const TOKEN_SEARCH = gql`\n  query tokens($value: String, $id: String) {\n    asSymbol: tokens(where: { symbol_contains: $value }, orderBy: totalLiquidity, orderDirection: desc) {\n      id\n      symbol\n      name\n      totalLiquidity\n    }\n    asName: tokens(where: { name_contains: $value }, orderBy: totalLiquidity, orderDirection: desc) {\n      id\n      symbol\n      name\n      totalLiquidity\n    }\n    asAddress: tokens(where: { id: $id }, orderBy: totalLiquidity, orderDirection: desc) {\n      id\n      symbol\n      name\n      totalLiquidity\n    }\n  }\n`\n\nexport const PAIR_SEARCH = gql`\n  query pairs($tokens: [Bytes]!, $id: String) {\n    as0: pairs(where: { token0_in: $tokens }) {\n      id\n      token0 {\n        id\n        symbol\n        name\n      }\n      token1 {\n        id\n        symbol\n        name\n      }\n    }\n    as1: pairs(where: { token1_in: $tokens }) {\n      id\n      token0 {\n        id\n        symbol\n        name\n      }\n      token1 {\n        id\n        symbol\n        name\n      }\n    }\n    asAddress: pairs(where: { id: $id }) {\n      id\n      token0 {\n        id\n        symbol\n        name\n      }\n      token1 {\n        id\n        symbol\n        name\n      }\n    }\n  }\n`\n\nexport const ALL_PAIRS = gql`\n  query pairs($skip: Int!) {\n    pairs(first: 500, skip: $skip, orderBy: trackedReserveETH, orderDirection: desc) {\n      id\n      token0 {\n        id\n        symbol\n        name\n      }\n      token1 {\n        id\n        symbol\n        name\n      }\n    }\n  }\n`\n\nconst PairFields = `\n  fragment PairFields on Pair {\n    id\n    txCount\n    token0 {\n      id\n      symbol\n      name\n      totalLiquidity\n      derivedETH\n    }\n    token1 {\n      id\n      symbol\n      name\n      totalLiquidity\n      derivedETH\n    }\n    reserve0\n    reserve1\n    reserveUSD\n    totalSupply\n    trackedReserveETH\n    reserveETH\n    volumeUSD\n    untrackedVolumeUSD\n    token0Price\n    token1Price\n    createdAtTimestamp\n  }\n`\n\nexport const PAIRS_CURRENT = gql`\n  query pairs {\n    pairs(first: 200, orderBy: reserveUSD, orderDirection: desc) {\n      id\n    }\n  }\n`\n\nexport const PAIR_DATA = (pairAddress, block) => {\n  const queryString = `\n    ${PairFields}\n    query pairs {\n      pairs(${block ? `block: {number: ${block}}` : ``} where: { id: \"${pairAddress}\"} ) {\n        ...PairFields\n      }\n    }`\n  return gql(queryString)\n}\n\nexport const MINING_POSITIONS = (account) => {\n  const queryString = `\n    query users {\n      user(id: \"${account}\") {\n        miningPosition {\n          id\n          user {\n            id\n          }\n          miningPool {\n              pair {\n                id\n                token0\n                token1\n              }\n          }\n          balance\n        }\n      }\n    }\n`\n  return gql(queryString)\n}\n\nexport const PAIRS_BULK = gql`\n  ${PairFields}\n  query pairs($allPairs: [Bytes]!) {\n    pairs(first: 500, where: { id_in: $allPairs }, orderBy: trackedReserveETH, orderDirection: desc) {\n      ...PairFields\n    }\n  }\n`\n\nexport const PAIRS_HISTORICAL_BULK = (block, pairs) => {\n  let pairsString = `[`\n  pairs.map((pair) => {\n    return (pairsString += `\"${pair}\"`)\n  })\n  pairsString += ']'\n  let queryString = `\n  query pairs {\n    pairs(first: 200, where: {id_in: ${pairsString}}, block: {number: ${block}}, orderBy: trackedReserveETH, orderDirection: desc) {\n      id\n      reserveUSD\n      trackedReserveETH\n      volumeUSD\n      untrackedVolumeUSD\n    }\n  }\n  `\n  return gql(queryString)\n}\n\nexport const TOKEN_CHART = gql`\n  query tokenDayDatas($tokenAddr: String!, $skip: Int!) {\n    tokenDayDatas(first: 1000, skip: $skip, orderBy: date, orderDirection: asc, where: { token: $tokenAddr }) {\n      id\n      date\n      priceUSD\n      totalLiquidityToken\n      totalLiquidityUSD\n      totalLiquidityETH\n      dailyVolumeETH\n      dailyVolumeToken\n      dailyVolumeUSD\n      mostLiquidPairs {\n        id\n        token0 {\n          id\n          derivedETH\n        }\n        token1 {\n          id\n          derivedETH\n        }\n      }\n    }\n  }\n`\n\nconst TokenFields = `\n  fragment TokenFields on Token {\n    id\n    name\n    symbol\n    derivedETH\n    tradeVolume\n    tradeVolumeUSD\n    untrackedVolumeUSD\n    totalLiquidity\n    txCount\n  }\n`\n\nexport const TOKENS_CURRENT = gql`\n  ${TokenFields}\n  query tokens {\n    tokens(first: 200, orderBy: tradeVolumeUSD, orderDirection: desc) {\n      ...TokenFields\n    }\n  }\n`\n\nexport const TOKENS_DYNAMIC = (block) => {\n  const queryString = `\n    ${TokenFields}\n    query tokens {\n      tokens(block: {number: ${block}} first: 200, orderBy: tradeVolumeUSD, orderDirection: desc) {\n        ...TokenFields\n      }\n    }\n  `\n  return gql(queryString)\n}\n\nexport const TOKEN_DATA = (tokenAddress, block) => {\n  const queryString = `\n    ${TokenFields}\n    query tokens {\n      tokens(${block ? `block : {number: ${block}}` : ``} where: {id:\"${tokenAddress}\"}) {\n        ...TokenFields\n      }\n      pairs0: pairs(where: {token0: \"${tokenAddress}\"}, first: 50, orderBy: reserveUSD, orderDirection: desc){\n        id\n      }\n      pairs1: pairs(where: {token1: \"${tokenAddress}\"}, first: 50, orderBy: reserveUSD, orderDirection: desc){\n        id\n      }\n    }\n  `\n  return gql(queryString)\n}\n\nexport const FILTERED_TRANSACTIONS = gql`\n  query($allPairs: [Bytes]!) {\n    mints(first: 20, where: { pair_in: $allPairs }, orderBy: timestamp, orderDirection: desc) {\n      transaction {\n        id\n        timestamp\n      }\n      pair {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      to\n      liquidity\n      amount0\n      amount1\n      amountUSD\n    }\n    burns(first: 20, where: { pair_in: $allPairs }, orderBy: timestamp, orderDirection: desc) {\n      transaction {\n        id\n        timestamp\n      }\n      pair {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      sender\n      liquidity\n      amount0\n      amount1\n      amountUSD\n    }\n    swaps(first: 30, where: { pair_in: $allPairs }, orderBy: timestamp, orderDirection: desc) {\n      transaction {\n        id\n        timestamp\n      }\n      id\n      pair {\n        token0 {\n          id\n          symbol\n        }\n        token1 {\n          id\n          symbol\n        }\n      }\n      amount0In\n      amount0Out\n      amount1In\n      amount1Out\n      amountUSD\n      to\n    }\n  }\n`\n","import { TokenList } from '@uniswap/token-lists'\nimport schema from '@uniswap/token-lists/src/tokenlist.schema.json'\nimport Ajv from 'ajv'\n\n/**\n * Given a URI that may be ipfs, ipns, http, or https protocol, return the fetch-able http(s) URLs for the same content\n * @param uri to convert to fetch-able http url\n */\nfunction uriToHttp(uri: string): string[] {\n  const protocol = uri.split(':')[0].toLowerCase()\n  switch (protocol) {\n    case 'https':\n      return [uri]\n    case 'http':\n      return ['https' + uri.substr(4), uri]\n    case 'ipfs':\n      const hash = uri.match(/^ipfs:(\\/\\/)?(.*)$/i)?.[2]\n      return [`https://cloudflare-ipfs.com/ipfs/${hash}/`, `https://ipfs.io/ipfs/${hash}/`]\n    case 'ipns':\n      const name = uri.match(/^ipns:(\\/\\/)?(.*)$/i)?.[2]\n      return [`https://cloudflare-ipfs.com/ipns/${name}/`, `https://ipfs.io/ipns/${name}/`]\n    default:\n      return []\n  }\n}\n\nconst tokenListValidator = new Ajv({ allErrors: true }).compile(schema)\n\n/**\n * Contains the logic for resolving a list URL to a validated token list\n * @param listUrl list url\n */\nexport default async function getTokenList(listUrl: string): Promise<TokenList> {\n  const urls = uriToHttp(listUrl)\n  for (let i = 0; i < urls.length; i++) {\n    const url = urls[i]\n    const isLast = i === urls.length - 1\n    let response\n    try {\n      response = await fetch(url)\n    } catch (error) {\n      console.debug('Failed to fetch list', listUrl, error)\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\n      continue\n    }\n\n    if (!response.ok) {\n      if (isLast) throw new Error(`Failed to download list ${listUrl}`)\n      continue\n    }\n\n    const json = await response.json()\n    if (!tokenListValidator(json)) {\n      const validationErrors: string =\n        tokenListValidator.errors?.reduce<string>((memo, error) => {\n          const add = `${error.dataPath} ${error.message ?? ''}`\n          return memo.length > 0 ? `${memo}; ${add}` : `${add}`\n        }, '') ?? 'unknown error'\n      throw new Error(`Token list failed validation: ${validationErrors}`)\n    }\n    return json\n  }\n  throw new Error('Unrecognized list URL protocol.')\n}\n","import React, { createContext, useContext, useReducer, useMemo, useCallback, useState, useEffect } from 'react'\nimport { timeframeOptions, SUPPORTED_LIST_URLS__NO_ENS } from '../constants'\nimport dayjs from 'dayjs'\nimport utc from 'dayjs/plugin/utc'\nimport getTokenList from '../utils/tokenLists'\nimport { healthClient } from '../apollo/client'\nimport { SUBGRAPH_HEALTH } from '../apollo/queries'\ndayjs.extend(utc)\n\nconst UPDATE = 'UPDATE'\nconst UPDATE_TIMEFRAME = 'UPDATE_TIMEFRAME'\nconst UPDATE_SESSION_START = 'UPDATE_SESSION_START'\nconst UPDATED_SUPPORTED_TOKENS = 'UPDATED_SUPPORTED_TOKENS'\nconst UPDATE_LATEST_BLOCK = 'UPDATE_LATEST_BLOCK'\nconst UPDATE_HEAD_BLOCK = 'UPDATE_HEAD_BLOCK'\n\nconst SUPPORTED_TOKENS = 'SUPPORTED_TOKENS'\nconst TIME_KEY = 'TIME_KEY'\nconst CURRENCY = 'CURRENCY'\nconst SESSION_START = 'SESSION_START'\nconst LATEST_BLOCK = 'LATEST_BLOCK'\nconst HEAD_BLOCK = 'HEAD_BLOCK'\n\nconst ApplicationContext = createContext()\n\nfunction useApplicationContext() {\n  return useContext(ApplicationContext)\n}\n\nfunction reducer(state, { type, payload }) {\n  switch (type) {\n    case UPDATE: {\n      const { currency } = payload\n      return {\n        ...state,\n        [CURRENCY]: currency,\n      }\n    }\n    case UPDATE_TIMEFRAME: {\n      const { newTimeFrame } = payload\n      return {\n        ...state,\n        [TIME_KEY]: newTimeFrame,\n      }\n    }\n    case UPDATE_SESSION_START: {\n      const { timestamp } = payload\n      return {\n        ...state,\n        [SESSION_START]: timestamp,\n      }\n    }\n\n    case UPDATE_LATEST_BLOCK: {\n      const { block } = payload\n      return {\n        ...state,\n        [LATEST_BLOCK]: block,\n      }\n    }\n\n    case UPDATE_HEAD_BLOCK: {\n      const { block } = payload\n      return {\n        ...state,\n        [HEAD_BLOCK]: block,\n      }\n    }\n\n    case UPDATED_SUPPORTED_TOKENS: {\n      const { supportedTokens } = payload\n      return {\n        ...state,\n        [SUPPORTED_TOKENS]: supportedTokens,\n      }\n    }\n\n    default: {\n      throw Error(`Unexpected action type in DataContext reducer: '${type}'.`)\n    }\n  }\n}\n\nconst INITIAL_STATE = {\n  CURRENCY: 'USD',\n  TIME_KEY: timeframeOptions.ALL_TIME,\n}\n\nexport default function Provider({ children }) {\n  const [state, dispatch] = useReducer(reducer, INITIAL_STATE)\n  const update = useCallback((currency) => {\n    dispatch({\n      type: UPDATE,\n      payload: {\n        currency,\n      },\n    })\n  }, [])\n\n  // global time window for charts - see timeframe options in constants\n  const updateTimeframe = useCallback((newTimeFrame) => {\n    dispatch({\n      type: UPDATE_TIMEFRAME,\n      payload: {\n        newTimeFrame,\n      },\n    })\n  }, [])\n\n  // used for refresh button\n  const updateSessionStart = useCallback((timestamp) => {\n    dispatch({\n      type: UPDATE_SESSION_START,\n      payload: {\n        timestamp,\n      },\n    })\n  }, [])\n\n  const updateSupportedTokens = useCallback((supportedTokens) => {\n    dispatch({\n      type: UPDATED_SUPPORTED_TOKENS,\n      payload: {\n        supportedTokens,\n      },\n    })\n  }, [])\n\n  const updateLatestBlock = useCallback((block) => {\n    dispatch({\n      type: UPDATE_LATEST_BLOCK,\n      payload: {\n        block,\n      },\n    })\n  }, [])\n\n  const updateHeadBlock = useCallback((block) => {\n    dispatch({\n      type: UPDATE_HEAD_BLOCK,\n      payload: {\n        block,\n      },\n    })\n  }, [])\n\n  return (\n    <ApplicationContext.Provider\n      value={useMemo(\n        () => [\n          state,\n          {\n            update,\n            updateSessionStart,\n            updateTimeframe,\n            updateSupportedTokens,\n            updateLatestBlock,\n            updateHeadBlock,\n          },\n        ],\n        [state, update, updateTimeframe, updateSessionStart, updateSupportedTokens, updateLatestBlock, updateHeadBlock]\n      )}\n    >\n      {children}\n    </ApplicationContext.Provider>\n  )\n}\n\nexport function useLatestBlocks() {\n  const [state, { updateLatestBlock, updateHeadBlock }] = useApplicationContext()\n\n  const latestBlock = state?.[LATEST_BLOCK]\n  const headBlock = state?.[HEAD_BLOCK]\n\n  useEffect(() => {\n    async function fetch() {\n      healthClient\n        .query({\n          query: SUBGRAPH_HEALTH,\n        })\n        .then((res) => {\n          const syncedBlock = res.data.indexingStatusForCurrentVersion.chains[0].latestBlock.number\n          const headBlock = res.data.indexingStatusForCurrentVersion.chains[0].chainHeadBlock.number\n          if (syncedBlock && headBlock) {\n            updateLatestBlock(syncedBlock)\n            updateHeadBlock(headBlock)\n          }\n        })\n        .catch((e) => {\n          console.log(e)\n        })\n    }\n    if (!latestBlock) {\n      fetch()\n    }\n  }, [latestBlock, updateHeadBlock, updateLatestBlock])\n\n  return [latestBlock, headBlock]\n}\n\nexport function useCurrentCurrency() {\n  const [state, { update }] = useApplicationContext()\n  const toggleCurrency = useCallback(() => {\n    if (state.currency === 'UBQ') {\n      update('USD')\n    } else {\n      update('UBQ')\n    }\n  }, [state, update])\n  return [state[CURRENCY], toggleCurrency]\n}\n\nexport function useTimeframe() {\n  const [state, { updateTimeframe }] = useApplicationContext()\n  const activeTimeframe = state?.[TIME_KEY]\n  return [activeTimeframe, updateTimeframe]\n}\n\nexport function useStartTimestamp() {\n  const [activeWindow] = useTimeframe()\n  const [startDateTimestamp, setStartDateTimestamp] = useState()\n\n  // monitor the old date fetched\n  useEffect(() => {\n    let startTime =\n      dayjs\n        .utc()\n        .subtract(\n          1,\n          activeWindow === timeframeOptions.week ? 'week' : activeWindow === timeframeOptions.ALL_TIME ? 'year' : 'year'\n        )\n        .startOf('day')\n        .unix() - 1\n    // if we find a new start time less than the current startrtime - update oldest pooint to fetch\n    setStartDateTimestamp(startTime)\n  }, [activeWindow, startDateTimestamp])\n\n  return startDateTimestamp\n}\n\n// keep track of session length for refresh ticker\nexport function useSessionStart() {\n  const [state, { updateSessionStart }] = useApplicationContext()\n  const sessionStart = state?.[SESSION_START]\n\n  useEffect(() => {\n    if (!sessionStart) {\n      updateSessionStart(Date.now())\n    }\n  })\n\n  const [seconds, setSeconds] = useState(0)\n\n  useEffect(() => {\n    let interval = null\n    interval = setInterval(() => {\n      setSeconds(Date.now() - sessionStart ?? Date.now())\n    }, 1000)\n\n    return () => clearInterval(interval)\n  }, [seconds, sessionStart])\n\n  return parseInt(seconds / 1000)\n}\n\nexport function useListedTokens() {\n  const [state, { updateSupportedTokens }] = useApplicationContext()\n  const supportedTokens = state?.[SUPPORTED_TOKENS]\n\n  useEffect(() => {\n    async function fetchList() {\n      const allFetched = await SUPPORTED_LIST_URLS__NO_ENS.reduce(async (fetchedTokens, url) => {\n        const tokensSoFar = await fetchedTokens\n        const newTokens = await getTokenList(url)\n        return Promise.resolve([...tokensSoFar, ...newTokens.tokens])\n      }, Promise.resolve([]))\n      let formatted = allFetched?.map((t) => t.address.toLowerCase())\n      updateSupportedTokens(formatted)\n    }\n    if (!supportedTokens) {\n      fetchList()\n    }\n  }, [updateSupportedTokens, supportedTokens])\n\n  return supportedTokens\n}\n","import React from 'react'\nimport { BigNumber } from 'bignumber.js'\nimport dayjs from 'dayjs'\nimport { ethers } from 'ethers'\nimport utc from 'dayjs/plugin/utc'\nimport { client, blockClient } from '../apollo/client'\nimport { GET_BLOCK, GET_BLOCKS, SHARE_VALUE } from '../apollo/queries'\nimport { Text } from 'rebass'\nimport _Decimal from 'decimal.js-light'\nimport toFormat from 'toformat'\nimport { timeframeOptions } from '../constants'\nimport Numeral from 'numeral'\n\n// format libraries\nconst Decimal = toFormat(_Decimal)\nBigNumber.set({ EXPONENTIAL_AT: 50 })\ndayjs.extend(utc)\n\nexport function getTimeframe(timeWindow) {\n  const utcEndTime = dayjs.utc()\n  // based on window, get starttime\n  let utcStartTime\n  switch (timeWindow) {\n    case timeframeOptions.WEEK:\n      utcStartTime = utcEndTime.subtract(1, 'week').endOf('day').unix() - 1\n      break\n    case timeframeOptions.MONTH:\n      utcStartTime = utcEndTime.subtract(1, 'month').endOf('day').unix() - 1\n      break\n    case timeframeOptions.ALL_TIME:\n      utcStartTime = utcEndTime.subtract(1, 'year').endOf('day').unix() - 1\n      break\n    default:\n      utcStartTime = utcEndTime.subtract(1, 'year').startOf('year').unix() - 1\n      break\n  }\n  return utcStartTime\n}\n\nexport function getPoolLink(token0Address, token1Address = null, remove = false) {\n  if (!token1Address) {\n    return (\n      `https://swap.ubiq.fi/#/` +\n      (remove ? `remove` : `add`) +\n      `/${token0Address === '0x1fa6a37c64804c0d797ba6bc1955e50068fbf362' ? 'UBQ' : token0Address}/${'UBQ'}`\n    )\n  } else {\n    return (\n      `https://swap.ubiq.fi/#/` +\n      (remove ? `remove` : `add`) +\n      `/${token0Address === '0x1fa6a37c64804c0d797ba6bc1955e50068fbf362' ? 'UBQ' : token0Address}/${token1Address === '0x1fa6a37c64804c0d797ba6bc1955e50068fbf362' ? 'UBQ' : token1Address\n      }`\n    )\n  }\n}\n\nexport function getSwapLink(token0Address, token1Address = null) {\n  if (!token1Address) {\n    return `https://swap.ubiq.fi/#/swap?inputCurrency=${token0Address}`\n  } else {\n    return `https://swap.ubiq.fi/#/swap?inputCurrency=${token0Address === '0x1fa6a37c64804c0d797ba6bc1955e50068fbf362' ? 'UBQ' : token0Address\n      }&outputCurrency=${token1Address === '0x1fa6a37c64804c0d797ba6bc1955e50068fbf362' ? 'UBQ' : token1Address}`\n  }\n}\n\nexport function getMiningPoolLink(token0Address) {\n  return `https://swap.ubiq.fi/#/uni/UBQ/${token0Address}`\n}\n\nexport function getUniswapAppLink(linkVariable) {\n  let baseUniswapUrl = 'https://swap.ubiq.fi/#/uni'\n  if (!linkVariable) {\n    return baseUniswapUrl\n  }\n\n  return `${baseUniswapUrl}/UBQ/${linkVariable}`\n}\n\nexport function localNumber(val) {\n  return Numeral(val).format('0,0')\n}\n\nexport const toNiceDate = (date) => {\n  let x = dayjs.utc(dayjs.unix(date)).format('MMM DD')\n  return x\n}\n\nexport const toWeeklyDate = (date) => {\n  const formatted = dayjs.utc(dayjs.unix(date))\n  date = new Date(formatted)\n  const day = new Date(formatted).getDay()\n  var lessDays = day === 6 ? 0 : day + 1\n  var wkStart = new Date(new Date(date).setDate(date.getDate() - lessDays))\n  var wkEnd = new Date(new Date(wkStart).setDate(wkStart.getDate() + 6))\n  return dayjs.utc(wkStart).format('MMM DD') + ' - ' + dayjs.utc(wkEnd).format('MMM DD')\n}\n\nexport function getTimestampsForChanges() {\n  const utcCurrentTime = dayjs()\n  const t1 = utcCurrentTime.subtract(1, 'day').startOf('minute').unix()\n  const t2 = utcCurrentTime.subtract(2, 'day').startOf('minute').unix()\n  const tWeek = utcCurrentTime.subtract(1, 'week').startOf('minute').unix()\n  return [t1, t2, tWeek]\n}\n\nexport async function splitQuery(query, localClient, vars, list, skipCount = 100) {\n  let fetchedData = {}\n  let allFound = false\n  let skip = 0\n\n  while (!allFound) {\n    let end = list.length\n    if (skip + skipCount < list.length) {\n      end = skip + skipCount\n    }\n    let sliced = list.slice(skip, end)\n    let result = await localClient.query({\n      query: query(...vars, sliced),\n      fetchPolicy: 'cache-first',\n    })\n    fetchedData = {\n      ...fetchedData,\n      ...result.data,\n    }\n    if (Object.keys(result.data).length < skipCount || skip + skipCount > list.length) {\n      allFound = true\n    } else {\n      skip += skipCount\n    }\n  }\n\n  return fetchedData\n}\n\n/**\n * @notice Fetches first block after a given timestamp\n * @dev Query speed is optimized by limiting to a 600-second period\n * @param {Int} timestamp in seconds\n */\nexport async function getBlockFromTimestamp(timestamp) {\n  let result = await blockClient.query({\n    query: GET_BLOCK,\n    variables: {\n      timestampFrom: timestamp,\n      timestampTo: timestamp + 600,\n    },\n    fetchPolicy: 'cache-first',\n  })\n  return result?.data?.blocks?.[0]?.number\n}\n\n/**\n * @notice Fetches block objects for an array of timestamps.\n * @dev blocks are returned in chronological order (ASC) regardless of input.\n * @dev blocks are returned at string representations of Int\n * @dev timestamps are returns as they were provided; not the block time.\n * @param {Array} timestamps\n */\nexport async function getBlocksFromTimestamps(timestamps, skipCount = 500) {\n  if (timestamps?.length === 0) {\n    return []\n  }\n\n  let fetchedData = await splitQuery(GET_BLOCKS, blockClient, [], timestamps, skipCount)\n\n  let blocks = []\n  if (fetchedData) {\n    for (var t in fetchedData) {\n      if (fetchedData[t].length > 0) {\n        blocks.push({\n          timestamp: t.split('t')[1],\n          number: fetchedData[t][0]['number'],\n        })\n      }\n    }\n  }\n  return blocks\n}\n\nexport async function getLiquidityTokenBalanceOvertime(account, timestamps) {\n  // get blocks based on timestamps\n  const blocks = await getBlocksFromTimestamps(timestamps)\n\n  // get historical share values with time travel queries\n  let result = await client.query({\n    query: SHARE_VALUE(account, blocks),\n    fetchPolicy: 'cache-first',\n  })\n\n  let values = []\n  for (var row in result?.data) {\n    let timestamp = row.split('t')[1]\n    if (timestamp) {\n      values.push({\n        timestamp,\n        balance: 0,\n      })\n    }\n  }\n}\n\n/**\n * @notice Example query using time travel queries\n * @dev TODO - handle scenario where blocks are not available for a timestamps (e.g. current time)\n * @param {String} pairAddress\n * @param {Array} timestamps\n */\nexport async function getShareValueOverTime(pairAddress, timestamps) {\n  if (!timestamps) {\n    const utcCurrentTime = dayjs()\n    const utcSevenDaysBack = utcCurrentTime.subtract(8, 'day').unix()\n    timestamps = getTimestampRange(utcSevenDaysBack, 86400, 7)\n  }\n\n  // get blocks based on timestamps\n  const blocks = await getBlocksFromTimestamps(timestamps)\n\n  // get historical share values with time travel queries\n  let result = await client.query({\n    query: SHARE_VALUE(pairAddress, blocks),\n    fetchPolicy: 'cache-first',\n  })\n\n  let values = []\n  for (var row in result?.data) {\n    let timestamp = row.split('t')[1]\n    let sharePriceUsd = parseFloat(result.data[row]?.reserveUSD) / parseFloat(result.data[row]?.totalSupply)\n    if (timestamp) {\n      values.push({\n        timestamp,\n        sharePriceUsd,\n        totalSupply: result.data[row].totalSupply,\n        reserve0: result.data[row].reserve0,\n        reserve1: result.data[row].reserve1,\n        reserveUSD: result.data[row].reserveUSD,\n        token0DerivedETH: result.data[row].token0.derivedETH,\n        token1DerivedETH: result.data[row].token1.derivedETH,\n        roiUsd: values && values[0] ? sharePriceUsd / values[0]['sharePriceUsd'] : 1,\n        ethPrice: 0,\n        token0PriceUSD: 0,\n        token1PriceUSD: 0,\n      })\n    }\n  }\n\n  // add eth prices\n  let index = 0\n  for (var brow in result?.data) {\n    let timestamp = brow.split('b')[1]\n    if (timestamp) {\n      values[index].ethPrice = result.data[brow].ethPrice\n      values[index].token0PriceUSD = result.data[brow].ethPrice * values[index].token0DerivedETH\n      values[index].token1PriceUSD = result.data[brow].ethPrice * values[index].token1DerivedETH\n      index += 1\n    }\n  }\n\n  return values\n}\n\n/**\n * @notice Creates an evenly-spaced array of timestamps\n * @dev Periods include a start and end timestamp. For example, n periods are defined by n+1 timestamps.\n * @param {Int} timestamp_from in seconds\n * @param {Int} period_length in seconds\n * @param {Int} periods\n */\nexport function getTimestampRange(timestamp_from, period_length, periods) {\n  let timestamps = []\n  for (let i = 0; i <= periods; i++) {\n    timestamps.push(timestamp_from + i * period_length)\n  }\n  return timestamps\n}\n\nexport const toNiceDateYear = (date) => dayjs.utc(dayjs.unix(date)).format('MMMM DD, YYYY')\n\nexport const isAddress = (value) => {\n  try {\n    return ethers.utils.getAddress(value.toLowerCase())\n  } catch {\n    return false\n  }\n}\n\nexport const toK = (num) => {\n  return Numeral(num).format('0.[00]a')\n}\n\nexport const setThemeColor = (theme) => document.documentElement.style.setProperty('--c-token', theme || '#333333')\n\nexport const Big = (number) => new BigNumber(number)\n\nexport const urls = {\n  showTransaction: (tx) => `https://ubiqscan.io/tx/${tx}/`,\n  showAddress: (address) => `https://ubiqscan.io/address/${address}/`,\n  showToken: (address) => `https://ubiqscan.io/token/${address}/`,\n  showBlock: (block) => `https://ubiqscan.io/block/${block}/`,\n}\n\nexport const formatTime = (unix) => {\n  const now = dayjs()\n  const timestamp = dayjs.unix(unix)\n\n  const inSeconds = now.diff(timestamp, 'second')\n  const inMinutes = now.diff(timestamp, 'minute')\n  const inHours = now.diff(timestamp, 'hour')\n  const inDays = now.diff(timestamp, 'day')\n\n  if (inHours >= 24) {\n    return `${inDays} ${inDays === 1 ? 'day' : 'days'} ago`\n  } else if (inMinutes >= 60) {\n    return `${inHours} ${inHours === 1 ? 'hour' : 'hours'} ago`\n  } else if (inSeconds >= 60) {\n    return `${inMinutes} ${inMinutes === 1 ? 'minute' : 'minutes'} ago`\n  } else {\n    return `${inSeconds} ${inSeconds === 1 ? 'second' : 'seconds'} ago`\n  }\n}\n\nexport const formatNumber = (num) => {\n  return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,')\n}\n\n// using a currency library here in case we want to add more in future\nexport const formatDollarAmount = (num, digits) => {\n  const formatter = new Intl.NumberFormat([], {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: digits,\n    maximumFractionDigits: digits,\n  })\n  return formatter.format(num)\n}\n\nexport const toSignificant = (number, significantDigits) => {\n  Decimal.set({ precision: significantDigits + 1, rounding: Decimal.ROUND_UP })\n  const updated = new Decimal(number).toSignificantDigits(significantDigits)\n  return updated.toFormat(updated.decimalPlaces(), { groupSeparator: '' })\n}\n\nexport const formattedNum = (number, usd = false, acceptNegatives = false) => {\n  if (isNaN(number) || number === '' || number === undefined) {\n    return usd ? '$0' : 0\n  }\n  let num = parseFloat(number)\n\n  if (num > 500000000) {\n    return (usd ? '$' : '') + toK(num.toFixed(0), true)\n  }\n\n  if (num === 0) {\n    if (usd) {\n      return '$0'\n    }\n    return 0\n  }\n\n  if (num < 0.0001 && num > 0) {\n    return usd ? '< $0.0001' : '< 0.0001'\n  }\n\n  if (num > 1000) {\n    return usd ? formatDollarAmount(num, 0) : Number(parseFloat(num).toFixed(0)).toLocaleString()\n  }\n\n  if (usd) {\n    if (num < 0.1) {\n      return formatDollarAmount(num, 4)\n    } else {\n      return formatDollarAmount(num, 2)\n    }\n  }\n\n  return Number(parseFloat(num).toFixed(5)).toLocaleString()\n}\n\nexport function rawPercent(percentRaw) {\n  let percent = parseFloat(percentRaw * 100)\n  if (!percent || percent === 0) {\n    return '0%'\n  }\n  if (percent < 1 && percent > 0) {\n    return '< 1%'\n  }\n  return percent.toFixed(0) + '%'\n}\n\nexport function formattedPercent(percent, useBrackets = false) {\n  percent = parseFloat(percent)\n  if (!percent || percent === 0) {\n    return <Text fontWeight={500}>0%</Text>\n  }\n\n  if (percent < 0.0001 && percent > 0) {\n    return (\n      <Text fontWeight={500} color=\"green\">\n        {'< 0.0001%'}\n      </Text>\n    )\n  }\n\n  if (percent < 0 && percent > -0.0001) {\n    return (\n      <Text fontWeight={500} color=\"red\">\n        {'< 0.0001%'}\n      </Text>\n    )\n  }\n\n  let fixedPercent = percent.toFixed(2)\n  if (fixedPercent === '0.00') {\n    return '0%'\n  }\n  if (fixedPercent > 0) {\n    if (fixedPercent > 100) {\n      return <Text fontWeight={500} color=\"green\">{`+${percent?.toFixed(0).toLocaleString()}%`}</Text>\n    } else {\n      return <Text fontWeight={500} color=\"green\">{`+${fixedPercent}%`}</Text>\n    }\n  } else {\n    return <Text fontWeight={500} color=\"red\">{`${fixedPercent}%`}</Text>\n  }\n}\n\n/**\n * gets the amoutn difference plus the % change in change itself (second order change)\n * @param {*} valueNow\n * @param {*} value24HoursAgo\n * @param {*} value48HoursAgo\n */\nexport const get2DayPercentChange = (valueNow, value24HoursAgo, value48HoursAgo) => {\n  // get volume info for both 24 hour periods\n  let currentChange = parseFloat(valueNow) - parseFloat(value24HoursAgo)\n  let previousChange = parseFloat(value24HoursAgo) - parseFloat(value48HoursAgo)\n\n  const adjustedPercentChange = (parseFloat(currentChange - previousChange) / parseFloat(previousChange)) * 100\n\n  if (isNaN(adjustedPercentChange) || !isFinite(adjustedPercentChange)) {\n    return [currentChange, 0]\n  }\n  return [currentChange, adjustedPercentChange]\n}\n\n/**\n * get standard percent change between two values\n * @param {*} valueNow\n * @param {*} value24HoursAgo\n */\nexport const getPercentChange = (valueNow, value24HoursAgo) => {\n  const adjustedPercentChange =\n    ((parseFloat(valueNow) - parseFloat(value24HoursAgo)) / parseFloat(value24HoursAgo)) * 100\n  if (isNaN(adjustedPercentChange) || !isFinite(adjustedPercentChange)) {\n    return 0\n  }\n  return adjustedPercentChange\n}\n\nexport function isEquivalent(a, b) {\n  var aProps = Object.getOwnPropertyNames(a)\n  var bProps = Object.getOwnPropertyNames(b)\n  if (aProps.length !== bProps.length) {\n    return false\n  }\n  for (var i = 0; i < aProps.length; i++) {\n    var propName = aProps[i]\n    if (a[propName] !== b[propName]) {\n      return false\n    }\n  }\n  return true\n}\n","interface BasicData {\n  token0?: {\n    id: string\n    name: string\n    symbol: string\n  }\n  token1?: {\n    id: string\n    name: string\n    symbol: string\n  }\n}\n\n// Override data return from graph - usually because proxy token has changed\n// names since entitiy was created in subgraph\n// keys are lowercase token addresses <--------\nconst TOKEN_OVERRIDES: { [address: string]: { name: string; symbol: string } } = {\n  '0x1fa6a37c64804c0d797ba6bc1955e50068fbf362': {\n    name: 'Ubiq (Wrapped)',\n    symbol: 'UBQ',\n  },\n  '0x068adbc25efa195f13e70812904761100046059c': {\n    name: 'Expanse (Wrapped)',\n    symbol: 'uWEXP'\n  }\n}\n\n// override tokens with incorrect symbol or names\nexport function updateNameData(data: BasicData): BasicData | undefined {\n  if (data?.token0?.id && Object.keys(TOKEN_OVERRIDES).includes(data.token0.id)) {\n    data.token0.name = TOKEN_OVERRIDES[data.token0.id].name\n    data.token0.symbol = TOKEN_OVERRIDES[data.token0.id].symbol\n  }\n\n  if (data?.token1?.id && Object.keys(TOKEN_OVERRIDES).includes(data.token1.id)) {\n    data.token1.name = TOKEN_OVERRIDES[data.token1.id].name\n    data.token1.symbol = TOKEN_OVERRIDES[data.token1.id].symbol\n  }\n\n  return data\n}\n","import React, { createContext, useContext, useReducer, useMemo, useCallback, useEffect, useState } from 'react'\n\nimport { client } from '../apollo/client'\nimport {\n  PAIR_DATA,\n  PAIR_CHART,\n  FILTERED_TRANSACTIONS,\n  PAIRS_CURRENT,\n  PAIRS_BULK,\n  PAIRS_HISTORICAL_BULK,\n  HOURLY_PAIR_RATES,\n} from '../apollo/queries'\n\nimport { useEthPrice } from './GlobalData'\n\nimport dayjs from 'dayjs'\nimport utc from 'dayjs/plugin/utc'\n\nimport {\n  getPercentChange,\n  get2DayPercentChange,\n  isAddress,\n  getBlocksFromTimestamps,\n  getTimestampsForChanges,\n  splitQuery,\n} from '../utils'\nimport { timeframeOptions } from '../constants'\nimport { useLatestBlocks } from './Application'\nimport { updateNameData } from '../utils/data'\n\nconst UPDATE = 'UPDATE'\nconst UPDATE_PAIR_TXNS = 'UPDATE_PAIR_TXNS'\nconst UPDATE_CHART_DATA = 'UPDATE_CHART_DATA'\nconst UPDATE_TOP_PAIRS = 'UPDATE_TOP_PAIRS'\nconst UPDATE_HOURLY_DATA = 'UPDATE_HOURLY_DATA'\n\ndayjs.extend(utc)\n\nexport function safeAccess(object, path) {\n  return object\n    ? path.reduce(\n        (accumulator, currentValue) => (accumulator && accumulator[currentValue] ? accumulator[currentValue] : null),\n        object\n      )\n    : null\n}\n\nconst PairDataContext = createContext()\n\nfunction usePairDataContext() {\n  return useContext(PairDataContext)\n}\n\nfunction reducer(state, { type, payload }) {\n  switch (type) {\n    case UPDATE: {\n      const { pairAddress, data } = payload\n      return {\n        ...state,\n        [pairAddress]: {\n          ...state?.[pairAddress],\n          ...data,\n        },\n      }\n    }\n\n    case UPDATE_TOP_PAIRS: {\n      const { topPairs } = payload\n      let added = {}\n      topPairs.map((pair) => {\n        return (added[pair.id] = pair)\n      })\n      return {\n        ...state,\n        ...added,\n      }\n    }\n\n    case UPDATE_PAIR_TXNS: {\n      const { address, transactions } = payload\n      return {\n        ...state,\n        [address]: {\n          ...(safeAccess(state, [address]) || {}),\n          txns: transactions,\n        },\n      }\n    }\n    case UPDATE_CHART_DATA: {\n      const { address, chartData } = payload\n      return {\n        ...state,\n        [address]: {\n          ...(safeAccess(state, [address]) || {}),\n          chartData,\n        },\n      }\n    }\n\n    case UPDATE_HOURLY_DATA: {\n      const { address, hourlyData, timeWindow } = payload\n      return {\n        ...state,\n        [address]: {\n          ...state?.[address],\n          hourlyData: {\n            ...state?.[address]?.hourlyData,\n            [timeWindow]: hourlyData,\n          },\n        },\n      }\n    }\n\n    default: {\n      throw Error(`Unexpected action type in DataContext reducer: '${type}'.`)\n    }\n  }\n}\n\nexport default function Provider({ children }) {\n  const [state, dispatch] = useReducer(reducer, {})\n\n  // update pair specific data\n  const update = useCallback((pairAddress, data) => {\n    dispatch({\n      type: UPDATE,\n      payload: {\n        pairAddress,\n        data,\n      },\n    })\n  }, [])\n\n  const updateTopPairs = useCallback((topPairs) => {\n    dispatch({\n      type: UPDATE_TOP_PAIRS,\n      payload: {\n        topPairs,\n      },\n    })\n  }, [])\n\n  const updatePairTxns = useCallback((address, transactions) => {\n    dispatch({\n      type: UPDATE_PAIR_TXNS,\n      payload: { address, transactions },\n    })\n  }, [])\n\n  const updateChartData = useCallback((address, chartData) => {\n    dispatch({\n      type: UPDATE_CHART_DATA,\n      payload: { address, chartData },\n    })\n  }, [])\n\n  const updateHourlyData = useCallback((address, hourlyData, timeWindow) => {\n    dispatch({\n      type: UPDATE_HOURLY_DATA,\n      payload: { address, hourlyData, timeWindow },\n    })\n  }, [])\n\n  return (\n    <PairDataContext.Provider\n      value={useMemo(\n        () => [\n          state,\n          {\n            update,\n            updatePairTxns,\n            updateChartData,\n            updateTopPairs,\n            updateHourlyData,\n          },\n        ],\n        [state, update, updatePairTxns, updateChartData, updateTopPairs, updateHourlyData]\n      )}\n    >\n      {children}\n    </PairDataContext.Provider>\n  )\n}\n\nasync function getBulkPairData(pairList, ethPrice) {\n  const [t1, t2, tWeek] = getTimestampsForChanges()\n  let [{ number: b1 }, { number: b2 }, { number: bWeek }] = await getBlocksFromTimestamps([t1, t2, tWeek])\n\n  try {\n    let current = await client.query({\n      query: PAIRS_BULK,\n      variables: {\n        allPairs: pairList,\n      },\n      fetchPolicy: 'cache-first',\n    })\n\n    let [oneDayResult, twoDayResult, oneWeekResult] = await Promise.all(\n      [b1, b2, bWeek].map(async (block) => {\n        let result = client.query({\n          query: PAIRS_HISTORICAL_BULK(block, pairList),\n          fetchPolicy: 'cache-first',\n        })\n        return result\n      })\n    )\n\n    let oneDayData = oneDayResult?.data?.pairs.reduce((obj, cur, i) => {\n      return { ...obj, [cur.id]: cur }\n    }, {})\n\n    let twoDayData = twoDayResult?.data?.pairs.reduce((obj, cur, i) => {\n      return { ...obj, [cur.id]: cur }\n    }, {})\n\n    let oneWeekData = oneWeekResult?.data?.pairs.reduce((obj, cur, i) => {\n      return { ...obj, [cur.id]: cur }\n    }, {})\n\n    let pairData = await Promise.all(\n      current &&\n        current.data.pairs.map(async (pair) => {\n          let data = pair\n          let oneDayHistory = oneDayData?.[pair.id]\n          if (!oneDayHistory) {\n            let newData = await client.query({\n              query: PAIR_DATA(pair.id, b1),\n              fetchPolicy: 'cache-first',\n            })\n            oneDayHistory = newData.data.pairs[0]\n          }\n          let twoDayHistory = twoDayData?.[pair.id]\n          if (!twoDayHistory) {\n            let newData = await client.query({\n              query: PAIR_DATA(pair.id, b2),\n              fetchPolicy: 'cache-first',\n            })\n            twoDayHistory = newData.data.pairs[0]\n          }\n          let oneWeekHistory = oneWeekData?.[pair.id]\n          if (!oneWeekHistory) {\n            let newData = await client.query({\n              query: PAIR_DATA(pair.id, bWeek),\n              fetchPolicy: 'cache-first',\n            })\n            oneWeekHistory = newData.data.pairs[0]\n          }\n          data = parseData(data, oneDayHistory, twoDayHistory, oneWeekHistory, ethPrice, b1)\n          return data\n        })\n    )\n    return pairData\n  } catch (e) {\n    console.log(e)\n  }\n}\n\nfunction parseData(data, oneDayData, twoDayData, oneWeekData, ethPrice, oneDayBlock) {\n  // get volume changes\n  const [oneDayVolumeUSD, volumeChangeUSD] = get2DayPercentChange(\n    data?.volumeUSD,\n    oneDayData?.volumeUSD ? oneDayData.volumeUSD : 0,\n    twoDayData?.volumeUSD ? twoDayData.volumeUSD : 0\n  )\n  const [oneDayVolumeUntracked, volumeChangeUntracked] = get2DayPercentChange(\n    data?.untrackedVolumeUSD,\n    oneDayData?.untrackedVolumeUSD ? parseFloat(oneDayData?.untrackedVolumeUSD) : 0,\n    twoDayData?.untrackedVolumeUSD ? twoDayData?.untrackedVolumeUSD : 0\n  )\n\n  const oneWeekVolumeUSD = parseFloat(oneWeekData ? data?.volumeUSD - oneWeekData?.volumeUSD : data.volumeUSD)\n\n  const oneWeekVolumeUntracked = parseFloat(\n    oneWeekData ? data?.untrackedVolumeUSD - oneWeekData?.untrackedVolumeUSD : data.untrackedVolumeUSD\n  )\n\n  // set volume properties\n  data.oneDayVolumeUSD = parseFloat(oneDayVolumeUSD)\n  data.oneWeekVolumeUSD = oneWeekVolumeUSD\n  data.volumeChangeUSD = volumeChangeUSD\n  data.oneDayVolumeUntracked = oneDayVolumeUntracked\n  data.oneWeekVolumeUntracked = oneWeekVolumeUntracked\n  data.volumeChangeUntracked = volumeChangeUntracked\n\n  // set liquidity properties\n  data.trackedReserveUSD = data.trackedReserveETH * ethPrice\n  data.liquidityChangeUSD = getPercentChange(data.reserveUSD, oneDayData?.reserveUSD)\n\n  // format if pair hasnt existed for a day or a week\n  if (!oneDayData && data && data.createdAtBlockNumber > oneDayBlock) {\n    data.oneDayVolumeUSD = parseFloat(data.volumeUSD)\n  }\n  if (!oneDayData && data) {\n    data.oneDayVolumeUSD = parseFloat(data.volumeUSD)\n  }\n  if (!oneWeekData && data) {\n    data.oneWeekVolumeUSD = parseFloat(data.volumeUSD)\n  }\n\n  // format incorrect names\n  updateNameData(data)\n\n  return data\n}\n\nconst getPairTransactions = async (pairAddress) => {\n  const transactions = {}\n\n  try {\n    let result = await client.query({\n      query: FILTERED_TRANSACTIONS,\n      variables: {\n        allPairs: [pairAddress],\n      },\n      fetchPolicy: 'no-cache',\n    })\n    transactions.mints = result.data.mints\n    transactions.burns = result.data.burns\n    transactions.swaps = result.data.swaps\n  } catch (e) {\n    console.log(e)\n  }\n\n  return transactions\n}\n\nconst getPairChartData = async (pairAddress) => {\n  let data = []\n  const utcEndTime = dayjs.utc()\n  let utcStartTime = utcEndTime.subtract(1, 'year').startOf('minute')\n  let startTime = utcStartTime.unix() - 1\n\n  try {\n    let allFound = false\n    let skip = 0\n    while (!allFound) {\n      let result = await client.query({\n        query: PAIR_CHART,\n        variables: {\n          pairAddress: pairAddress,\n          skip,\n        },\n        fetchPolicy: 'cache-first',\n      })\n      skip += 1000\n      data = data.concat(result.data.pairDayDatas)\n      if (result.data.pairDayDatas.length < 1000) {\n        allFound = true\n      }\n    }\n\n    let dayIndexSet = new Set()\n    let dayIndexArray = []\n    const oneDay = 24 * 60 * 60\n    data.forEach((dayData, i) => {\n      // add the day index to the set of days\n      dayIndexSet.add((data[i].date / oneDay).toFixed(0))\n      dayIndexArray.push(data[i])\n      dayData.dailyVolumeUSD = parseFloat(dayData.dailyVolumeUSD)\n      dayData.reserveUSD = parseFloat(dayData.reserveUSD)\n    })\n\n    if (data[0]) {\n      // fill in empty days\n      let timestamp = data[0].date ? data[0].date : startTime\n      let latestLiquidityUSD = data[0].reserveUSD\n      let index = 1\n      while (timestamp < utcEndTime.unix() - oneDay) {\n        const nextDay = timestamp + oneDay\n        let currentDayIndex = (nextDay / oneDay).toFixed(0)\n        if (!dayIndexSet.has(currentDayIndex)) {\n          data.push({\n            date: nextDay,\n            dayString: nextDay,\n            dailyVolumeUSD: 0,\n            reserveUSD: latestLiquidityUSD,\n          })\n        } else {\n          latestLiquidityUSD = dayIndexArray[index].reserveUSD\n          index = index + 1\n        }\n        timestamp = nextDay\n      }\n    }\n\n    data = data.sort((a, b) => (parseInt(a.date) > parseInt(b.date) ? 1 : -1))\n  } catch (e) {\n    console.log(e)\n  }\n\n  return data\n}\n\nconst getHourlyRateData = async (pairAddress, startTime, latestBlock) => {\n  try {\n    const utcEndTime = dayjs.utc()\n    let time = startTime\n\n    // create an array of hour start times until we reach current hour\n    const timestamps = []\n    while (time <= utcEndTime.unix() - 3600) {\n      timestamps.push(time)\n      time += 3600\n    }\n\n    // backout if invalid timestamp format\n    if (timestamps.length === 0) {\n      return []\n    }\n\n    // once you have all the timestamps, get the blocks for each timestamp in a bulk query\n    let blocks\n\n    blocks = await getBlocksFromTimestamps(timestamps, 100)\n\n    // catch failing case\n    if (!blocks || blocks?.length === 0) {\n      return []\n    }\n\n    if (latestBlock) {\n      blocks = blocks.filter((b) => {\n        return parseFloat(b.number) <= parseFloat(latestBlock)\n      })\n    }\n\n    const result = await splitQuery(HOURLY_PAIR_RATES, client, [pairAddress], blocks, 100)\n\n    // format token ETH price results\n    let values = []\n    for (var row in result) {\n      let timestamp = row.split('t')[1]\n      if (timestamp) {\n        values.push({\n          timestamp,\n          rate0: parseFloat(result[row]?.token0Price),\n          rate1: parseFloat(result[row]?.token1Price),\n        })\n      }\n    }\n\n    let formattedHistoryRate0 = []\n    let formattedHistoryRate1 = []\n\n    // for each hour, construct the open and close price\n    for (let i = 0; i < values.length - 1; i++) {\n      formattedHistoryRate0.push({\n        timestamp: values[i].timestamp,\n        open: parseFloat(values[i].rate0),\n        close: parseFloat(values[i + 1].rate0),\n      })\n      formattedHistoryRate1.push({\n        timestamp: values[i].timestamp,\n        open: parseFloat(values[i].rate1),\n        close: parseFloat(values[i + 1].rate1),\n      })\n    }\n\n    return [formattedHistoryRate0, formattedHistoryRate1]\n  } catch (e) {\n    console.log(e)\n    return [[], []]\n  }\n}\n\nexport function Updater() {\n  const [, { updateTopPairs }] = usePairDataContext()\n  const [ethPrice] = useEthPrice()\n  useEffect(() => {\n    async function getData() {\n      // get top pairs by reserves\n      let {\n        data: { pairs },\n      } = await client.query({\n        query: PAIRS_CURRENT,\n        fetchPolicy: 'cache-first',\n      })\n\n      // format as array of addresses\n      const formattedPairs = pairs.map((pair) => {\n        return pair.id\n      })\n\n      // get data for every pair in list\n      let topPairs = await getBulkPairData(formattedPairs, ethPrice)\n      topPairs && updateTopPairs(topPairs)\n    }\n    ethPrice && getData()\n  }, [ethPrice, updateTopPairs])\n  return null\n}\n\nexport function useHourlyRateData(pairAddress, timeWindow) {\n  const [state, { updateHourlyData }] = usePairDataContext()\n  const chartData = state?.[pairAddress]?.hourlyData?.[timeWindow]\n  const [latestBlock] = useLatestBlocks()\n\n  useEffect(() => {\n    const currentTime = dayjs.utc()\n    const windowSize = timeWindow === timeframeOptions.MONTH ? 'month' : 'week'\n    const startTime =\n      timeWindow === timeframeOptions.ALL_TIME ? 1589760000 : currentTime.subtract(1, windowSize).startOf('hour').unix()\n\n    async function fetch() {\n      let data = await getHourlyRateData(pairAddress, startTime, latestBlock)\n      updateHourlyData(pairAddress, data, timeWindow)\n    }\n    if (!chartData) {\n      fetch()\n    }\n  }, [chartData, timeWindow, pairAddress, updateHourlyData, latestBlock])\n\n  return chartData\n}\n\n/**\n * @todo\n * store these updates to reduce future redundant calls\n */\nexport function useDataForList(pairList) {\n  const [state] = usePairDataContext()\n  const [ethPrice] = useEthPrice()\n\n  const [stale, setStale] = useState(false)\n  const [fetched, setFetched] = useState([])\n\n  // reset\n  useEffect(() => {\n    if (pairList) {\n      setStale(false)\n      setFetched()\n    }\n  }, [pairList])\n\n  useEffect(() => {\n    async function fetchNewPairData() {\n      let newFetched = []\n      let unfetched = []\n\n      pairList.map(async (pair) => {\n        let currentData = state?.[pair.id]\n        if (!currentData) {\n          unfetched.push(pair.id)\n        } else {\n          newFetched.push(currentData)\n        }\n      })\n\n      let newPairData = await getBulkPairData(\n        unfetched.map((pair) => {\n          return pair\n        }),\n        ethPrice\n      )\n      setFetched(newFetched.concat(newPairData))\n    }\n    if (ethPrice && pairList && pairList.length > 0 && !fetched && !stale) {\n      setStale(true)\n      fetchNewPairData()\n    }\n  }, [ethPrice, state, pairList, stale, fetched])\n\n  let formattedFetch =\n    fetched &&\n    fetched.reduce((obj, cur) => {\n      return { ...obj, [cur?.id]: cur }\n    }, {})\n\n  return formattedFetch\n}\n\n/**\n * Get all the current and 24hr changes for a pair\n */\nexport function usePairData(pairAddress) {\n  const [state, { update }] = usePairDataContext()\n  const [ethPrice] = useEthPrice()\n  const pairData = state?.[pairAddress]\n\n  useEffect(() => {\n    async function fetchData() {\n      if (!pairData && pairAddress) {\n        let data = await getBulkPairData([pairAddress], ethPrice)\n        data && update(pairAddress, data[0])\n      }\n    }\n    if (!pairData && pairAddress && ethPrice && isAddress(pairAddress)) {\n      fetchData()\n    }\n  }, [pairAddress, pairData, update, ethPrice])\n\n  return pairData || {}\n}\n\n/**\n * Get most recent txns for a pair\n */\nexport function usePairTransactions(pairAddress) {\n  const [state, { updatePairTxns }] = usePairDataContext()\n  const pairTxns = state?.[pairAddress]?.txns\n  useEffect(() => {\n    async function checkForTxns() {\n      if (!pairTxns) {\n        let transactions = await getPairTransactions(pairAddress)\n        updatePairTxns(pairAddress, transactions)\n      }\n    }\n    checkForTxns()\n  }, [pairTxns, pairAddress, updatePairTxns])\n  return pairTxns\n}\n\nexport function usePairChartData(pairAddress) {\n  const [state, { updateChartData }] = usePairDataContext()\n  const chartData = state?.[pairAddress]?.chartData\n\n  useEffect(() => {\n    async function checkForChartData() {\n      if (!chartData) {\n        let data = await getPairChartData(pairAddress)\n        updateChartData(pairAddress, data)\n      }\n    }\n    checkForChartData()\n  }, [chartData, pairAddress, updateChartData])\n  return chartData\n}\n\n/**\n * Get list of all pairs in Uniswap\n */\nexport function useAllPairData() {\n  const [state] = usePairDataContext()\n  return state || {}\n}\n","import React, { createContext, useContext, useReducer, useMemo, useCallback, useEffect, useState } from 'react'\nimport { client } from '../apollo/client'\nimport dayjs from 'dayjs'\nimport utc from 'dayjs/plugin/utc'\nimport { useTimeframe } from './Application'\nimport {\n  getPercentChange,\n  getBlockFromTimestamp,\n  getBlocksFromTimestamps,\n  get2DayPercentChange,\n  getTimeframe,\n} from '../utils'\nimport {\n  GLOBAL_DATA,\n  GLOBAL_TXNS,\n  GLOBAL_CHART,\n  ETH_PRICE,\n  ALL_PAIRS,\n  ALL_TOKENS,\n  TOP_LPS_PER_PAIRS,\n} from '../apollo/queries'\nimport weekOfYear from 'dayjs/plugin/weekOfYear'\nimport { useAllPairData } from './PairData'\nconst UPDATE = 'UPDATE'\nconst UPDATE_TXNS = 'UPDATE_TXNS'\nconst UPDATE_CHART = 'UPDATE_CHART'\nconst UPDATE_ETH_PRICE = 'UPDATE_ETH_PRICE'\nconst ETH_PRICE_KEY = 'ETH_PRICE_KEY'\nconst UPDATE_ALL_PAIRS_IN_UNISWAP = 'UPDAUPDATE_ALL_PAIRS_IN_UNISWAPTE_TOP_PAIRS'\nconst UPDATE_ALL_TOKENS_IN_UNISWAP = 'UPDATE_ALL_TOKENS_IN_UNISWAP'\nconst UPDATE_TOP_LPS = 'UPDATE_TOP_LPS'\n\n// format dayjs with the libraries that we need\ndayjs.extend(utc)\ndayjs.extend(weekOfYear)\n\nconst GlobalDataContext = createContext()\n\nfunction useGlobalDataContext() {\n  return useContext(GlobalDataContext)\n}\n\nfunction reducer(state, { type, payload }) {\n  switch (type) {\n    case UPDATE: {\n      const { data } = payload\n      return {\n        ...state,\n        globalData: data,\n      }\n    }\n    case UPDATE_TXNS: {\n      const { transactions } = payload\n      return {\n        ...state,\n        transactions,\n      }\n    }\n    case UPDATE_CHART: {\n      const { daily, weekly } = payload\n      return {\n        ...state,\n        chartData: {\n          daily,\n          weekly,\n        },\n      }\n    }\n    case UPDATE_ETH_PRICE: {\n      const { ethPrice, oneDayPrice, ethPriceChange } = payload\n      return {\n        [ETH_PRICE_KEY]: ethPrice,\n        oneDayPrice,\n        ethPriceChange,\n      }\n    }\n\n    case UPDATE_ALL_PAIRS_IN_UNISWAP: {\n      const { allPairs } = payload\n      return {\n        ...state,\n        allPairs,\n      }\n    }\n\n    case UPDATE_ALL_TOKENS_IN_UNISWAP: {\n      const { allTokens } = payload\n      return {\n        ...state,\n        allTokens,\n      }\n    }\n\n    case UPDATE_TOP_LPS: {\n      const { topLps } = payload\n      return {\n        ...state,\n        topLps,\n      }\n    }\n    default: {\n      throw Error(`Unexpected action type in DataContext reducer: '${type}'.`)\n    }\n  }\n}\n\nexport default function Provider({ children }) {\n  const [state, dispatch] = useReducer(reducer, {})\n  const update = useCallback((data) => {\n    dispatch({\n      type: UPDATE,\n      payload: {\n        data,\n      },\n    })\n  }, [])\n\n  const updateTransactions = useCallback((transactions) => {\n    dispatch({\n      type: UPDATE_TXNS,\n      payload: {\n        transactions,\n      },\n    })\n  }, [])\n\n  const updateChart = useCallback((daily, weekly) => {\n    dispatch({\n      type: UPDATE_CHART,\n      payload: {\n        daily,\n        weekly,\n      },\n    })\n  }, [])\n\n  const updateEthPrice = useCallback((ethPrice, oneDayPrice, ethPriceChange) => {\n    dispatch({\n      type: UPDATE_ETH_PRICE,\n      payload: {\n        ethPrice,\n        oneDayPrice,\n        ethPriceChange,\n      },\n    })\n  }, [])\n\n  const updateAllPairsInUniswap = useCallback((allPairs) => {\n    dispatch({\n      type: UPDATE_ALL_PAIRS_IN_UNISWAP,\n      payload: {\n        allPairs,\n      },\n    })\n  }, [])\n\n  const updateAllTokensInUniswap = useCallback((allTokens) => {\n    dispatch({\n      type: UPDATE_ALL_TOKENS_IN_UNISWAP,\n      payload: {\n        allTokens,\n      },\n    })\n  }, [])\n\n  const updateTopLps = useCallback((topLps) => {\n    dispatch({\n      type: UPDATE_TOP_LPS,\n      payload: {\n        topLps,\n      },\n    })\n  }, [])\n  return (\n    <GlobalDataContext.Provider\n      value={useMemo(\n        () => [\n          state,\n          {\n            update,\n            updateTransactions,\n            updateChart,\n            updateEthPrice,\n            updateTopLps,\n            updateAllPairsInUniswap,\n            updateAllTokensInUniswap,\n          },\n        ],\n        [\n          state,\n          update,\n          updateTransactions,\n          updateTopLps,\n          updateChart,\n          updateEthPrice,\n          updateAllPairsInUniswap,\n          updateAllTokensInUniswap,\n        ]\n      )}\n    >\n      {children}\n    </GlobalDataContext.Provider>\n  )\n}\n\n/**\n * Gets all the global data for the overview page.\n * Needs current eth price and the old eth price to get\n * 24 hour USD changes.\n * @param {*} ethPrice\n * @param {*} oldEthPrice\n */\nasync function getGlobalData(ethPrice, oldEthPrice) {\n  // data for each day , historic data used for % changes\n  let data = {}\n  let oneDayData = {}\n  let twoDayData = {}\n\n  try {\n    // get timestamps for the days\n    const utcCurrentTime = dayjs()\n    const utcOneDayBack = utcCurrentTime.subtract(1, 'day').unix()\n    const utcTwoDaysBack = utcCurrentTime.subtract(2, 'day').unix()\n    const utcOneWeekBack = utcCurrentTime.subtract(1, 'week').unix()\n    const utcTwoWeeksBack = utcCurrentTime.subtract(2, 'week').unix()\n\n    // get the blocks needed for time travel queries\n    let [oneDayBlock, twoDayBlock, oneWeekBlock, twoWeekBlock] = await getBlocksFromTimestamps([\n      utcOneDayBack,\n      utcTwoDaysBack,\n      utcOneWeekBack,\n      utcTwoWeeksBack,\n    ])\n\n    // fetch the global data\n    let result = await client.query({\n      query: GLOBAL_DATA(),\n      fetchPolicy: 'cache-first',\n    })\n    data = result.data.uniswapFactories[0]\n\n    // fetch the historical data\n    let oneDayResult = await client.query({\n      query: GLOBAL_DATA(oneDayBlock?.number),\n      fetchPolicy: 'cache-first',\n    })\n    oneDayData = oneDayResult.data.uniswapFactories[0]\n\n    let twoDayResult = await client.query({\n      query: GLOBAL_DATA(twoDayBlock?.number),\n      fetchPolicy: 'cache-first',\n    })\n    twoDayData = twoDayResult.data.uniswapFactories[0]\n\n    let oneWeekResult = await client.query({\n      query: GLOBAL_DATA(oneWeekBlock?.number),\n      fetchPolicy: 'cache-first',\n    })\n    const oneWeekData = oneWeekResult.data.uniswapFactories[0]\n\n    let twoWeekResult = await client.query({\n      query: GLOBAL_DATA(twoWeekBlock?.number),\n      fetchPolicy: 'cache-first',\n    })\n    const twoWeekData = twoWeekResult.data.uniswapFactories[0]\n\n    if (data && oneDayData && twoDayData && twoWeekData) {\n      let [oneDayVolumeUSD, volumeChangeUSD] = get2DayPercentChange(\n        data.totalVolumeUSD,\n        oneDayData.totalVolumeUSD ? oneDayData.totalVolumeUSD : 0,\n        twoDayData.totalVolumeUSD ? twoDayData.totalVolumeUSD : 0\n      )\n\n      const [oneWeekVolume, weeklyVolumeChange] = get2DayPercentChange(\n        data.totalVolumeUSD,\n        oneWeekData.totalVolumeUSD,\n        twoWeekData.totalVolumeUSD\n      )\n\n      const [oneDayTxns, txnChange] = get2DayPercentChange(\n        data.txCount,\n        oneDayData.txCount ? oneDayData.txCount : 0,\n        twoDayData.txCount ? twoDayData.txCount : 0\n      )\n\n      // format the total liquidity in USD\n      data.totalLiquidityUSD = data.totalLiquidityETH * ethPrice\n      const liquidityChangeUSD = getPercentChange(\n        data.totalLiquidityETH * ethPrice,\n        oneDayData.totalLiquidityETH * oldEthPrice\n      )\n\n      // add relevant fields with the calculated amounts\n      data.oneDayVolumeUSD = oneDayVolumeUSD\n      data.oneWeekVolume = oneWeekVolume\n      data.weeklyVolumeChange = weeklyVolumeChange\n      data.volumeChangeUSD = volumeChangeUSD\n      data.liquidityChangeUSD = liquidityChangeUSD\n      data.oneDayTxns = oneDayTxns\n      data.txnChange = txnChange\n    }\n  } catch (e) {\n    console.log(e)\n  }\n\n  return data\n}\n\n/**\n * Get historical data for volume and liquidity used in global charts\n * on main page\n * @param {*} oldestDateToFetch // start of window to fetch from\n */\nconst getChartData = async (oldestDateToFetch) => {\n  let data = []\n  let weeklyData = []\n  const utcEndTime = dayjs.utc()\n  let skip = 0\n  let allFound = false\n\n  try {\n    while (!allFound) {\n      let result = await client.query({\n        query: GLOBAL_CHART,\n        variables: {\n          startTime: oldestDateToFetch,\n          skip,\n        },\n        fetchPolicy: 'cache-first',\n      })\n      skip += 1000\n      data = data.concat(result.data.uniswapDayDatas)\n      if (result.data.uniswapDayDatas.length < 1000) {\n        allFound = true\n      }\n    }\n\n    if (data) {\n      let dayIndexSet = new Set()\n      let dayIndexArray = []\n      const oneDay = 24 * 60 * 60\n\n      // for each day, parse the daily volume and format for chart array\n      data.forEach((dayData, i) => {\n        // add the day index to the set of days\n        dayIndexSet.add((data[i].date / oneDay).toFixed(0))\n        dayIndexArray.push(data[i])\n        dayData.dailyVolumeUSD = parseFloat(dayData.dailyVolumeUSD)\n      })\n\n      // fill in empty days ( there will be no day datas if no trades made that day )\n      let timestamp = data[0].date ? data[0].date : oldestDateToFetch\n      let latestLiquidityUSD = data[0].totalLiquidityUSD\n      let latestDayDats = data[0].mostLiquidTokens\n      let index = 1\n      while (timestamp < utcEndTime.unix() - oneDay) {\n        const nextDay = timestamp + oneDay\n        let currentDayIndex = (nextDay / oneDay).toFixed(0)\n        if (!dayIndexSet.has(currentDayIndex)) {\n          data.push({\n            date: nextDay,\n            dailyVolumeUSD: 0,\n            totalLiquidityUSD: latestLiquidityUSD,\n            mostLiquidTokens: latestDayDats,\n          })\n        } else {\n          latestLiquidityUSD = dayIndexArray[index].totalLiquidityUSD\n          latestDayDats = dayIndexArray[index].mostLiquidTokens\n          index = index + 1\n        }\n        timestamp = nextDay\n      }\n    }\n\n    // format weekly data for weekly sized chunks\n    data = data.sort((a, b) => (parseInt(a.date) > parseInt(b.date) ? 1 : -1))\n    let startIndexWeekly = -1\n    let currentWeek = -1\n    data.forEach((entry, i) => {\n      const week = dayjs.utc(dayjs.unix(data[i].date)).week()\n      if (week !== currentWeek) {\n        currentWeek = week\n        startIndexWeekly++\n      }\n      weeklyData[startIndexWeekly] = weeklyData[startIndexWeekly] || {}\n      weeklyData[startIndexWeekly].date = data[i].date\n      weeklyData[startIndexWeekly].weeklyVolumeUSD =\n        (weeklyData[startIndexWeekly].weeklyVolumeUSD ?? 0) + data[i].dailyVolumeUSD\n    })\n  } catch (e) {\n    console.log(e)\n  }\n  return [data, weeklyData]\n}\n\n/**\n * Get and format transactions for global page\n */\nconst getGlobalTransactions = async () => {\n  let transactions = {}\n\n  try {\n    let result = await client.query({\n      query: GLOBAL_TXNS,\n      fetchPolicy: 'cache-first',\n    })\n    transactions.mints = []\n    transactions.burns = []\n    transactions.swaps = []\n    result?.data?.transactions &&\n      result.data.transactions.map((transaction) => {\n        if (transaction.mints.length > 0) {\n          transaction.mints.map((mint) => {\n            return transactions.mints.push(mint)\n          })\n        }\n        if (transaction.burns.length > 0) {\n          transaction.burns.map((burn) => {\n            return transactions.burns.push(burn)\n          })\n        }\n        if (transaction.swaps.length > 0) {\n          transaction.swaps.map((swap) => {\n            return transactions.swaps.push(swap)\n          })\n        }\n        return true\n      })\n  } catch (e) {\n    console.log(e)\n  }\n\n  return transactions\n}\n\n/**\n * Gets the current price  of ETH, 24 hour price, and % change between them\n */\nconst getEthPrice = async () => {\n  const utcCurrentTime = dayjs()\n  const utcOneDayBack = utcCurrentTime.subtract(1, 'day').startOf('minute').unix()\n\n  let ethPrice = 0\n  let ethPriceOneDay = 0\n  let priceChangeETH = 0\n\n  try {\n    let oneDayBlock = await getBlockFromTimestamp(utcOneDayBack)\n    let result = await client.query({\n      query: ETH_PRICE(),\n      fetchPolicy: 'cache-first',\n    })\n    let resultOneDay = await client.query({\n      query: ETH_PRICE(oneDayBlock),\n      fetchPolicy: 'cache-first',\n    })\n    const currentPrice = result?.data?.bundles[0]?.ethPrice\n    const oneDayBackPrice = resultOneDay?.data?.bundles[0]?.ethPrice\n    priceChangeETH = getPercentChange(currentPrice, oneDayBackPrice)\n    ethPrice = currentPrice\n    ethPriceOneDay = oneDayBackPrice\n  } catch (e) {\n    console.log(e)\n  }\n\n  return [ethPrice, ethPriceOneDay, priceChangeETH]\n}\n\nconst PAIRS_TO_FETCH = 500\nconst TOKENS_TO_FETCH = 500\n\n/**\n * Loop through every pair on uniswap, used for search\n */\nasync function getAllPairsOnUniswap() {\n  try {\n    let allFound = false\n    let pairs = []\n    let skipCount = 0\n    while (!allFound) {\n      let result = await client.query({\n        query: ALL_PAIRS,\n        variables: {\n          skip: skipCount,\n        },\n        fetchPolicy: 'cache-first',\n      })\n      skipCount = skipCount + PAIRS_TO_FETCH\n      pairs = pairs.concat(result?.data?.pairs)\n      if (result?.data?.pairs.length < PAIRS_TO_FETCH || pairs.length > PAIRS_TO_FETCH) {\n        allFound = true\n      }\n    }\n    return pairs\n  } catch (e) {\n    console.log(e)\n  }\n}\n\n/**\n * Loop through every token on uniswap, used for search\n */\nasync function getAllTokensOnUniswap() {\n  try {\n    let allFound = false\n    let skipCount = 0\n    let tokens = []\n    while (!allFound) {\n      let result = await client.query({\n        query: ALL_TOKENS,\n        variables: {\n          skip: skipCount,\n        },\n        fetchPolicy: 'cache-first',\n      })\n      tokens = tokens.concat(result?.data?.tokens)\n      if (result?.data?.tokens?.length < TOKENS_TO_FETCH || tokens.length > TOKENS_TO_FETCH) {\n        allFound = true\n      }\n      skipCount = skipCount += TOKENS_TO_FETCH\n    }\n    return tokens\n  } catch (e) {\n    console.log(e)\n  }\n}\n\n/**\n * Hook that fetches overview data, plus all tokens and pairs for search\n */\nexport function useGlobalData() {\n  const [state, { update, updateAllPairsInUniswap, updateAllTokensInUniswap }] = useGlobalDataContext()\n  const [ethPrice, oldEthPrice] = useEthPrice()\n\n  const data = state?.globalData\n\n  useEffect(() => {\n    async function fetchData() {\n      let globalData = await getGlobalData(ethPrice, oldEthPrice)\n      globalData && update(globalData)\n\n      let allPairs = await getAllPairsOnUniswap()\n      updateAllPairsInUniswap(allPairs)\n\n      let allTokens = await getAllTokensOnUniswap()\n      updateAllTokensInUniswap(allTokens)\n    }\n    if (!data && ethPrice && oldEthPrice) {\n      fetchData()\n    }\n  }, [ethPrice, oldEthPrice, update, data, updateAllPairsInUniswap, updateAllTokensInUniswap])\n\n  return data || {}\n}\n\nexport function useGlobalChartData() {\n  const [state, { updateChart }] = useGlobalDataContext()\n  const [oldestDateFetch, setOldestDateFetched] = useState()\n  const [activeWindow] = useTimeframe()\n\n  const chartDataDaily = state?.chartData?.daily\n  const chartDataWeekly = state?.chartData?.weekly\n\n  /**\n   * Keep track of oldest date fetched. Used to\n   * limit data fetched until its actually needed.\n   * (dont fetch year long stuff unless year option selected)\n   */\n  useEffect(() => {\n    // based on window, get starttime\n    let startTime = getTimeframe(activeWindow)\n\n    if ((activeWindow && startTime < oldestDateFetch) || !oldestDateFetch) {\n      setOldestDateFetched(startTime)\n    }\n  }, [activeWindow, oldestDateFetch])\n\n  /**\n   * Fetch data if none fetched or older data is needed\n   */\n  useEffect(() => {\n    async function fetchData() {\n      // historical stuff for chart\n      let [newChartData, newWeeklyData] = await getChartData(oldestDateFetch)\n      updateChart(newChartData, newWeeklyData)\n    }\n    if (oldestDateFetch && !(chartDataDaily && chartDataWeekly)) {\n      fetchData()\n    }\n  }, [chartDataDaily, chartDataWeekly, oldestDateFetch, updateChart])\n\n  return [chartDataDaily, chartDataWeekly]\n}\n\nexport function useGlobalTransactions() {\n  const [state, { updateTransactions }] = useGlobalDataContext()\n  const transactions = state?.transactions\n  useEffect(() => {\n    async function fetchData() {\n      if (!transactions) {\n        let txns = await getGlobalTransactions()\n        updateTransactions(txns)\n      }\n    }\n    fetchData()\n  }, [updateTransactions, transactions])\n  return transactions\n}\n\nexport function useEthPrice() {\n  const [state, { updateEthPrice }] = useGlobalDataContext()\n  const ethPrice = state?.[ETH_PRICE_KEY]\n  const ethPriceOld = state?.['oneDayPrice']\n  useEffect(() => {\n    async function checkForEthPrice() {\n      if (!ethPrice) {\n        let [newPrice, oneDayPrice, priceChange] = await getEthPrice()\n        updateEthPrice(newPrice, oneDayPrice, priceChange)\n      }\n    }\n    checkForEthPrice()\n  }, [ethPrice, updateEthPrice])\n\n  return [ethPrice, ethPriceOld]\n}\n\nexport function useAllPairsInUniswap() {\n  const [state] = useGlobalDataContext()\n  let allPairs = state?.allPairs\n\n  return allPairs || []\n}\n\nexport function useAllTokensInUniswap() {\n  const [state] = useGlobalDataContext()\n  let allTokens = state?.allTokens\n\n  return allTokens || []\n}\n\n/**\n * Get the top liquidity positions based on USD size\n * @TODO Not a perfect lookup needs improvement\n */\nexport function useTopLps() {\n  const [state, { updateTopLps }] = useGlobalDataContext()\n  let topLps = state?.topLps\n\n  const allPairs = useAllPairData()\n\n  useEffect(() => {\n    async function fetchData() {\n      // get top 20 by reserves\n      let topPairs = Object.keys(allPairs)\n        ?.sort((a, b) => parseFloat(allPairs[a].reserveUSD > allPairs[b].reserveUSD ? -1 : 1))\n        ?.slice(0, 99)\n        .map((pair) => pair)\n\n      let topLpLists = await Promise.all(\n        topPairs.map(async (pair) => {\n          // for each one, fetch top LPs\n          try {\n            const { data: results } = await client.query({\n              query: TOP_LPS_PER_PAIRS,\n              variables: {\n                pair: pair.toString(),\n              },\n              fetchPolicy: 'cache-first',\n            })\n            if (results) {\n              return results.liquidityPositions\n            }\n          } catch (e) {}\n        })\n      )\n\n      // get the top lps from the results formatted\n      const topLps = []\n      topLpLists\n        .filter((i) => !!i) // check for ones not fetched correctly\n        .map((list) => {\n          return list.map((entry) => {\n            const pairData = allPairs[entry.pair.id]\n            return topLps.push({\n              user: entry.user,\n              pairName: pairData.token0.symbol + '-' + pairData.token1.symbol,\n              pairAddress: entry.pair.id,\n              token0: pairData.token0.id,\n              token1: pairData.token1.id,\n              usd:\n                (parseFloat(entry.liquidityTokenBalance) / parseFloat(pairData.totalSupply)) *\n                parseFloat(pairData.reserveUSD),\n            })\n          })\n        })\n\n      const sorted = topLps.sort((a, b) => (a.usd > b.usd ? -1 : 1))\n      const shorter = sorted.splice(0, 100)\n      updateTopLps(shorter)\n    }\n\n    if (!topLps && allPairs && Object.keys(allPairs).length > 0) {\n      fetchData()\n    }\n  })\n\n  return topLps\n}\n","import React, { createContext, useContext, useReducer, useMemo, useCallback, useEffect } from 'react'\n\nimport { client } from '../apollo/client'\nimport {\n  TOKEN_DATA,\n  FILTERED_TRANSACTIONS,\n  TOKEN_CHART,\n  TOKENS_CURRENT,\n  TOKENS_DYNAMIC,\n  PRICES_BY_BLOCK,\n  PAIR_DATA,\n} from '../apollo/queries'\n\nimport { useEthPrice } from './GlobalData'\n\nimport dayjs from 'dayjs'\nimport utc from 'dayjs/plugin/utc'\n\nimport {\n  get2DayPercentChange,\n  getPercentChange,\n  getBlockFromTimestamp,\n  isAddress,\n  getBlocksFromTimestamps,\n  splitQuery,\n} from '../utils'\nimport { timeframeOptions } from '../constants'\nimport { useLatestBlocks } from './Application'\nimport { updateNameData } from '../utils/data'\n\nconst UPDATE = 'UPDATE'\nconst UPDATE_TOKEN_TXNS = 'UPDATE_TOKEN_TXNS'\nconst UPDATE_CHART_DATA = 'UPDATE_CHART_DATA'\nconst UPDATE_PRICE_DATA = 'UPDATE_PRICE_DATA'\nconst UPDATE_TOP_TOKENS = ' UPDATE_TOP_TOKENS'\nconst UPDATE_ALL_PAIRS = 'UPDATE_ALL_PAIRS'\n\nconst TOKEN_PAIRS_KEY = 'TOKEN_PAIRS_KEY'\n\ndayjs.extend(utc)\n\nconst TokenDataContext = createContext()\n\nfunction useTokenDataContext() {\n  return useContext(TokenDataContext)\n}\n\nfunction reducer(state, { type, payload }) {\n  switch (type) {\n    case UPDATE: {\n      const { tokenAddress, data } = payload\n      return {\n        ...state,\n        [tokenAddress]: {\n          ...state?.[tokenAddress],\n          ...data,\n        },\n      }\n    }\n    case UPDATE_TOP_TOKENS: {\n      const { topTokens } = payload\n      let added = {}\n      topTokens &&\n        topTokens.map((token) => {\n          return (added[token.id] = token)\n        })\n      return {\n        ...state,\n        ...added,\n      }\n    }\n\n    case UPDATE_TOKEN_TXNS: {\n      const { address, transactions } = payload\n      return {\n        ...state,\n        [address]: {\n          ...state?.[address],\n          txns: transactions,\n        },\n      }\n    }\n    case UPDATE_CHART_DATA: {\n      const { address, chartData } = payload\n      return {\n        ...state,\n        [address]: {\n          ...state?.[address],\n          chartData,\n        },\n      }\n    }\n\n    case UPDATE_PRICE_DATA: {\n      const { address, data, timeWindow, interval } = payload\n      return {\n        ...state,\n        [address]: {\n          ...state?.[address],\n          [timeWindow]: {\n            ...state?.[address]?.[timeWindow],\n            [interval]: data,\n          },\n        },\n      }\n    }\n\n    case UPDATE_ALL_PAIRS: {\n      const { address, allPairs } = payload\n      return {\n        ...state,\n        [address]: {\n          ...state?.[address],\n          [TOKEN_PAIRS_KEY]: allPairs,\n        },\n      }\n    }\n    default: {\n      throw Error(`Unexpected action type in DataContext reducer: '${type}'.`)\n    }\n  }\n}\n\nexport default function Provider({ children }) {\n  const [state, dispatch] = useReducer(reducer, {})\n  const update = useCallback((tokenAddress, data) => {\n    dispatch({\n      type: UPDATE,\n      payload: {\n        tokenAddress,\n        data,\n      },\n    })\n  }, [])\n\n  const updateTopTokens = useCallback((topTokens) => {\n    dispatch({\n      type: UPDATE_TOP_TOKENS,\n      payload: {\n        topTokens,\n      },\n    })\n  }, [])\n\n  const updateTokenTxns = useCallback((address, transactions) => {\n    dispatch({\n      type: UPDATE_TOKEN_TXNS,\n      payload: { address, transactions },\n    })\n  }, [])\n\n  const updateChartData = useCallback((address, chartData) => {\n    dispatch({\n      type: UPDATE_CHART_DATA,\n      payload: { address, chartData },\n    })\n  }, [])\n\n  const updateAllPairs = useCallback((address, allPairs) => {\n    dispatch({\n      type: UPDATE_ALL_PAIRS,\n      payload: { address, allPairs },\n    })\n  }, [])\n\n  const updatePriceData = useCallback((address, data, timeWindow, interval) => {\n    dispatch({\n      type: UPDATE_PRICE_DATA,\n      payload: { address, data, timeWindow, interval },\n    })\n  }, [])\n\n  return (\n    <TokenDataContext.Provider\n      value={useMemo(\n        () => [\n          state,\n          {\n            update,\n            updateTokenTxns,\n            updateChartData,\n            updateTopTokens,\n            updateAllPairs,\n            updatePriceData,\n          },\n        ],\n        [state, update, updateTokenTxns, updateChartData, updateTopTokens, updateAllPairs, updatePriceData]\n      )}\n    >\n      {children}\n    </TokenDataContext.Provider>\n  )\n}\n\nconst getTopTokens = async (ethPrice, ethPriceOld) => {\n  const utcCurrentTime = dayjs()\n  const utcOneDayBack = utcCurrentTime.subtract(1, 'day').unix()\n  const utcTwoDaysBack = utcCurrentTime.subtract(2, 'day').unix()\n  let oneDayBlock = await getBlockFromTimestamp(utcOneDayBack)\n  let twoDayBlock = await getBlockFromTimestamp(utcTwoDaysBack)\n\n  try {\n    let current = await client.query({\n      query: TOKENS_CURRENT,\n      fetchPolicy: 'cache-first',\n    })\n\n    let oneDayResult = await client.query({\n      query: TOKENS_DYNAMIC(oneDayBlock),\n      fetchPolicy: 'cache-first',\n    })\n\n    let twoDayResult = await client.query({\n      query: TOKENS_DYNAMIC(twoDayBlock),\n      fetchPolicy: 'cache-first',\n    })\n\n    let oneDayData = oneDayResult?.data?.tokens.reduce((obj, cur, i) => {\n      return { ...obj, [cur.id]: cur }\n    }, {})\n\n    let twoDayData = twoDayResult?.data?.tokens.reduce((obj, cur, i) => {\n      return { ...obj, [cur.id]: cur }\n    }, {})\n\n    let bulkResults = await Promise.all(\n      current &&\n        oneDayData &&\n        twoDayData &&\n        current?.data?.tokens.map(async (token) => {\n          let data = token\n\n          // let liquidityDataThisToken = liquidityData?.[token.id]\n          let oneDayHistory = oneDayData?.[token.id]\n          let twoDayHistory = twoDayData?.[token.id]\n\n          // catch the case where token wasnt in top list in previous days\n          if (!oneDayHistory) {\n            let oneDayResult = await client.query({\n              query: TOKEN_DATA(token.id, oneDayBlock),\n              fetchPolicy: 'cache-first',\n            })\n            oneDayHistory = oneDayResult.data.tokens[0]\n          }\n          if (!twoDayHistory) {\n            let twoDayResult = await client.query({\n              query: TOKEN_DATA(token.id, twoDayBlock),\n              fetchPolicy: 'cache-first',\n            })\n            twoDayHistory = twoDayResult.data.tokens[0]\n          }\n\n          // calculate percentage changes and daily changes\n          const [oneDayVolumeUSD, volumeChangeUSD] = get2DayPercentChange(\n            data.tradeVolumeUSD,\n            oneDayHistory?.tradeVolumeUSD ?? 0,\n            twoDayHistory?.tradeVolumeUSD ?? 0\n          )\n          const [oneDayTxns, txnChange] = get2DayPercentChange(\n            data.txCount,\n            oneDayHistory?.txCount ?? 0,\n            twoDayHistory?.txCount ?? 0\n          )\n\n          const currentLiquidityUSD = data?.totalLiquidity * ethPrice * data?.derivedETH\n          const oldLiquidityUSD = oneDayHistory?.totalLiquidity * ethPriceOld * oneDayHistory?.derivedETH\n\n          // percent changes\n          const priceChangeUSD = getPercentChange(\n            data?.derivedETH * ethPrice,\n            oneDayHistory?.derivedETH ? oneDayHistory?.derivedETH * ethPriceOld : 0\n          )\n\n          // set data\n          data.priceUSD = data?.derivedETH * ethPrice\n          data.totalLiquidityUSD = currentLiquidityUSD\n          data.oneDayVolumeUSD = parseFloat(oneDayVolumeUSD)\n          data.volumeChangeUSD = volumeChangeUSD\n          data.priceChangeUSD = priceChangeUSD\n          data.liquidityChangeUSD = getPercentChange(currentLiquidityUSD ?? 0, oldLiquidityUSD ?? 0)\n          data.oneDayTxns = oneDayTxns\n          data.txnChange = txnChange\n\n          // new tokens\n          if (!oneDayHistory && data) {\n            data.oneDayVolumeUSD = data.tradeVolumeUSD\n            data.oneDayVolumeETH = data.tradeVolume * data.derivedETH\n            data.oneDayTxns = data.txCount\n          }\n\n          // update name data for\n          updateNameData({\n            token0: data,\n          })\n\n          // HOTFIX for Aave\n          if (data.id === '0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9') {\n            const aaveData = await client.query({\n              query: PAIR_DATA('0xdfc14d2af169b0d36c4eff567ada9b2e0cae044f'),\n              fetchPolicy: 'cache-first',\n            })\n            const result = aaveData.data.pairs[0]\n            data.totalLiquidityUSD = parseFloat(result.reserveUSD) / 2\n            data.liquidityChangeUSD = 0\n            data.priceChangeUSD = 0\n          }\n\n          return data\n        })\n    )\n\n    return bulkResults\n\n    // calculate percentage changes and daily changes\n  } catch (e) {\n    console.log(e)\n  }\n}\n\nconst getTokenData = async (address, ethPrice, ethPriceOld) => {\n  const utcCurrentTime = dayjs()\n  const utcOneDayBack = utcCurrentTime.subtract(1, 'day').startOf('minute').unix()\n  const utcTwoDaysBack = utcCurrentTime.subtract(2, 'day').startOf('minute').unix()\n  let oneDayBlock = await getBlockFromTimestamp(utcOneDayBack)\n  let twoDayBlock = await getBlockFromTimestamp(utcTwoDaysBack)\n\n  // initialize data arrays\n  let data = {}\n  let oneDayData = {}\n  let twoDayData = {}\n\n  try {\n    // fetch all current and historical data\n    let result = await client.query({\n      query: TOKEN_DATA(address),\n      fetchPolicy: 'cache-first',\n    })\n    data = result?.data?.tokens?.[0]\n\n    // get results from 24 hours in past\n    let oneDayResult = await client.query({\n      query: TOKEN_DATA(address, oneDayBlock),\n      fetchPolicy: 'cache-first',\n    })\n    oneDayData = oneDayResult.data.tokens[0]\n\n    // get results from 48 hours in past\n    let twoDayResult = await client.query({\n      query: TOKEN_DATA(address, twoDayBlock),\n      fetchPolicy: 'cache-first',\n    })\n    twoDayData = twoDayResult.data.tokens[0]\n\n    // catch the case where token wasnt in top list in previous days\n    if (!oneDayData) {\n      let oneDayResult = await client.query({\n        query: TOKEN_DATA(address, oneDayBlock),\n        fetchPolicy: 'cache-first',\n      })\n      oneDayData = oneDayResult.data.tokens[0]\n    }\n    if (!twoDayData) {\n      let twoDayResult = await client.query({\n        query: TOKEN_DATA(address, twoDayBlock),\n        fetchPolicy: 'cache-first',\n      })\n      twoDayData = twoDayResult.data.tokens[0]\n    }\n\n    // calculate percentage changes and daily changes\n    const [oneDayVolumeUSD, volumeChangeUSD] = get2DayPercentChange(\n      data.tradeVolumeUSD,\n      oneDayData?.tradeVolumeUSD ?? 0,\n      twoDayData?.tradeVolumeUSD ?? 0\n    )\n\n    // calculate percentage changes and daily changes\n    const [oneDayVolumeUT, volumeChangeUT] = get2DayPercentChange(\n      data.untrackedVolumeUSD,\n      oneDayData?.untrackedVolumeUSD ?? 0,\n      twoDayData?.untrackedVolumeUSD ?? 0\n    )\n\n    // calculate percentage changes and daily changes\n    const [oneDayTxns, txnChange] = get2DayPercentChange(\n      data.txCount,\n      oneDayData?.txCount ?? 0,\n      twoDayData?.txCount ?? 0\n    )\n\n    const priceChangeUSD = getPercentChange(\n      data?.derivedETH * ethPrice,\n      parseFloat(oneDayData?.derivedETH ?? 0) * ethPriceOld\n    )\n\n    const currentLiquidityUSD = data?.totalLiquidity * ethPrice * data?.derivedETH\n    const oldLiquidityUSD = oneDayData?.totalLiquidity * ethPriceOld * oneDayData?.derivedETH\n\n    // set data\n    data.priceUSD = data?.derivedETH * ethPrice\n    data.totalLiquidityUSD = currentLiquidityUSD\n    data.oneDayVolumeUSD = oneDayVolumeUSD\n    data.volumeChangeUSD = volumeChangeUSD\n    data.priceChangeUSD = priceChangeUSD\n    data.oneDayVolumeUT = oneDayVolumeUT\n    data.volumeChangeUT = volumeChangeUT\n    const liquidityChangeUSD = getPercentChange(currentLiquidityUSD ?? 0, oldLiquidityUSD ?? 0)\n    data.liquidityChangeUSD = liquidityChangeUSD\n    data.oneDayTxns = oneDayTxns\n    data.txnChange = txnChange\n\n    // new tokens\n    if (!oneDayData && data) {\n      data.oneDayVolumeUSD = data.tradeVolumeUSD\n      data.oneDayVolumeETH = data.tradeVolume * data.derivedETH\n      data.oneDayTxns = data.txCount\n    }\n\n    // update name data for\n    updateNameData({\n      token0: data,\n    })\n\n    // HOTFIX for Aave\n    if (data.id === '0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9') {\n      const aaveData = await client.query({\n        query: PAIR_DATA('0xdfc14d2af169b0d36c4eff567ada9b2e0cae044f'),\n        fetchPolicy: 'cache-first',\n      })\n      const result = aaveData.data.pairs[0]\n      data.totalLiquidityUSD = parseFloat(result.reserveUSD) / 2\n      data.liquidityChangeUSD = 0\n      data.priceChangeUSD = 0\n    }\n  } catch (e) {\n    console.log(e)\n  }\n  return data\n}\n\nconst getTokenTransactions = async (allPairsFormatted) => {\n  const transactions = {}\n  try {\n    let result = await client.query({\n      query: FILTERED_TRANSACTIONS,\n      variables: {\n        allPairs: allPairsFormatted,\n      },\n      fetchPolicy: 'cache-first',\n    })\n    transactions.mints = result.data.mints\n    transactions.burns = result.data.burns\n    transactions.swaps = result.data.swaps\n  } catch (e) {\n    console.log(e)\n  }\n  return transactions\n}\n\nconst getTokenPairs = async (tokenAddress) => {\n  try {\n    // fetch all current and historical data\n    let result = await client.query({\n      query: TOKEN_DATA(tokenAddress),\n      fetchPolicy: 'cache-first',\n    })\n    return result.data?.['pairs0'].concat(result.data?.['pairs1'])\n  } catch (e) {\n    console.log(e)\n  }\n}\n\nconst getIntervalTokenData = async (tokenAddress, startTime, interval = 3600, latestBlock) => {\n  const utcEndTime = dayjs.utc()\n  let time = startTime\n\n  // create an array of hour start times until we reach current hour\n  // buffer by half hour to catch case where graph isnt synced to latest block\n  const timestamps = []\n  while (time < utcEndTime.unix()) {\n    timestamps.push(time)\n    time += interval\n  }\n\n  // backout if invalid timestamp format\n  if (timestamps.length === 0) {\n    return []\n  }\n\n  // once you have all the timestamps, get the blocks for each timestamp in a bulk query\n  let blocks\n  try {\n    blocks = await getBlocksFromTimestamps(timestamps, 100)\n\n    // catch failing case\n    if (!blocks || blocks.length === 0) {\n      return []\n    }\n\n    if (latestBlock) {\n      blocks = blocks.filter((b) => {\n        return parseFloat(b.number) <= parseFloat(latestBlock)\n      })\n    }\n\n    let result = await splitQuery(PRICES_BY_BLOCK, client, [tokenAddress], blocks, 50)\n\n    // format token ETH price results\n    let values = []\n    for (var row in result) {\n      let timestamp = row.split('t')[1]\n      let derivedETH = parseFloat(result[row]?.derivedETH)\n      if (timestamp) {\n        values.push({\n          timestamp,\n          derivedETH,\n        })\n      }\n    }\n\n    // go through eth usd prices and assign to original values array\n    let index = 0\n    for (var brow in result) {\n      let timestamp = brow.split('b')[1]\n      if (timestamp) {\n        values[index].priceUSD = result[brow].ethPrice * values[index].derivedETH\n        index += 1\n      }\n    }\n\n    let formattedHistory = []\n\n    // for each hour, construct the open and close price\n    for (let i = 0; i < values.length - 1; i++) {\n      formattedHistory.push({\n        timestamp: values[i].timestamp,\n        open: parseFloat(values[i].priceUSD),\n        close: parseFloat(values[i + 1].priceUSD),\n      })\n    }\n\n    return formattedHistory\n  } catch (e) {\n    console.log(e)\n    console.log('error fetching blocks')\n    return []\n  }\n}\n\nconst getTokenChartData = async (tokenAddress) => {\n  let data = []\n  const utcEndTime = dayjs.utc()\n  let utcStartTime = utcEndTime.subtract(1, 'year')\n  let startTime = utcStartTime.startOf('minute').unix() - 1\n\n  try {\n    let allFound = false\n    let skip = 0\n    while (!allFound) {\n      let result = await client.query({\n        query: TOKEN_CHART,\n        variables: {\n          tokenAddr: tokenAddress,\n          skip,\n        },\n        fetchPolicy: 'cache-first',\n      })\n      if (result.data.tokenDayDatas.length < 1000) {\n        allFound = true\n      }\n      skip += 1000\n      data = data.concat(result.data.tokenDayDatas)\n    }\n\n    let dayIndexSet = new Set()\n    let dayIndexArray = []\n    const oneDay = 24 * 60 * 60\n    data.forEach((dayData, i) => {\n      // add the day index to the set of days\n      dayIndexSet.add((data[i].date / oneDay).toFixed(0))\n      dayIndexArray.push(data[i])\n      dayData.dailyVolumeUSD = parseFloat(dayData.dailyVolumeUSD)\n    })\n\n    // fill in empty days\n    let timestamp = data[0] && data[0].date ? data[0].date : startTime\n    let latestLiquidityUSD = data[0] && data[0].totalLiquidityUSD\n    let latestPriceUSD = data[0] && data[0].priceUSD\n    let latestPairDatas = data[0] && data[0].mostLiquidPairs\n    let index = 1\n    while (timestamp < utcEndTime.startOf('minute').unix() - oneDay) {\n      const nextDay = timestamp + oneDay\n      let currentDayIndex = (nextDay / oneDay).toFixed(0)\n      if (!dayIndexSet.has(currentDayIndex)) {\n        data.push({\n          date: nextDay,\n          dayString: nextDay,\n          dailyVolumeUSD: 0,\n          priceUSD: latestPriceUSD,\n          totalLiquidityUSD: latestLiquidityUSD,\n          mostLiquidPairs: latestPairDatas,\n        })\n      } else {\n        latestLiquidityUSD = dayIndexArray[index].totalLiquidityUSD\n        latestPriceUSD = dayIndexArray[index].priceUSD\n        latestPairDatas = dayIndexArray[index].mostLiquidPairs\n        index = index + 1\n      }\n      timestamp = nextDay\n    }\n    data = data.sort((a, b) => (parseInt(a.date) > parseInt(b.date) ? 1 : -1))\n  } catch (e) {\n    console.log(e)\n  }\n  return data\n}\n\nexport function Updater() {\n  const [, { updateTopTokens }] = useTokenDataContext()\n  const [ethPrice, ethPriceOld] = useEthPrice()\n  useEffect(() => {\n    async function getData() {\n      // get top pairs for overview list\n      let topTokens = await getTopTokens(ethPrice, ethPriceOld)\n      topTokens && updateTopTokens(topTokens)\n    }\n    ethPrice && ethPriceOld && getData()\n  }, [ethPrice, ethPriceOld, updateTopTokens])\n  return null\n}\n\nexport function useTokenData(tokenAddress) {\n  const [state, { update }] = useTokenDataContext()\n  const [ethPrice, ethPriceOld] = useEthPrice()\n  const tokenData = state?.[tokenAddress]\n\n  useEffect(() => {\n    if (!tokenData && ethPrice && ethPriceOld && isAddress(tokenAddress)) {\n      getTokenData(tokenAddress, ethPrice, ethPriceOld).then((data) => {\n        update(tokenAddress, data)\n      })\n    }\n  }, [ethPrice, ethPriceOld, tokenAddress, tokenData, update])\n\n  return tokenData || {}\n}\n\nexport function useTokenTransactions(tokenAddress) {\n  const [state, { updateTokenTxns }] = useTokenDataContext()\n  const tokenTxns = state?.[tokenAddress]?.txns\n\n  const allPairsFormatted =\n    state[tokenAddress] &&\n    state[tokenAddress].TOKEN_PAIRS_KEY &&\n    state[tokenAddress].TOKEN_PAIRS_KEY.map((pair) => {\n      return pair.id\n    })\n\n  useEffect(() => {\n    async function checkForTxns() {\n      if (!tokenTxns && allPairsFormatted) {\n        let transactions = await getTokenTransactions(allPairsFormatted)\n        updateTokenTxns(tokenAddress, transactions)\n      }\n    }\n    checkForTxns()\n  }, [tokenTxns, tokenAddress, updateTokenTxns, allPairsFormatted])\n\n  return tokenTxns || []\n}\n\nexport function useTokenPairs(tokenAddress) {\n  const [state, { updateAllPairs }] = useTokenDataContext()\n  const tokenPairs = state?.[tokenAddress]?.[TOKEN_PAIRS_KEY]\n\n  useEffect(() => {\n    async function fetchData() {\n      let allPairs = await getTokenPairs(tokenAddress)\n      updateAllPairs(tokenAddress, allPairs)\n    }\n    if (!tokenPairs && isAddress(tokenAddress)) {\n      fetchData()\n    }\n  }, [tokenAddress, tokenPairs, updateAllPairs])\n\n  return tokenPairs || []\n}\n\nexport function useTokenChartData(tokenAddress) {\n  const [state, { updateChartData }] = useTokenDataContext()\n  const chartData = state?.[tokenAddress]?.chartData\n  useEffect(() => {\n    async function checkForChartData() {\n      if (!chartData) {\n        let data = await getTokenChartData(tokenAddress)\n        updateChartData(tokenAddress, data)\n      }\n    }\n    checkForChartData()\n  }, [chartData, tokenAddress, updateChartData])\n  return chartData\n}\n\n/**\n * get candlestick data for a token - saves in context based on the window and the\n * interval size\n * @param {*} tokenAddress\n * @param {*} timeWindow // a preset time window from constant - how far back to look\n * @param {*} interval  // the chunk size in seconds - default is 1 hour of 3600s\n */\nexport function useTokenPriceData(tokenAddress, timeWindow, interval = 3600) {\n  const [state, { updatePriceData }] = useTokenDataContext()\n  const chartData = state?.[tokenAddress]?.[timeWindow]?.[interval]\n  const [latestBlock] = useLatestBlocks()\n\n  useEffect(() => {\n    const currentTime = dayjs.utc()\n    const windowSize = timeWindow === timeframeOptions.MONTH ? 'month' : 'week'\n    const startTime =\n      timeWindow === timeframeOptions.ALL_TIME ? 1589760000 : currentTime.subtract(1, windowSize).startOf('hour').unix()\n\n    async function fetch() {\n      let data = await getIntervalTokenData(tokenAddress, startTime, interval, latestBlock)\n      updatePriceData(tokenAddress, data, timeWindow, interval)\n    }\n    if (!chartData) {\n      fetch()\n    }\n  }, [chartData, interval, timeWindow, tokenAddress, updatePriceData, latestBlock])\n\n  return chartData\n}\n\nexport function useAllTokenData() {\n  const [state] = useTokenDataContext()\n  return state\n}\n","import { USER_MINTS_BUNRS_PER_PAIR } from '../apollo/queries'\nimport { client } from '../apollo/client'\nimport dayjs from 'dayjs'\nimport { getShareValueOverTime } from '.'\n\nexport const priceOverrides = [\n  '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48', // USDC\n  '0x6b175474e89094c44da98b954eedeac495271d0f', // DAI\n]\n\ninterface ReturnMetrics {\n  hodleReturn: number // difference in asset values t0 -> t1 with t0 deposit amounts\n  netReturn: number // net return from t0 -> t1\n  uniswapReturn: number // netReturn - hodlReturn\n  impLoss: number\n  fees: number\n}\n\n// used to calculate returns within a given window bounded by two positions\ninterface Position {\n  pair: any\n  liquidityTokenBalance: number\n  liquidityTokenTotalSupply: number\n  reserve0: number\n  reserve1: number\n  reserveUSD: number\n  token0PriceUSD: number\n  token1PriceUSD: number\n}\n\nconst PRICE_DISCOVERY_START_TIMESTAMP = 1600729410\n\nfunction formatPricesForEarlyTimestamps(position): Position {\n  if (position.timestamp < PRICE_DISCOVERY_START_TIMESTAMP) {\n    if (priceOverrides.includes(position?.pair?.token0.id)) {\n      position.token0PriceUSD = 1\n    }\n    if (priceOverrides.includes(position?.pair?.token1.id)) {\n      position.token1PriceUSD = 1\n    }\n    // WETH price\n    if (position.pair?.token0.id === '0x1fa6a37c64804c0d797ba6bc1955e50068fbf362') {\n      position.token0PriceUSD = 0.2\n    }\n    if (position.pair?.token1.id === '0x1fa6a37c64804c0d797ba6bc1955e50068fbf362') {\n      position.token1PriceUSD = 0.2\n    }\n  }\n  return position\n}\n\nasync function getPrincipalForUserPerPair(user: string, pairAddress: string) {\n  let usd = 0\n  let amount0 = 0\n  let amount1 = 0\n  // get all minst and burns to get principal amounts\n  const results = await client.query({\n    query: USER_MINTS_BUNRS_PER_PAIR,\n    variables: {\n      user,\n      pair: pairAddress,\n    },\n  })\n  for (const index in results.data.mints) {\n    const mint = results.data.mints[index]\n    const mintToken0 = mint.pair.token0.id\n    const mintToken1 = mint.pair.token1.id\n\n    // if trackign before prices were discovered (pre-launch days), hardcode stablecoins\n    if (priceOverrides.includes(mintToken0) && mint.timestamp < PRICE_DISCOVERY_START_TIMESTAMP) {\n      usd += parseFloat(mint.amount0) * 2\n    } else if (priceOverrides.includes(mintToken1) && mint.timestamp < PRICE_DISCOVERY_START_TIMESTAMP) {\n      usd += parseFloat(mint.amount1) * 2\n    } else {\n      usd += parseFloat(mint.amountUSD)\n    }\n    amount0 += amount0 + parseFloat(mint.amount0)\n    amount1 += amount1 + parseFloat(mint.amount1)\n  }\n\n  for (const index in results.data.burns) {\n    const burn = results.data.burns[index]\n    const burnToken0 = burn.pair.token0.id\n    const burnToken1 = burn.pair.token1.id\n\n    // if trackign before prices were discovered (pre-launch days), hardcode stablecoins\n    if (priceOverrides.includes(burnToken0) && burn.timestamp < PRICE_DISCOVERY_START_TIMESTAMP) {\n      usd += parseFloat(burn.amount0) * 2\n    } else if (priceOverrides.includes(burnToken1) && burn.timestamp < PRICE_DISCOVERY_START_TIMESTAMP) {\n      usd += parseFloat(burn.amount1) * 2\n    } else {\n      usd -= parseFloat(results.data.burns[index].amountUSD)\n    }\n\n    amount0 -= parseFloat(results.data.burns[index].amount0)\n    amount1 -= parseFloat(results.data.burns[index].amount1)\n  }\n\n  return { usd, amount0, amount1 }\n}\n\n/**\n * Core algorithm for calculating retursn within one time window.\n * @param positionT0 // users liquidity info and token rates at beginning of window\n * @param positionT1 // '' at the end of the window\n */\nexport function getMetricsForPositionWindow(positionT0: Position, positionT1: Position): ReturnMetrics {\n  positionT0 = formatPricesForEarlyTimestamps(positionT0)\n  positionT1 = formatPricesForEarlyTimestamps(positionT1)\n\n  // calculate ownership at ends of window, for end of window we need original LP token balance / new total supply\n  const t0Ownership = positionT0.liquidityTokenBalance / positionT0.liquidityTokenTotalSupply\n  const t1Ownership = positionT0.liquidityTokenBalance / positionT1.liquidityTokenTotalSupply\n\n  // get starting amounts of token0 and token1 deposited by LP\n  const token0_amount_t0 = t0Ownership * positionT0.reserve0\n  const token1_amount_t0 = t0Ownership * positionT0.reserve1\n\n  // get current token values\n  const token0_amount_t1 = t1Ownership * positionT1.reserve0\n  const token1_amount_t1 = t1Ownership * positionT1.reserve1\n\n  // calculate squares to find imp loss and fee differences\n  const sqrK_t0 = Math.sqrt(token0_amount_t0 * token1_amount_t0)\n  // eslint-disable-next-line eqeqeq\n  const priceRatioT1 = positionT1.token0PriceUSD != 0 ? positionT1.token1PriceUSD / positionT1.token0PriceUSD : 0\n\n  const token0_amount_no_fees = positionT1.token1PriceUSD && priceRatioT1 ? sqrK_t0 * Math.sqrt(priceRatioT1) : 0\n  const token1_amount_no_fees =\n    Number(positionT1.token1PriceUSD) && priceRatioT1 ? sqrK_t0 / Math.sqrt(priceRatioT1) : 0\n  const no_fees_usd =\n    token0_amount_no_fees * positionT1.token0PriceUSD + token1_amount_no_fees * positionT1.token1PriceUSD\n\n  const difference_fees_token0 = token0_amount_t1 - token0_amount_no_fees\n  const difference_fees_token1 = token1_amount_t1 - token1_amount_no_fees\n  const difference_fees_usd =\n    difference_fees_token0 * positionT1.token0PriceUSD + difference_fees_token1 * positionT1.token1PriceUSD\n\n  // calculate USD value at t0 and t1 using initial token deposit amounts for asset return\n  const assetValueT0 = token0_amount_t0 * positionT0.token0PriceUSD + token1_amount_t0 * positionT0.token1PriceUSD\n  const assetValueT1 = token0_amount_t0 * positionT1.token0PriceUSD + token1_amount_t0 * positionT1.token1PriceUSD\n\n  const imp_loss_usd = no_fees_usd - assetValueT1\n  const uniswap_return = difference_fees_usd + imp_loss_usd\n\n  // get net value change for combined data\n  const netValueT0 = t0Ownership * positionT0.reserveUSD\n  const netValueT1 = t1Ownership * positionT1.reserveUSD\n\n  return {\n    hodleReturn: assetValueT1 - assetValueT0,\n    netReturn: netValueT1 - netValueT0,\n    uniswapReturn: uniswap_return,\n    impLoss: imp_loss_usd,\n    fees: difference_fees_usd,\n  }\n}\n\n/**\n * formats data for historical chart for an LPs position in 1 pair over time\n * @param startDateTimestamp // day to start tracking at\n * @param currentPairData // current stat of the pair\n * @param pairSnapshots // history of entries and exits for lp on this pair\n * @param currentETHPrice // current price of eth used for usd conversions\n */\nexport async function getHistoricalPairReturns(startDateTimestamp, currentPairData, pairSnapshots, currentETHPrice) {\n  // catch case where data not puplated yet\n  if (!currentPairData.createdAtTimestamp) {\n    return []\n  }\n  let dayIndex: number = Math.round(startDateTimestamp / 86400) // get unique day bucket unix\n  const currentDayIndex: number = Math.round(dayjs.utc().unix() / 86400)\n  const sortedPositions = pairSnapshots.sort((a, b) => {\n    return parseInt(a.timestamp) > parseInt(b.timestamp) ? 1 : -1\n  })\n  if (sortedPositions[0].timestamp > startDateTimestamp) {\n    dayIndex = Math.round(sortedPositions[0].timestamp / 86400)\n  }\n\n  const dayTimestamps = []\n  while (dayIndex < currentDayIndex) {\n    // only account for days where this pair existed\n    if (dayIndex * 86400 >= parseInt(currentPairData.createdAtTimestamp)) {\n      dayTimestamps.push(dayIndex * 86400)\n    }\n    dayIndex = dayIndex + 1\n  }\n\n  const shareValues = await getShareValueOverTime(currentPairData.id, dayTimestamps)\n  const shareValuesFormatted = {}\n  shareValues?.map((share) => {\n    shareValuesFormatted[share.timestamp] = share\n  })\n\n  // set the default position and data\n  let positionT0 = pairSnapshots[0]\n  const formattedHistory = []\n  let netFees = 0\n\n  // keep track of up to date metrics as we parse each day\n  for (const index in dayTimestamps) {\n    // get the bounds on the day\n    const dayTimestamp = dayTimestamps[index]\n    const timestampCeiling = dayTimestamp + 86400\n\n    // for each change in position value that day, create a window and update\n    const dailyChanges = pairSnapshots.filter((snapshot) => {\n      return snapshot.timestamp < timestampCeiling && snapshot.timestamp > dayTimestamp\n    })\n    for (let i = 0; i < dailyChanges.length; i++) {\n      const positionT1 = dailyChanges[i]\n      const localReturns = getMetricsForPositionWindow(positionT0, positionT1)\n      netFees = netFees + localReturns.fees\n      positionT0 = positionT1\n    }\n\n    // now treat the end of the day as a hypothetical position\n    let positionT1 = shareValuesFormatted[dayTimestamp + 86400]\n    if (!positionT1) {\n      positionT1 = {\n        pair: currentPairData.id,\n        liquidityTokenBalance: positionT0.liquidityTokenBalance,\n        totalSupply: currentPairData.totalSupply,\n        reserve0: currentPairData.reserve0,\n        reserve1: currentPairData.reserve1,\n        reserveUSD: currentPairData.reserveUSD,\n        token0PriceUSD: currentPairData.token0.derivedETH * currentETHPrice,\n        token1PriceUSD: currentPairData.token1.derivedETH * currentETHPrice,\n      }\n    }\n\n    if (positionT1) {\n      positionT1.liquidityTokenTotalSupply = positionT1.totalSupply\n      positionT1.liquidityTokenBalance = positionT0.liquidityTokenBalance\n      const currentLiquidityValue =\n        (parseFloat(positionT1.liquidityTokenBalance) / parseFloat(positionT1.liquidityTokenTotalSupply)) *\n        parseFloat(positionT1.reserveUSD)\n      const localReturns = getMetricsForPositionWindow(positionT0, positionT1)\n      const localFees = netFees + localReturns.fees\n\n      formattedHistory.push({\n        date: dayTimestamp,\n        usdValue: currentLiquidityValue,\n        fees: localFees,\n      })\n    }\n  }\n\n  return formattedHistory\n}\n\n/**\n * For a given pair and user, get the return metrics\n * @param user\n * @param pair\n * @param ethPrice\n */\nexport async function getLPReturnsOnPair(user: string, pair, ethPrice: number, snapshots) {\n  // initialize values\n  const principal = await getPrincipalForUserPerPair(user, pair.id)\n  let hodlReturn = 0\n  let netReturn = 0\n  let uniswapReturn = 0\n  let fees = 0\n\n  snapshots = snapshots.filter((entry) => {\n    return entry.pair.id === pair.id\n  })\n\n  // get data about the current position\n  const currentPosition: Position = {\n    pair,\n    liquidityTokenBalance: snapshots[snapshots.length - 1]?.liquidityTokenBalance,\n    liquidityTokenTotalSupply: pair.totalSupply,\n    reserve0: pair.reserve0,\n    reserve1: pair.reserve1,\n    reserveUSD: pair.reserveUSD,\n    token0PriceUSD: pair.token0.derivedETH * ethPrice,\n    token1PriceUSD: pair.token1.derivedETH * ethPrice,\n  }\n\n  for (const index in snapshots) {\n    // get positions at both bounds of the window\n    const positionT0 = snapshots[index]\n    const positionT1 = parseInt(index) === snapshots.length - 1 ? currentPosition : snapshots[parseInt(index) + 1]\n\n    const results = getMetricsForPositionWindow(positionT0, positionT1)\n    hodlReturn = hodlReturn + results.hodleReturn\n    netReturn = netReturn + results.netReturn\n    uniswapReturn = uniswapReturn + results.uniswapReturn\n    fees = fees + results.fees\n  }\n\n  return {\n    principal,\n    net: {\n      return: netReturn,\n    },\n    uniswap: {\n      return: uniswapReturn,\n    },\n    fees: {\n      sum: fees,\n    },\n  }\n}\n","import React, { createContext, useContext, useReducer, useMemo, useCallback, useEffect, useState } from 'react'\nimport { usePairData } from './PairData'\nimport { client } from '../apollo/client'\n\nimport {\n  USER_TRANSACTIONS,\n  USER_POSITIONS,\n  USER_HISTORY,\n  PAIR_DAY_DATA_BULK,\n} from '../apollo/queries'\nimport { useTimeframe, useStartTimestamp } from './Application'\nimport dayjs from 'dayjs'\nimport utc from 'dayjs/plugin/utc'\nimport { useEthPrice } from './GlobalData'\nimport { getLPReturnsOnPair, getHistoricalPairReturns } from '../utils/returns'\nimport { timeframeOptions } from '../constants'\n\ndayjs.extend(utc)\n\nconst UPDATE_TRANSACTIONS = 'UPDATE_TRANSACTIONS'\nconst UPDATE_POSITIONS = 'UPDATE_POSITIONS '\nconst UPDATE_MINING_POSITIONS = 'UPDATE_MINING_POSITIONS'\nconst UPDATE_USER_POSITION_HISTORY = 'UPDATE_USER_POSITION_HISTORY'\nconst UPDATE_USER_PAIR_RETURNS = 'UPDATE_USER_PAIR_RETURNS'\n\nconst TRANSACTIONS_KEY = 'TRANSACTIONS_KEY'\nconst POSITIONS_KEY = 'POSITIONS_KEY'\nconst MINING_POSITIONS_KEY = 'MINING_POSITIONS_KEY'\nconst USER_SNAPSHOTS = 'USER_SNAPSHOTS'\nconst USER_PAIR_RETURNS_KEY = 'USER_PAIR_RETURNS_KEY'\n\nconst UserContext = createContext()\n\nfunction useUserContext() {\n  return useContext(UserContext)\n}\n\nfunction reducer(state, { type, payload }) {\n  switch (type) {\n    case UPDATE_TRANSACTIONS: {\n      const { account, transactions } = payload\n      return {\n        ...state,\n        [account]: {\n          ...state?.[account],\n          [TRANSACTIONS_KEY]: transactions,\n        },\n      }\n    }\n    case UPDATE_POSITIONS: {\n      const { account, positions } = payload\n      return {\n        ...state,\n        [account]: { ...state?.[account], [POSITIONS_KEY]: positions },\n      }\n    }\n    case UPDATE_MINING_POSITIONS: {\n      const { account, miningPositions } = payload\n      return {\n        ...state,\n        [account]: { ...state?.[account], [MINING_POSITIONS_KEY]: miningPositions },\n      }\n    }\n    case UPDATE_USER_POSITION_HISTORY: {\n      const { account, historyData } = payload\n      return {\n        ...state,\n        [account]: { ...state?.[account], [USER_SNAPSHOTS]: historyData },\n      }\n    }\n\n    case UPDATE_USER_PAIR_RETURNS: {\n      const { account, pairAddress, data } = payload\n      return {\n        ...state,\n        [account]: {\n          ...state?.[account],\n          [USER_PAIR_RETURNS_KEY]: {\n            ...state?.[account]?.[USER_PAIR_RETURNS_KEY],\n            [pairAddress]: data,\n          },\n        },\n      }\n    }\n\n    default: {\n      throw Error(`Unexpected action type in DataContext reducer: '${type}'.`)\n    }\n  }\n}\n\nconst INITIAL_STATE = {}\n\nexport default function Provider({ children }) {\n  const [state, dispatch] = useReducer(reducer, INITIAL_STATE)\n\n  const updateTransactions = useCallback((account, transactions) => {\n    dispatch({\n      type: UPDATE_TRANSACTIONS,\n      payload: {\n        account,\n        transactions,\n      },\n    })\n  }, [])\n\n  const updatePositions = useCallback((account, positions) => {\n    dispatch({\n      type: UPDATE_POSITIONS,\n      payload: {\n        account,\n        positions,\n      },\n    })\n  }, [])\n\n  const updateMiningPositions = useCallback((account, miningPositions) => {\n    dispatch({\n      type: UPDATE_MINING_POSITIONS,\n      payload: {\n        account,\n        miningPositions,\n      },\n    })\n  }, [])\n\n  const updateUserSnapshots = useCallback((account, historyData) => {\n    dispatch({\n      type: UPDATE_USER_POSITION_HISTORY,\n      payload: {\n        account,\n        historyData,\n      },\n    })\n  }, [])\n\n  const updateUserPairReturns = useCallback((account, pairAddress, data) => {\n    dispatch({\n      type: UPDATE_USER_PAIR_RETURNS,\n      payload: {\n        account,\n        pairAddress,\n        data,\n      },\n    })\n  }, [])\n\n  return (\n    <UserContext.Provider\n      value={useMemo(\n        () => [\n          state,\n          { updateTransactions, updatePositions, updateMiningPositions, updateUserSnapshots, updateUserPairReturns },\n        ],\n        [state, updateTransactions, updatePositions, updateMiningPositions, updateUserSnapshots, updateUserPairReturns]\n      )}\n    >\n      {children}\n    </UserContext.Provider>\n  )\n}\n\nexport function useUserTransactions(account) {\n  const [state, { updateTransactions }] = useUserContext()\n  const transactions = state?.[account]?.[TRANSACTIONS_KEY]\n  useEffect(() => {\n    async function fetchData(account) {\n      try {\n        let result = await client.query({\n          query: USER_TRANSACTIONS,\n          variables: {\n            user: account,\n          },\n          fetchPolicy: 'no-cache',\n        })\n        if (result?.data) {\n          updateTransactions(account, result?.data)\n        }\n      } catch (e) {\n        console.log(e)\n      }\n    }\n    if (!transactions && account) {\n      fetchData(account)\n    }\n  }, [account, transactions, updateTransactions])\n\n  return transactions || {}\n}\n\n/**\n * Store all the snapshots of liquidity activity for this account.\n * Each snapshot is a moment when an LP position was created or updated.\n * @param {*} account\n */\nexport function useUserSnapshots(account) {\n  const [state, { updateUserSnapshots }] = useUserContext()\n  const snapshots = state?.[account]?.[USER_SNAPSHOTS]\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        let skip = 0\n        let allResults = []\n        let found = false\n        while (!found) {\n          let result = await client.query({\n            query: USER_HISTORY,\n            variables: {\n              skip: skip,\n              user: account,\n            },\n            fetchPolicy: 'cache-first',\n          })\n          allResults = allResults.concat(result.data.liquidityPositionSnapshots)\n          if (result.data.liquidityPositionSnapshots.length < 1000) {\n            found = true\n          } else {\n            skip += 1000\n          }\n        }\n        if (allResults) {\n          updateUserSnapshots(account, allResults)\n        }\n      } catch (e) {\n        console.log(e)\n      }\n    }\n    if (!snapshots && account) {\n      fetchData()\n    }\n  }, [account, snapshots, updateUserSnapshots])\n\n  return snapshots\n}\n\n/**\n * For a given position (data about holding) and user, get the chart\n * data for the fees and liquidity over time\n * @param {*} position\n * @param {*} account\n */\nexport function useUserPositionChart(position, account) {\n  const pairAddress = position?.pair?.id\n  const [state, { updateUserPairReturns }] = useUserContext()\n\n  // get oldest date of data to fetch\n  const startDateTimestamp = useStartTimestamp()\n\n  // get users adds and removes on this pair\n  const snapshots = useUserSnapshots(account)\n  const pairSnapshots =\n    snapshots &&\n    position &&\n    snapshots.filter((currentSnapshot) => {\n      return currentSnapshot.pair.id === position.pair.id\n    })\n\n  // get data needed for calculations\n  const currentPairData = usePairData(pairAddress)\n  const [currentETHPrice] = useEthPrice()\n\n  // formatetd array to return for chart data\n  const formattedHistory = state?.[account]?.[USER_PAIR_RETURNS_KEY]?.[pairAddress]\n\n  useEffect(() => {\n    async function fetchData() {\n      let fetchedData = await getHistoricalPairReturns(\n        startDateTimestamp,\n        currentPairData,\n        pairSnapshots,\n        currentETHPrice\n      )\n      updateUserPairReturns(account, pairAddress, fetchedData)\n    }\n    if (\n      account &&\n      startDateTimestamp &&\n      pairSnapshots &&\n      !formattedHistory &&\n      currentPairData &&\n      Object.keys(currentPairData).length > 0 &&\n      pairAddress &&\n      currentETHPrice\n    ) {\n      fetchData()\n    }\n  }, [\n    account,\n    startDateTimestamp,\n    pairSnapshots,\n    formattedHistory,\n    pairAddress,\n    currentPairData,\n    currentETHPrice,\n    updateUserPairReturns,\n    position.pair.id,\n  ])\n\n  return formattedHistory\n}\n\n/**\n * For each day starting with min(first position timestamp, beginning of time window),\n * get total liquidity supplied by user in USD. Format in array with date timestamps\n * and usd liquidity value.\n */\nexport function useUserLiquidityChart(account) {\n  const history = useUserSnapshots(account)\n  // formatetd array to return for chart data\n  const [formattedHistory, setFormattedHistory] = useState()\n\n  const [startDateTimestamp, setStartDateTimestamp] = useState()\n  const [activeWindow] = useTimeframe()\n\n  // monitor the old date fetched\n  useEffect(() => {\n    const utcEndTime = dayjs.utc()\n    // based on window, get starttime\n    let utcStartTime\n    switch (activeWindow) {\n      case timeframeOptions.WEEK:\n        utcStartTime = utcEndTime.subtract(1, 'week').startOf('day')\n        break\n      case timeframeOptions.ALL_TIME:\n        utcStartTime = utcEndTime.subtract(1, 'year')\n        break\n      default:\n        utcStartTime = utcEndTime.subtract(1, 'year').startOf('year')\n        break\n    }\n    let startTime = utcStartTime.unix() - 1\n    if ((activeWindow && startTime < startDateTimestamp) || !startDateTimestamp) {\n      setStartDateTimestamp(startTime)\n    }\n  }, [activeWindow, startDateTimestamp])\n\n  useEffect(() => {\n    async function fetchData() {\n      let dayIndex = parseInt(startDateTimestamp / 86400) // get unique day bucket unix\n      const currentDayIndex = parseInt(dayjs.utc().unix() / 86400)\n\n      // sort snapshots in order\n      let sortedPositions = history.sort((a, b) => {\n        return parseInt(a.timestamp) > parseInt(b.timestamp) ? 1 : -1\n      })\n      // if UI start time is > first position time - bump start index to this time\n      if (parseInt(sortedPositions[0].timestamp) > dayIndex) {\n        dayIndex = parseInt(parseInt(sortedPositions[0].timestamp) / 86400)\n      }\n\n      const dayTimestamps = []\n      // get date timestamps for all days in view\n      while (dayIndex < currentDayIndex) {\n        dayTimestamps.push(parseInt(dayIndex) * 86400)\n        dayIndex = dayIndex + 1\n      }\n\n      const pairs = history.reduce((pairList, position) => {\n        return [...pairList, position.pair.id]\n      }, [])\n\n      // get all day datas where date is in this list, and pair is in pair list\n      let {\n        data: { pairDayDatas },\n      } = await client.query({\n        query: PAIR_DAY_DATA_BULK(pairs, startDateTimestamp),\n      })\n\n      const formattedHistory = []\n\n      // map of current pair => ownership %\n      const ownershipPerPair = {}\n      for (const index in dayTimestamps) {\n        const dayTimestamp = dayTimestamps[index]\n        const timestampCeiling = dayTimestamp + 86400\n\n        // cycle through relevant positions and update ownership for any that we need to\n        const relevantPositions = history.filter((snapshot) => {\n          return snapshot.timestamp < timestampCeiling && snapshot.timestamp > dayTimestamp\n        })\n        for (const index in relevantPositions) {\n          const position = relevantPositions[index]\n          // case where pair not added yet\n          if (!ownershipPerPair[position.pair.id]) {\n            ownershipPerPair[position.pair.id] = {\n              lpTokenBalance: position.liquidityTokenBalance,\n              timestamp: position.timestamp,\n            }\n          }\n          // case where more recent timestamp is found for pair\n          if (ownershipPerPair[position.pair.id] && ownershipPerPair[position.pair.id].timestamp < position.timestamp) {\n            ownershipPerPair[position.pair.id] = {\n              lpTokenBalance: position.liquidityTokenBalance,\n              timestamp: position.timestamp,\n            }\n          }\n        }\n\n        const relavantDayDatas = Object.keys(ownershipPerPair).map((pairAddress) => {\n          // find last day data after timestamp update\n          const dayDatasForThisPair = pairDayDatas.filter((dayData) => {\n            return dayData.pairAddress === pairAddress\n          })\n          // find the most recent reference to pair liquidity data\n          let mostRecent = dayDatasForThisPair[0]\n          for (const index in dayDatasForThisPair) {\n            const dayData = dayDatasForThisPair[index]\n            if (dayData.date < dayTimestamp && dayData.date > mostRecent.date) {\n              mostRecent = dayData\n            }\n          }\n          return mostRecent\n        })\n\n        // now cycle through pair day datas, for each one find usd value = ownership[address] * reserveUSD\n        const dailyUSD = relavantDayDatas.reduce((totalUSD, dayData) => {\n          if (dayData) {\n            return (totalUSD =\n              totalUSD +\n              (ownershipPerPair[dayData.pairAddress]\n                ? (parseFloat(ownershipPerPair[dayData.pairAddress].lpTokenBalance) / parseFloat(dayData.totalSupply)) *\n                parseFloat(dayData.reserveUSD)\n                : 0))\n          } else {\n            return totalUSD\n          }\n        }, 0)\n\n        formattedHistory.push({\n          date: dayTimestamp,\n          valueUSD: dailyUSD,\n        })\n      }\n\n      setFormattedHistory(formattedHistory)\n    }\n    if (history && startDateTimestamp && history.length > 0) {\n      fetchData()\n    }\n  }, [history, startDateTimestamp])\n\n  return formattedHistory\n}\n\nexport function useUserPositions(account) {\n  const [state, { updatePositions }] = useUserContext()\n  const positions = state?.[account]?.[POSITIONS_KEY]\n\n  const snapshots = useUserSnapshots(account)\n  const [ethPrice] = useEthPrice()\n\n  useEffect(() => {\n    async function fetchData(account) {\n      try {\n        let result = await client.query({\n          query: USER_POSITIONS,\n          variables: {\n            user: account,\n          },\n          fetchPolicy: 'no-cache',\n        })\n        if (result?.data?.liquidityPositions) {\n          let formattedPositions = await Promise.all(\n            result?.data?.liquidityPositions.map(async (positionData) => {\n              const returnData = await getLPReturnsOnPair(account, positionData.pair, ethPrice, snapshots)\n              return {\n                ...positionData,\n                ...returnData,\n              }\n            })\n          )\n          updatePositions(account, formattedPositions)\n        }\n      } catch (e) {\n        console.log(e)\n      }\n    }\n    if (!positions && account && ethPrice && snapshots) {\n      fetchData(account)\n    }\n  }, [account, positions, updatePositions, ethPrice, snapshots])\n\n  return positions\n}\n\n/*\nexport function useMiningPositions(account) {\n  const [state, { updateMiningPositions }] = useUserContext()\n  const allPairData = useAllPairData()\n  const miningPositions = state?.[account]?.[MINING_POSITIONS_KEY]\n\n  const snapshots = useUserSnapshots(account)\n\n  useEffect(() => {\n    async function fetchData(account) {\n      try {\n        let miningPositionData = []\n        let result = await stakingClient.query({\n          query: MINING_POSITIONS(account),\n          fetchPolicy: 'no-cache',\n        })\n        if (!result?.data?.user?.miningPosition) {\n          return\n        }\n        miningPositionData = result.data.user.miningPosition\n        for (const miningPosition of miningPositionData) {\n          const pairAddress = miningPosition.miningPool.pair.id\n          miningPosition.pairData = allPairData[pairAddress]\n        }\n        updateMiningPositions(account, miningPositionData)\n      } catch (e) {\n        console.log(e)\n      }\n    }\n\n    if (!miningPositions && account && snapshots) {\n      fetchData(account)\n    }\n  }, [account, miningPositions, updateMiningPositions, snapshots, allPairData])\n  return miningPositions\n}\n*/","import styled from 'styled-components'\nimport { Box } from 'rebass/styled-components'\n\nconst Row = styled(Box)`\n  width: 100%;\n  display: flex;\n  padding: 0;\n  align-items: center;\n  align-items: ${({ align }) => align && align};\n  padding: ${({ padding }) => padding};\n  border: ${({ border }) => border};\n  border-radius: ${({ borderRadius }) => borderRadius};\n  justify-content: ${({ justify }) => justify};\n`\n\nexport const RowBetween = styled(Row)`\n  justify-content: space-between;\n`\n\nexport const RowFlat = styled.div`\n  display: flex;\n  align-items: flex-end;\n`\n\nexport const AutoRow = styled(Row)`\n  flex-wrap: ${({ wrap }) => wrap ?? 'nowrap'};\n  margin: -${({ gap }) => gap};\n  & > * {\n    margin: ${({ gap }) => gap} !important;\n  }\n`\n\nexport const RowFixed = styled(Row)`\n  width: fit-content;\n`\n\nexport default Row\n","import styled from 'styled-components'\n\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n`\nexport const ColumnCenter = styled(Column)`\n  width: 100%;\n  align-items: center;\n`\n\nexport const AutoColumn = styled.div`\n  display: grid;\n  grid-auto-rows: auto;\n  grid-row-gap: ${({ gap }) => (gap === 'sm' && '8px') || (gap === 'md' && '12px') || (gap === 'lg' && '24px') || gap};\n  justify-items: ${({ justify }) => justify && justify};\n`\n\nexport default Column\n","import React from 'react'\nimport styled, { css, keyframes } from 'styled-components'\n\nconst rotate = keyframes`\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n`\n\nconst Wrapper = styled.div`\n  pointer-events: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  width: 100%;\n\n  ${(props) =>\n    props.fill && !props.height\n      ? css`\n          height: 100vh;\n        `\n      : css`\n          height: 180px;\n        `}\n`\n\nconst AnimatedImg = styled.div`\n  animation: ${rotate} 1.1s cubic-bezier(0.795, 0.155, 0.210, 0.880) infinite;\n  & > * {\n    width: 72px;\n  }\n`\n\nconst StyledSVG = styled(`svg`, { size: String, fill: String, stroke: String })`\n  width: 32px;\n  height: 32px;\n  display: flex;\n  path {\n    stroke: ${({ stroke, theme }) => stroke ?? theme.primary1};\n    fill: ${({ fill, theme }) => fill ?? theme.bg6};\n  }\n`\n\nconst LocalLoader = ({ fill, stroke, ...rest }) => {\n  return (\n    <Wrapper fill={fill}>\n      <AnimatedImg>\n        <StyledSVG viewBox=\"0 0 24 24\" fill={null} xmlns=\"http://www.w3.org/2000/svg\" stroke={stroke} {...rest}>\n          <path\n            d=\"M12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22C17.5228 22 22 17.5228 22 12C22 9.27455 20.9097 6.80375 19.1414 5\"\n            strokeWidth=\"2.5\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n          />\n        </StyledSVG>\n      </AnimatedImg>\n    </Wrapper>\n  )\n}\n\nexport default LocalLoader\n","import React from 'react'\nimport { Link as RebassLink } from 'rebass'\nimport { Link as RouterLink } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\nimport { lighten, darken } from 'polished'\nimport { globalPrimary } from '../../Theme'\n\nconst WrappedLink = ({ external, children, ...rest }) => (\n  <RebassLink\n    target={external ? '_blank' : null}\n    rel={external ? 'noopener noreferrer' : null}\n    color={globalPrimary}\n    {...rest}\n  >\n    {children}\n  </RebassLink>\n)\n\nWrappedLink.propTypes = {\n  external: PropTypes.bool,\n}\n\nconst Link = styled(WrappedLink)`\n  color: ${({ color, theme }) => (color ? color : theme.link)};\n`\n\nexport default Link\n\nexport const CustomLink = styled(RouterLink)`\n  text-decoration: none;\n  font-size: 14px;\n  font-weight: 500;\n  color: ${({ color, theme }) => (color ? color : theme.link)};\n\n  &:visited {\n    color: ${({ color, theme }) => (color ? lighten(0.1, color) : lighten(0.1, theme.link))};\n  }\n\n  &:hover {\n    cursor: pointer;\n    text-decoration: none;\n    underline: none;\n    color: ${({ color, theme }) => (color ? darken(0.1, color) : darken(0.1, theme.link))};\n  }\n`\n\nexport const BasicLink = styled(RouterLink)`\n  text-decoration: none;\n  color: inherit;\n  &:hover {\n    cursor: pointer;\n    text-decoration: none;\n    underline: none;\n  }\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Box } from 'rebass'\n\nimport Link from './Link'\n\nimport { urls } from '../utils'\n\nconst Divider = styled(Box)`\n  height: 1px;\n  background-color: ${({ theme }) => theme.divider};\n`\n\nexport const IconWrapper = styled.div`\n  position: absolute;\n  right: 0;\n  border-radius: 3px;\n  height: 16px;\n  width: 16px;\n  padding: 0px;\n  bottom: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: ${({ theme }) => theme.text1};\n\n  :hover {\n    cursor: pointer;\n    opacity: 0.7;\n  }\n`\n\nconst Hint = ({ children, ...rest }) => (\n  <Text fontSize={16} weight={500} {...rest}>\n    {children}\n  </Text>\n)\n\nconst Address = ({ address, token, ...rest }) => (\n  <Link\n    color=\"button\"\n    href={token ? urls.showToken(address) : urls.showAddress(address)}\n    external\n    style={{ wordBreak: 'break-all' }}\n    {...rest}\n  >\n    {address}\n  </Link>\n)\n\nexport const Hover = styled.div`\n  :hover {\n    cursor: pointer;\n    opacity: ${({ fade }) => fade && '0.7'};\n  }\n`\n\nexport const StyledIcon = styled.div`\n  color: ${({ theme }) => theme.text1};\n`\n\nconst EmptyCard = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 200px;\n  border-radius: 20px;\n  color: ${({ theme }) => theme.text1};\n  height: ${({ height }) => height && height};\n`\n\nexport const SideBar = styled.span`\n  display: grid;\n  grid-gap: 24px;\n  position: sticky;\n  top: 4rem;\n`\n\nexport const SubNav = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  align-items: flex-start;\n  padding: 0;\n  margin-bottom: 2rem;\n`\nexport const SubNavEl = styled.li`\n  list-style: none;\n  display: flex;\n  padding-bottom: 0.5rem;\n  margin-right: 1rem;\n  font-weight: ${({ isActive }) => (isActive ? 600 : 500)};\n  border-bottom: 1px solid rgba(0, 0, 0, 0);\n\n  :hover {\n    cursor: pointer;\n    border-bottom: 1px solid ${({ theme }) => theme.bg3};\n  }\n`\n\nexport const PageWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding-top: 36px;\n  padding-bottom: 80px;\n\n  @media screen and (max-width: 600px) {\n    & > * {\n      padding: 0 12px;\n    }\n  }\n`\n\nexport const ContentWrapper = styled.div`\n  display: grid;\n  justify-content: start;\n  align-items: start;\n  grid-template-columns: 1fr;\n  grid-gap: 24px;\n  max-width: 1440px;\n  width: 100%;\n  margin: 0 auto;\n  padding: 0 2rem;\n  box-sizing: border-box;\n  @media screen and (max-width: 1180px) {\n    grid-template-columns: 1fr;\n    padding: 0 1rem;\n  }\n`\n\nexport const ContentWrapperLarge = styled.div`\n  display: grid;\n  justify-content: start;\n  align-items: start;\n  grid-template-columns: 1fr;\n  grid-gap: 24px;\n  padding: 0 2rem;\n  margin: 0 auto;\n  box-sizing: border-box;\n  max-width: 1440px;\n  width: 100%;\n\n  @media screen and (max-width: 1282px) {\n    grid-template-columns: 1fr;\n    padding: 0 1rem;\n  }\n`\n\nexport const FullWrapper = styled.div`\n  display: grid;\n  justify-content: start;\n  align-items: start;\n  grid-template-columns: 1fr;\n  grid-gap: 24px;\n  max-width: 1440px;\n  width: 100%;\n  margin: 0 auto;\n  padding: 0 2rem;\n  box-sizing: border-box;\n\n  @media screen and (max-width: 1180px) {\n    grid-template-columns: 1fr;\n    padding: 0 1rem;\n  }\n`\n\nexport const FixedMenu = styled.div`\n  z-index: 99;\n  width: 100%;\n  box-sizing: border-box;\n  padding: 1rem;\n  box-sizing: border-box;\n  margin-bottom: 2rem;\n  max-width: 100vw;\n\n  @media screen and (max-width: 800px) {\n    margin-bottom: 0;\n  }\n`\n\nexport { Hint, Divider, Address, EmptyCard }\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { isAddress } from '../../utils/index.js'\n\nconst UbiqLogo = `https://raw.githubusercontent.com/ubiqlabs/assets/master/blockchains/ubiq/assets/logo.png`;\n\nconst BAD_IMAGES = {}\n\nconst Inline = styled.div`\n  display: flex;\n  align-items: center;\n  align-self: center;\n`\n\nconst Image = styled.img`\n  width: ${({ size }) => size};\n  height: ${({ size }) => size};\n  background-color: white;\n  border-radius: 50%;\n  box-shadow: 0px 6px 10px rgba(0, 0, 0, 0.075);\n`\n\nconst StyledUbiqLogo = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  > img {\n    width: ${({ size }) => size};\n    height: ${({ size }) => size};\n  }\n`\n\nexport default function TokenLogo({ address, header = false, size = '24px', ...rest }) {\n  const [error, setError] = useState(false)\n\n  useEffect(() => {\n    setError(false)\n  }, [address])\n\n  if (error || BAD_IMAGES[address]) {\n    return (\n      <Inline>\n        <span {...rest} alt={''} style={{ fontSize: size }} role=\"img\" aria-label=\"face\">\n          🤔\n        </span>\n      </Inline>\n    )\n  }\n\n  // hard coded fixes for trust wallet api issues\n  if (address?.toLowerCase() === '0x5e74c9036fb86bd7ecdcb084a0673efc32ea31cb') {\n    address = '0x42456d7084eacf4083f1140d3229471bba2949a8'\n  }\n\n  if (address?.toLowerCase() === '0xc011a73ee8576fb46f5e1c5751ca3b9fe0af2a6f') {\n    address = '0xc011a72400e58ecd99ee497cf89e3775d4bd732f'\n  }\n\n  if (address?.toLowerCase() === '0x1fa6a37c64804c0d797ba6bc1955e50068fbf362') {\n    return (\n      <StyledUbiqLogo size={size} {...rest}>\n        <img\n          src={UbiqLogo}\n          style={{\n            boxShadow: '0px 6px 10px rgba(0, 0, 0, 0.075)',\n            borderRadius: '24px',\n          }}\n          alt=\"\"\n        />\n      </StyledUbiqLogo>\n    )\n  }\n\n  const path = `https://raw.githubusercontent.com/ubiqlabs/assets/master/blockchains/ubiq/assets/${isAddress(\n    address\n  )}/logo.png`\n\n  return (\n    <Inline>\n      <Image\n        {...rest}\n        alt={''}\n        src={path}\n        size={size}\n        onError={(event) => {\n          BAD_IMAGES[address] = true\n          setError(true)\n          event.preventDefault()\n        }}\n      />\n    </Inline>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport TokenLogo from '../TokenLogo'\n\nexport default function DoubleTokenLogo({ a0, a1, size = 24, margin = false }) {\n  const TokenWrapper = styled.div`\n    position: relative;\n    display: flex;\n    flex-direction: row;\n    margin-right: ${({ sizeraw, margin }) => margin && (sizeraw / 3 + 8).toString() + 'px'};\n  `\n\n  const HigherLogo = styled(TokenLogo)`\n    z-index: 2;\n    // background-color: white;\n    border-radius: 50%;\n  `\n\n  const CoveredLogo = styled(TokenLogo)`\n    position: absolute;\n    left: ${({ sizeraw }) => (sizeraw / 2).toString() + 'px'};\n    // background-color: white;\n    border-radius: 50%;\n  `\n\n  return (\n    <TokenWrapper sizeraw={size} margin={margin}>\n      <HigherLogo address={a0} size={size.toString() + 'px'} sizeraw={size} />\n      <CoveredLogo address={a1} size={size.toString() + 'px'} sizeraw={size} />\n    </TokenWrapper>\n  )\n}\n","import { useState, useCallback, useEffect, useRef } from 'react'\nimport { shade } from 'polished'\nimport Vibrant from 'node-vibrant'\nimport { hex } from 'wcag-contrast'\nimport { isAddress } from '../utils'\nimport copy from 'copy-to-clipboard'\nimport { globalPrimary } from '../Theme'\n\nexport function useColor(tokenAddress, token) {\n  const [color, setColor] = useState(globalPrimary)\n  if (tokenAddress) {\n    const path = `https://raw.githubusercontent.com/ubiqlabs/assets/master/blockchains/ubiq/assets/${isAddress(\n      tokenAddress\n    )}/logo.png`\n    if (path) {\n      Vibrant.from(path).getPalette((err, palette) => {\n        if (palette && palette.Vibrant) {\n          let detectedHex = palette.Vibrant.hex\n          let AAscore = hex(detectedHex, '#FFF')\n          while (AAscore < 3) {\n            detectedHex = shade(0.005, detectedHex)\n            AAscore = hex(detectedHex, '#FFF')\n          }\n          if (token === 'DAI') {\n            setColor('#FAAB14')\n          } else {\n            setColor(detectedHex)\n          }\n        }\n      })\n    }\n  }\n  return color\n}\n\nexport function useCopyClipboard(timeout = 500) {\n  const [isCopied, setIsCopied] = useState(false)\n\n  const staticCopy = useCallback((text) => {\n    const didCopy = copy(text)\n    setIsCopied(didCopy)\n  }, [])\n\n  useEffect(() => {\n    if (isCopied) {\n      const hide = setTimeout(() => {\n        setIsCopied(false)\n      }, timeout)\n\n      return () => {\n        clearTimeout(hide)\n      }\n    }\n  }, [isCopied, setIsCopied, timeout])\n\n  return [isCopied, staticCopy]\n}\n\nexport const useOutsideClick = (ref, ref2, callback) => {\n  const handleClick = (e) => {\n    if (ref.current && ref.current && !ref2.current) {\n      callback(true)\n    } else if (ref.current && !ref.current.contains(e.target) && ref2.current && !ref2.current.contains(e.target)) {\n      callback(true)\n    } else {\n      callback(false)\n    }\n  }\n  useEffect(() => {\n    document.addEventListener('click', handleClick)\n    return () => {\n      document.removeEventListener('click', handleClick)\n    }\n  })\n}\n\nexport default function useInterval(callback: () => void, delay: null | number) {\n  const savedCallback = useRef<() => void>()\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback\n  }, [callback])\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      const current = savedCallback.current\n      current && current()\n    }\n\n    if (delay !== null) {\n      tick()\n      const id = setInterval(tick, delay)\n      return () => clearInterval(id)\n    }\n    return\n  }, [delay])\n}\n","import { Placement } from '@popperjs/core'\nimport { transparentize } from 'polished'\nimport React, { useState } from 'react'\nimport { usePopper } from 'react-popper'\nimport styled from 'styled-components'\nimport Portal from '@reach/portal'\nimport useInterval from '../../hooks'\n\nconst PopoverContainer = styled.div<{ show: boolean }>`\n  z-index: 9999;\n\n  visibility: ${(props) => (props.show ? 'visible' : 'hidden')};\n  opacity: ${(props) => (props.show ? 1 : 0)};\n  transition: visibility 150ms linear, opacity 150ms linear;\n\n  background: ${({ theme }) => theme.bg2};\n  border: 1px solid ${({ theme }) => theme.bg3};\n  box-shadow: 0 4px 8px 0 ${({ theme }) => transparentize(0.9, theme.shadow1)};\n  color: ${({ theme }) => theme.text2};\n  border-radius: 8px;\n`\n\nconst ReferenceElement = styled.div`\n  display: inline-block;\n`\n\nexport interface PopoverProps {\n  content: React.ReactNode\n  show: boolean\n  children: React.ReactNode\n  placement?: Placement\n}\n\nexport default function Popover({ content, show, children, placement = 'auto' }: PopoverProps) {\n  const [referenceElement, setReferenceElement] = useState<HTMLDivElement>(null)\n  const [popperElement, setPopperElement] = useState<HTMLDivElement>(null)\n  const [arrowElement] = useState<HTMLDivElement>(null)\n  const { styles, update, attributes } = usePopper(referenceElement, popperElement, {\n    placement,\n    strategy: 'fixed',\n    modifiers: [\n      { name: 'offset', options: { offset: [8, 8] } },\n      { name: 'arrow', options: { element: arrowElement } },\n    ],\n  })\n\n  useInterval(update, show ? 100 : null)\n\n  return (\n    <>\n      <ReferenceElement ref={setReferenceElement}>{children}</ReferenceElement>\n      <Portal>\n        <PopoverContainer show={show} ref={setPopperElement} style={styles.popper} {...attributes.popper}>\n          {content}\n          {/* <Arrow\n            className={`arrow-${attributes.popper?.['data-popper-placement'] ?? ''}`}\n            ref={setArrowElement}\n            style={styles.arrow}\n            {...attributes.arrow}\n          /> */}\n        </PopoverContainer>\n      </Portal>\n    </>\n  )\n}\n","import React, { useCallback, useState } from 'react'\nimport { HelpCircle as Question } from 'react-feather'\nimport styled from 'styled-components'\nimport Popover, { PopoverProps } from '../Popover'\n\nconst QuestionWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0.2rem;\n  border: none;\n  background: none;\n  outline: none;\n  cursor: default;\n  border-radius: 36px;\n  background-color: ${({ theme }) => theme.bg2};\n  color: ${({ theme }) => theme.text2};\n\n  :hover,\n  :focus {\n    opacity: 0.7;\n  }\n`\n\nconst TooltipContainer = styled.div`\n  width: 228px;\n  padding: 0.6rem 1rem;\n  line-height: 150%;\n  font-weight: 400;\n`\n\ninterface TooltipProps extends Omit<PopoverProps, 'content'> {\n  text: string\n}\n\nexport function Tooltip({ text, ...rest }: TooltipProps) {\n  return <Popover content={<TooltipContainer>{text}</TooltipContainer>} {...rest} />\n}\n\nexport default function QuestionHelper({ text, disabled }: { text: string; disabled?: boolean }) {\n  const [show, setShow] = useState<boolean>(false)\n\n  const open = useCallback(() => setShow(true), [setShow])\n  const close = useCallback(() => setShow(false), [setShow])\n\n  return (\n    <span style={{ marginLeft: 4 }}>\n      <Tooltip text={text} show={show && !disabled}>\n        <QuestionWrapper onClick={open} onMouseEnter={open} onMouseLeave={close}>\n          <Question size={16} />\n        </QuestionWrapper>\n      </Tooltip>\n    </span>\n  )\n}\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Tooltip } from '../QuestionHelper'\n\nconst TextWrapper = styled.div`\n  position: relative;\n  margin-left: ${({ margin }) => margin && '4px'};\n  color: ${({ theme, link }) => (link ? theme.blue : theme.text1)};\n  font-size: ${({ fontSize }) => fontSize ?? 'inherit'};\n\n  :hover {\n    cursor: pointer;\n  }\n\n  @media screen and (max-width: 600px) {\n    font-size: ${({ adjustSize }) => adjustSize && '12px'};\n  }\n`\n\nconst FormattedName = ({ text, maxCharacters, margin = false, adjustSize = false, fontSize, link, ...rest }) => {\n  const [showHover, setShowHover] = useState(false)\n\n  if (!text) {\n    return ''\n  }\n\n  if (text.length > maxCharacters) {\n    return (\n      <Tooltip text={text} show={showHover}>\n        <TextWrapper\n          onMouseEnter={() => setShowHover(true)}\n          onMouseLeave={() => setShowHover(false)}\n          margin={margin}\n          adjustSize={adjustSize}\n          link={link}\n          fontSize={fontSize}\n          {...rest}\n        >\n          {' ' + text.slice(0, maxCharacters - 1) + '...'}\n        </TextWrapper>\n      </Tooltip>\n    )\n  }\n\n  return (\n    <TextWrapper margin={margin} adjustSize={adjustSize} link={link} fontSize={fontSize} {...rest}>\n      {text}\n    </TextWrapper>\n  )\n}\n\nexport default FormattedName\n","import React, { useState, useEffect } from 'react'\nimport { useMedia } from 'react-use'\nimport dayjs from 'dayjs'\nimport LocalLoader from '../LocalLoader'\nimport utc from 'dayjs/plugin/utc'\nimport { Box, Flex, Text } from 'rebass'\nimport styled from 'styled-components'\n\nimport { CustomLink } from '../Link'\nimport { Divider } from '../../components'\nimport { withRouter } from 'react-router-dom'\nimport { formattedNum, formattedPercent } from '../../utils'\nimport DoubleTokenLogo from '../DoubleLogo'\nimport FormattedName from '../FormattedName'\nimport QuestionHelper from '../QuestionHelper'\nimport { TYPE } from '../../Theme'\n\ndayjs.extend(utc)\n\nconst PageButtons = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  margin-top: 2em;\n  margin-bottom: 0.5em;\n`\n\nconst Arrow = styled.div`\n  color: ${({ theme }) => theme.primary1};\n  opacity: ${(props) => (props.faded ? 0.3 : 1)};\n  padding: 0 20px;\n  user-select: none;\n  :hover {\n    cursor: pointer;\n  }\n`\n\nconst List = styled(Box)`\n  -webkit-overflow-scrolling: touch;\n`\n\nconst DashGrid = styled.div`\n  display: grid;\n  grid-gap: 1em;\n  grid-template-columns: 100px 1fr 1fr;\n  grid-template-areas: 'name liq vol';\n  padding: 0 1.125rem;\n\n  opacity: ${({ fade }) => (fade ? '0.6' : '1')};\n\n  > * {\n    justify-content: flex-end;\n\n    :first-child {\n      justify-content: flex-start;\n      text-align: left;\n      width: 20px;\n    }\n  }\n\n  @media screen and (min-width: 740px) {\n    padding: 0 1.125rem;\n    grid-template-columns: 1.5fr 1fr 1fr};\n    grid-template-areas: ' name liq vol pool ';\n  }\n\n  @media screen and (min-width: 1080px) {\n    padding: 0 1.125rem;\n    grid-template-columns: 1.5fr 1fr 1fr 1fr 1fr 1fr;\n    grid-template-areas: ' name liq vol volWeek fees apy';\n  }\n\n  @media screen and (min-width: 1200px) {\n    grid-template-columns: 1.5fr 1fr 1fr 1fr 1fr 1fr;\n    grid-template-areas: ' name liq vol volWeek fees apy';\n  }\n`\n\nconst ListWrapper = styled.div``\n\nconst ClickableText = styled(Text)`\n  color: ${({ theme }) => theme.text1};\n  &:hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n  text-align: end;\n  user-select: none;\n`\n\nconst DataText = styled(Flex)`\n  align-items: center;\n  text-align: center;\n  color: ${({ theme }) => theme.text1};\n\n  & > * {\n    font-size: 14px;\n  }\n\n  @media screen and (max-width: 600px) {\n    font-size: 12px;\n  }\n`\n\nconst SORT_FIELD = {\n  LIQ: 0,\n  VOL: 1,\n  VOL_7DAYS: 3,\n  FEES: 4,\n  APY: 5,\n}\n\nconst FIELD_TO_VALUE = (field, useTracked) => {\n  switch (field) {\n    case SORT_FIELD.LIQ:\n      return useTracked ? 'trackedReserveUSD' : 'reserveUSD'\n    case SORT_FIELD.VOL:\n      return useTracked ? 'oneDayVolumeUSD' : 'oneDayVolumeUntracked'\n    case SORT_FIELD.VOL_7DAYS:\n      return useTracked ? 'oneWeekVolumeUSD' : 'oneWeekVolumeUntracked'\n    case SORT_FIELD.FEES:\n      return useTracked ? 'oneDayVolumeUSD' : 'oneDayVolumeUntracked'\n    default:\n      return 'trackedReserveUSD'\n  }\n}\n\nfunction PairList({ pairs, color, disbaleLinks, maxItems = 10, useTracked = false }) {\n  const below600 = useMedia('(max-width: 600px)')\n  const below740 = useMedia('(max-width: 740px)')\n  const below1080 = useMedia('(max-width: 1080px)')\n\n  // pagination\n  const [page, setPage] = useState(1)\n  const [maxPage, setMaxPage] = useState(1)\n  const ITEMS_PER_PAGE = maxItems\n\n  // sorting\n  const [sortDirection, setSortDirection] = useState(true)\n  const [sortedColumn, setSortedColumn] = useState(SORT_FIELD.LIQ)\n\n  useEffect(() => {\n    setMaxPage(1) // edit this to do modular\n    setPage(1)\n  }, [pairs])\n\n  useEffect(() => {\n    if (pairs) {\n      let extraPages = 1\n      if (Object.keys(pairs).length % ITEMS_PER_PAGE === 0) {\n        extraPages = 0\n      }\n      setMaxPage(Math.floor(Object.keys(pairs).length / ITEMS_PER_PAGE) + extraPages)\n    }\n  }, [ITEMS_PER_PAGE, pairs])\n\n  const ListItem = ({ pairAddress, index }) => {\n    const pairData = pairs[pairAddress]\n\n    if (pairData && pairData.token0 && pairData.token1) {\n      const liquidity = formattedNum(useTracked ? pairData.trackedReserveUSD : pairData.reserveUSD, true)\n      const volume = formattedNum(useTracked ? pairData.oneDayVolumeUSD : pairData.oneDayVolumeUntracked, true)\n      const apy = formattedPercent(\n        ((useTracked ? pairData.oneDayVolumeUSD : pairData.oneDayVolumeUntracked) * 0.003 * 365 * 100) /\n          (useTracked ? pairData.trackedReserveUSD : pairData.reserveUSD)\n      )\n\n      const weekVolume = formattedNum(useTracked ? pairData.oneWeekVolumeUSD : pairData.oneWeekVolumeUntracked, true)\n\n      const fees = formattedNum(\n        useTracked ? pairData.oneDayVolumeUSD * 0.003 : pairData.oneDayVolumeUntracked * 0.003,\n        true\n      )\n\n      const noTracked = !pairData.trackedReserveUSD && !!pairData.reserveUSD\n\n      return (\n        <DashGrid style={{ height: '48px' }} disbaleLinks={disbaleLinks} focus={true} fade={noTracked}>\n          <DataText area=\"name\" fontWeight=\"500\">\n            {!below600 && <div style={{ marginRight: '20px', width: '10px' }}>{index}</div>}\n            <DoubleTokenLogo\n              size={below600 ? 16 : 20}\n              a0={pairData.token0.id}\n              a1={pairData.token1.id}\n              margin={!below740}\n            />\n            <CustomLink style={{ marginLeft: '20px', whiteSpace: 'nowrap' }} to={'/pair/' + pairAddress} color={color}>\n              <FormattedName\n                text={pairData.token0.symbol + '-' + pairData.token1.symbol}\n                maxCharacters={below600 ? 8 : 16}\n                adjustSize={true}\n                link={true}\n              />\n            </CustomLink>\n          </DataText>\n          <DataText area=\"liq\">{liquidity}</DataText>\n          <DataText area=\"vol\">{volume}</DataText>\n          {!below1080 && <DataText area=\"volWeek\">{weekVolume}</DataText>}\n          {!below1080 && <DataText area=\"fees\">{fees}</DataText>}\n          {!below1080 && <DataText area=\"apy\">{apy}</DataText>}\n        </DashGrid>\n      )\n    } else {\n      return ''\n    }\n  }\n\n  const pairList =\n    pairs &&\n    Object.keys(pairs)\n      .filter((address) => (useTracked ? !!pairs[address]?.trackedReserveUSD : true))\n      .sort((addressA, addressB) => {\n        const pairA = pairs[addressA]\n        const pairB = pairs[addressB]\n        if (sortedColumn === SORT_FIELD.APY) {\n          const apy0 = parseFloat(pairA.oneDayVolumeUSD * 0.003 * 356 * 100) / parseFloat(pairA.reserveUSD)\n          const apy1 = parseFloat(pairB.oneDayVolumeUSD * 0.003 * 356 * 100) / parseFloat(pairB.reserveUSD)\n          return apy0 > apy1 ? (sortDirection ? -1 : 1) * 1 : (sortDirection ? -1 : 1) * -1\n        }\n        return parseFloat(pairA[FIELD_TO_VALUE(sortedColumn, useTracked)]) >\n          parseFloat(pairB[FIELD_TO_VALUE(sortedColumn, useTracked)])\n          ? (sortDirection ? -1 : 1) * 1\n          : (sortDirection ? -1 : 1) * -1\n      })\n      .slice(ITEMS_PER_PAGE * (page - 1), page * ITEMS_PER_PAGE)\n      .map((pairAddress, index) => {\n        return (\n          pairAddress && (\n            <div key={index}>\n              <ListItem key={index} index={(page - 1) * ITEMS_PER_PAGE + index + 1} pairAddress={pairAddress} />\n              <Divider />\n            </div>\n          )\n        )\n      })\n\n  return (\n    <ListWrapper>\n      <DashGrid\n        center={true}\n        disbaleLinks={disbaleLinks}\n        style={{ height: 'fit-content', padding: '0 1.125rem 1rem 1.125rem' }}\n      >\n        <Flex alignItems=\"center\" justifyContent=\"flexStart\">\n          <TYPE.main area=\"name\">Name</TYPE.main>\n        </Flex>\n        <Flex alignItems=\"center\" justifyContent=\"flexEnd\">\n          <ClickableText\n            area=\"liq\"\n            onClick={(e) => {\n              setSortedColumn(SORT_FIELD.LIQ)\n              setSortDirection(sortedColumn !== SORT_FIELD.LIQ ? true : !sortDirection)\n            }}\n          >\n            Liquidity {sortedColumn === SORT_FIELD.LIQ ? (!sortDirection ? '↑' : '↓') : ''}\n          </ClickableText>\n        </Flex>\n        <Flex alignItems=\"center\">\n          <ClickableText\n            area=\"vol\"\n            onClick={(e) => {\n              setSortedColumn(SORT_FIELD.VOL)\n              setSortDirection(sortedColumn !== SORT_FIELD.VOL ? true : !sortDirection)\n            }}\n          >\n            Volume (24hrs)\n            {sortedColumn === SORT_FIELD.VOL ? (!sortDirection ? '↑' : '↓') : ''}\n          </ClickableText>\n        </Flex>\n        {!below1080 && (\n          <Flex alignItems=\"center\" justifyContent=\"flexEnd\">\n            <ClickableText\n              area=\"volWeek\"\n              onClick={(e) => {\n                setSortedColumn(SORT_FIELD.VOL_7DAYS)\n                setSortDirection(sortedColumn !== SORT_FIELD.VOL_7DAYS ? true : !sortDirection)\n              }}\n            >\n              Volume (7d) {sortedColumn === SORT_FIELD.VOL_7DAYS ? (!sortDirection ? '↑' : '↓') : ''}\n            </ClickableText>\n          </Flex>\n        )}\n        {!below1080 && (\n          <Flex alignItems=\"center\" justifyContent=\"flexEnd\">\n            <ClickableText\n              area=\"fees\"\n              onClick={(e) => {\n                setSortedColumn(SORT_FIELD.FEES)\n                setSortDirection(sortedColumn !== SORT_FIELD.FEES ? true : !sortDirection)\n              }}\n            >\n              Fees (24hr) {sortedColumn === SORT_FIELD.FEES ? (!sortDirection ? '↑' : '↓') : ''}\n            </ClickableText>\n          </Flex>\n        )}\n        {!below1080 && (\n          <Flex alignItems=\"center\" justifyContent=\"flexEnd\">\n            <ClickableText\n              area=\"apy\"\n              onClick={(e) => {\n                setSortedColumn(SORT_FIELD.APY)\n                setSortDirection(sortedColumn !== SORT_FIELD.APY ? true : !sortDirection)\n              }}\n            >\n              1y Fees / Liquidity {sortedColumn === SORT_FIELD.APY ? (!sortDirection ? '↑' : '↓') : ''}\n            </ClickableText>\n            <QuestionHelper text={'Based on 24hr volume annualized'} />\n          </Flex>\n        )}\n      </DashGrid>\n      <Divider />\n      <List p={0}>{!pairList ? <LocalLoader /> : pairList}</List>\n      <PageButtons>\n        <div\n          onClick={(e) => {\n            setPage(page === 1 ? page : page - 1)\n          }}\n        >\n          <Arrow faded={page === 1 ? true : false}>←</Arrow>\n        </div>\n        <TYPE.body>{'Page ' + page + ' of ' + maxPage}</TYPE.body>\n        <div\n          onClick={(e) => {\n            setPage(page === maxPage ? page : page + 1)\n          }}\n        >\n          <Arrow faded={page === maxPage ? true : false}>→</Arrow>\n        </div>\n      </PageButtons>\n    </ListWrapper>\n  )\n}\n\nexport default withRouter(PairList)\n","import React, { useState, useEffect, useMemo } from 'react'\nimport styled from 'styled-components'\nimport dayjs from 'dayjs'\nimport utc from 'dayjs/plugin/utc'\n\nimport { Box, Flex, Text } from 'rebass'\nimport TokenLogo from '../TokenLogo'\nimport { CustomLink } from '../Link'\nimport Row from '../Row'\nimport { Divider } from '..'\n\nimport { formattedNum, formattedPercent } from '../../utils'\nimport { useMedia } from 'react-use'\nimport { withRouter } from 'react-router-dom'\nimport { OVERVIEW_TOKEN_BLACKLIST } from '../../constants'\nimport FormattedName from '../FormattedName'\nimport { TYPE } from '../../Theme'\n\ndayjs.extend(utc)\n\nconst PageButtons = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  margin-top: 2em;\n  margin-bottom: 2em;\n`\n\nconst Arrow = styled.div`\n  color: ${({ theme }) => theme.primary1};\n  opacity: ${(props) => (props.faded ? 0.3 : 1)};\n  padding: 0 20px;\n  user-select: none;\n  :hover {\n    cursor: pointer;\n  }\n`\n\nconst List = styled(Box)`\n  -webkit-overflow-scrolling: touch;\n`\n\nconst DashGrid = styled.div`\n  display: grid;\n  grid-gap: 1em;\n  grid-template-columns: 100px 1fr 1fr;\n  grid-template-areas: 'name liq vol';\n  padding: 0 1.125rem;\n\n  > * {\n    justify-content: flex-end;\n\n    &:first-child {\n      justify-content: flex-start;\n      text-align: left;\n      width: 100px;\n    }\n  }\n\n  @media screen and (min-width: 680px) {\n    display: grid;\n    grid-gap: 1em;\n    grid-template-columns: 180px 1fr 1fr 1fr;\n    grid-template-areas: 'name symbol liq vol ';\n\n    > * {\n      justify-content: flex-end;\n      width: 100%;\n\n      &:first-child {\n        justify-content: flex-start;\n      }\n    }\n  }\n\n  @media screen and (min-width: 1080px) {\n    display: grid;\n    grid-gap: 0.5em;\n    grid-template-columns: 1.5fr 0.6fr 1fr 1fr 1fr 1fr;\n    grid-template-areas: 'name symbol liq vol price change';\n  }\n`\n\nconst ListWrapper = styled.div``\n\nconst ClickableText = styled(Text)`\n  text-align: end;\n  &:hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n  user-select: none;\n  color: ${({ theme }) => theme.text1};\n\n  @media screen and (max-width: 640px) {\n    font-size: 0.85rem;\n  }\n`\n\nconst DataText = styled(Flex)`\n  align-items: center;\n  text-align: center;\n  color: ${({ theme }) => theme.text1};\n\n  & > * {\n    font-size: 14px;\n  }\n\n  @media screen and (max-width: 600px) {\n    font-size: 12px;\n  }\n`\n\nconst SORT_FIELD = {\n  LIQ: 'totalLiquidityUSD',\n  VOL: 'oneDayVolumeUSD',\n  VOL_UT: 'oneDayVolumeUT',\n  SYMBOL: 'symbol',\n  NAME: 'name',\n  PRICE: 'priceUSD',\n  CHANGE: 'priceChangeUSD',\n}\n\n// @TODO rework into virtualized list\nfunction TopTokenList({ tokens, itemMax = 10, useTracked = false }) {\n  // page state\n  const [page, setPage] = useState(1)\n  const [maxPage, setMaxPage] = useState(1)\n\n  // sorting\n  const [sortDirection, setSortDirection] = useState(true)\n  const [sortedColumn, setSortedColumn] = useState(SORT_FIELD.LIQ)\n\n  const below1080 = useMedia('(max-width: 1080px)')\n  const below680 = useMedia('(max-width: 680px)')\n  const below600 = useMedia('(max-width: 600px)')\n\n  useEffect(() => {\n    setMaxPage(1) // edit this to do modular\n    setPage(1)\n  }, [tokens])\n\n  const formattedTokens = useMemo(() => {\n    return (\n      tokens &&\n      Object.keys(tokens)\n        .filter((key) => {\n          return !OVERVIEW_TOKEN_BLACKLIST.includes(key)\n        })\n        .map((key) => tokens[key])\n    )\n  }, [tokens])\n\n  useEffect(() => {\n    if (tokens && formattedTokens) {\n      let extraPages = 1\n      if (formattedTokens.length % itemMax === 0) {\n        extraPages = 0\n      }\n      setMaxPage(Math.floor(formattedTokens.length / itemMax) + extraPages)\n    }\n  }, [tokens, formattedTokens, itemMax])\n\n  const filteredList = useMemo(() => {\n    return (\n      formattedTokens &&\n      formattedTokens\n        .sort((a, b) => {\n          if (sortedColumn === SORT_FIELD.SYMBOL || sortedColumn === SORT_FIELD.NAME) {\n            return a[sortedColumn] > b[sortedColumn] ? (sortDirection ? -1 : 1) * 1 : (sortDirection ? -1 : 1) * -1\n          }\n          return parseFloat(a[sortedColumn]) > parseFloat(b[sortedColumn])\n            ? (sortDirection ? -1 : 1) * 1\n            : (sortDirection ? -1 : 1) * -1\n        })\n        .slice(itemMax * (page - 1), page * itemMax)\n    )\n  }, [formattedTokens, itemMax, page, sortDirection, sortedColumn])\n\n  const ListItem = ({ item, index }) => {\n    return (\n      <DashGrid style={{ height: '48px' }} focus={true}>\n        <DataText area=\"name\" fontWeight=\"500\">\n          <Row>\n            {!below680 && <div style={{ marginRight: '1rem', width: '10px' }}>{index}</div>}\n            <TokenLogo address={item.id} />\n            <CustomLink style={{ marginLeft: '16px', whiteSpace: 'nowrap' }} to={'/token/' + item.id}>\n              <FormattedName\n                text={below680 ? item.symbol : item.name}\n                maxCharacters={below600 ? 8 : 20}\n                adjustSize={true}\n                link={true}\n              />\n            </CustomLink>\n          </Row>\n        </DataText>\n        {!below680 && (\n          <DataText area=\"symbol\" color=\"text\" fontWeight=\"500\">\n            <FormattedName text={item.symbol} maxCharacters={5} />\n          </DataText>\n        )}\n        <DataText area=\"liq\">{formattedNum(item.totalLiquidityUSD, true)}</DataText>\n        <DataText area=\"vol\">{formattedNum(item.oneDayVolumeUSD, true)}</DataText>\n        {!below1080 && (\n          <DataText area=\"price\" color=\"text\" fontWeight=\"500\">\n            {formattedNum(item.priceUSD, true)}\n          </DataText>\n        )}\n        {!below1080 && <DataText area=\"change\">{formattedPercent(item.priceChangeUSD)}</DataText>}\n      </DashGrid>\n    )\n  }\n\n  return (\n    <ListWrapper>\n      <DashGrid center={true} style={{ height: 'fit-content', padding: '0 1.125rem 1rem 1.125rem' }}>\n        <Flex alignItems=\"center\" justifyContent=\"flexStart\">\n          <ClickableText\n            color=\"text\"\n            area=\"name\"\n            fontWeight=\"500\"\n            onClick={(e) => {\n              setSortedColumn(SORT_FIELD.NAME)\n              setSortDirection(sortedColumn !== SORT_FIELD.NAME ? true : !sortDirection)\n            }}\n          >\n            {below680 ? 'Symbol' : 'Name'} {sortedColumn === SORT_FIELD.NAME ? (!sortDirection ? '↑' : '↓') : ''}\n          </ClickableText>\n        </Flex>\n        {!below680 && (\n          <Flex alignItems=\"center\">\n            <ClickableText\n              area=\"symbol\"\n              onClick={(e) => {\n                setSortedColumn(SORT_FIELD.SYMBOL)\n                setSortDirection(sortedColumn !== SORT_FIELD.SYMBOL ? true : !sortDirection)\n              }}\n            >\n              Symbol {sortedColumn === SORT_FIELD.SYMBOL ? (!sortDirection ? '↑' : '↓') : ''}\n            </ClickableText>\n          </Flex>\n        )}\n\n        <Flex alignItems=\"center\">\n          <ClickableText\n            area=\"liq\"\n            onClick={(e) => {\n              setSortedColumn(SORT_FIELD.LIQ)\n              setSortDirection(sortedColumn !== SORT_FIELD.LIQ ? true : !sortDirection)\n            }}\n          >\n            Liquidity {sortedColumn === SORT_FIELD.LIQ ? (!sortDirection ? '↑' : '↓') : ''}\n          </ClickableText>\n        </Flex>\n        <Flex alignItems=\"center\">\n          <ClickableText\n            area=\"vol\"\n            onClick={(e) => {\n              setSortedColumn(useTracked ? SORT_FIELD.VOL_UT : SORT_FIELD.VOL)\n              setSortDirection(\n                sortedColumn !== (useTracked ? SORT_FIELD.VOL_UT : SORT_FIELD.VOL) ? true : !sortDirection\n              )\n            }}\n          >\n            Volume (24hrs)\n            {sortedColumn === (useTracked ? SORT_FIELD.VOL_UT : SORT_FIELD.VOL) ? (!sortDirection ? '↑' : '↓') : ''}\n          </ClickableText>\n        </Flex>\n        {!below1080 && (\n          <Flex alignItems=\"center\">\n            <ClickableText\n              area=\"price\"\n              onClick={(e) => {\n                setSortedColumn(SORT_FIELD.PRICE)\n                setSortDirection(sortedColumn !== SORT_FIELD.PRICE ? true : !sortDirection)\n              }}\n            >\n              Price {sortedColumn === SORT_FIELD.PRICE ? (!sortDirection ? '↑' : '↓') : ''}\n            </ClickableText>\n          </Flex>\n        )}\n        {!below1080 && (\n          <Flex alignItems=\"center\">\n            <ClickableText\n              area=\"change\"\n              onClick={(e) => {\n                setSortedColumn(SORT_FIELD.CHANGE)\n                setSortDirection(sortedColumn !== SORT_FIELD.CHANGE ? true : !sortDirection)\n              }}\n            >\n              Price Change (24hrs)\n              {sortedColumn === SORT_FIELD.CHANGE ? (!sortDirection ? '↑' : '↓') : ''}\n            </ClickableText>\n          </Flex>\n        )}\n      </DashGrid>\n      <Divider />\n      <List p={0}>\n        {filteredList &&\n          filteredList.map((item, index) => {\n            return (\n              <div key={index}>\n                <ListItem key={index} index={(page - 1) * itemMax + index + 1} item={item} />\n                <Divider />\n              </div>\n            )\n          })}\n      </List>\n      <PageButtons>\n        <div onClick={() => setPage(page === 1 ? page : page - 1)}>\n          <Arrow faded={page === 1 ? true : false}>←</Arrow>\n        </div>\n        <TYPE.body>{'Page ' + page + ' of ' + maxPage}</TYPE.body>\n        <div onClick={() => setPage(page === maxPage ? page : page + 1)}>\n          <Arrow faded={page === maxPage ? true : false}>→</Arrow>\n        </div>\n      </PageButtons>\n    </ListWrapper>\n  )\n}\n\nexport default withRouter(TopTokenList)\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\n\nimport Row, { RowBetween } from '../Row'\nimport { AutoColumn } from '../Column'\nimport { ChevronDown as Arrow } from 'react-feather'\nimport { TYPE } from '../../Theme'\nimport { StyledIcon } from '..'\n\nconst Wrapper = styled.div`\n  z-index: 20;\n  position: relative;\n  background-color: ${({ theme }) => theme.panelColor};\n  border: 1px solid ${({ open, color }) => (open ? color : 'rgba(0, 0, 0, 0.15);')} \n  width: 100px;\n  padding: 4px 10px;\n  padding-right: 6px;\n  border-radius: 8px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  :hover {\n    cursor: pointer;\n  }\n`\n\nconst Dropdown = styled.div`\n  position: absolute;\n  top: 34px;\n  padding-top: 40px;\n  width: calc(100% - 40px);\n  background-color: ${({ theme }) => theme.bg1};\n  border: 1px solid rgba(0, 0, 0, 0.15);\n  padding: 10px 10px;\n  border-radius: 8px;\n  width: calc(100% - 20px);\n  font-weight: 500;\n  font-size: 1rem;\n  color: black;\n  :hover {\n    cursor: pointer;\n  }\n`\n\nconst ArrowStyled = styled(Arrow)`\n  height: 20px;\n  width: 20px;\n  margin-left: 6px;\n`\n\nconst DropdownSelect = ({ options, active, setActive, color }) => {\n  const [showDropdown, toggleDropdown] = useState(false)\n\n  return (\n    <Wrapper open={showDropdown} color={color}>\n      <RowBetween onClick={() => toggleDropdown(!showDropdown)} justify=\"center\">\n        <TYPE.main>{active}</TYPE.main>\n        <StyledIcon>\n          <ArrowStyled />\n        </StyledIcon>\n      </RowBetween>\n      {showDropdown && (\n        <Dropdown>\n          <AutoColumn gap=\"20px\">\n            {Object.keys(options).map((key, index) => {\n              let option = options[key]\n              return (\n                option !== active && (\n                  <Row\n                    onClick={() => {\n                      toggleDropdown(!showDropdown)\n                      setActive(option)\n                    }}\n                    key={index}\n                  >\n                    <TYPE.body fontSize={14}>{option}</TYPE.body>\n                  </Row>\n                )\n              )\n            })}\n          </AutoColumn>\n        </Dropdown>\n      )}\n    </Wrapper>\n  )\n}\n\nexport default DropdownSelect\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport dayjs from 'dayjs'\nimport utc from 'dayjs/plugin/utc'\n\nimport { formatTime, formattedNum, urls } from '../../utils'\nimport { useMedia } from 'react-use'\nimport { useCurrentCurrency } from '../../contexts/Application'\nimport { RowFixed, RowBetween } from '../Row'\n\nimport LocalLoader from '../LocalLoader'\nimport { Box, Flex, Text } from 'rebass'\nimport Link from '../Link'\nimport { Divider, EmptyCard } from '..'\nimport DropdownSelect from '../DropdownSelect'\nimport FormattedName from '../FormattedName'\nimport { TYPE } from '../../Theme'\nimport { updateNameData } from '../../utils/data'\n\ndayjs.extend(utc)\n\nconst PageButtons = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  margin-top: 2em;\n  margin-bottom: 0.5em;\n`\n\nconst Arrow = styled.div`\n  color: #2f80ed;\n  opacity: ${(props) => (props.faded ? 0.3 : 1)};\n  padding: 0 20px;\n  user-select: none;\n  :hover {\n    cursor: pointer;\n  }\n`\n\nconst List = styled(Box)`\n  -webkit-overflow-scrolling: touch;\n`\n\nconst DashGrid = styled.div`\n  display: grid;\n  grid-gap: 1em;\n  grid-template-columns: 100px 1fr 1fr;\n  grid-template-areas: 'txn value time';\n\n  > * {\n    justify-content: flex-end;\n    width: 100%;\n\n    &:first-child {\n      justify-content: flex-start;\n      text-align: left;\n      width: 100px;\n    }\n  }\n\n  @media screen and (min-width: 500px) {\n    > * {\n      &:first-child {\n        width: 180px;\n      }\n    }\n  }\n\n  @media screen and (min-width: 780px) {\n    max-width: 1320px;\n    grid-template-columns: 1.2fr 1fr 1fr 1fr 1fr;\n    grid-template-areas: 'txn value amountToken amountOther time';\n\n    > * {\n      &:first-child {\n        width: 180px;\n      }\n    }\n  }\n\n  @media screen and (min-width: 1080px) {\n    max-width: 1320px;\n    grid-template-columns: 1.2fr 1fr 1fr 1fr 1fr 1fr;\n    grid-template-areas: 'txn value amountToken amountOther account time';\n  }\n`\n\nconst ClickableText = styled(Text)`\n  color: ${({ theme }) => theme.text1};\n  user-select: none;\n  text-align: end;\n\n  &:hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n\n  @media screen and (max-width: 640px) {\n    font-size: 14px;\n  }\n`\n\nconst DataText = styled(Flex)`\n  align-items: center;\n  text-align: right;\n  color: ${({ theme }) => theme.text1};\n\n  & > * {\n    font-size: 1em;\n  }\n\n  @media screen and (max-width: 40em) {\n    font-size: 0.85rem;\n  }\n`\n\nconst SortText = styled.button`\n  cursor: pointer;\n  font-weight: ${({ active, theme }) => (active ? 500 : 400)};\n  margin-right: 0.75rem !important;\n  border: none;\n  background-color: transparent;\n  font-size: 1rem;\n  padding: 0px;\n  color: ${({ active, theme }) => (active ? theme.text1 : theme.text3)};\n  outline: none;\n\n  @media screen and (max-width: 600px) {\n    font-size: 14px;\n  }\n`\n\nconst SORT_FIELD = {\n  VALUE: 'amountUSD',\n  AMOUNT0: 'token0Amount',\n  AMOUNT1: 'token1Amount',\n  TIMESTAMP: 'timestamp',\n}\n\nconst TXN_TYPE = {\n  ALL: 'All',\n  SWAP: 'Swaps',\n  ADD: 'Adds',\n  REMOVE: 'Removes',\n}\n\nconst ITEMS_PER_PAGE = 10\n\nfunction getTransactionType(event, symbol0, symbol1) {\n  const formattedS0 = symbol0?.length > 8 ? symbol0.slice(0, 7) + '...' : symbol0\n  const formattedS1 = symbol1?.length > 8 ? symbol1.slice(0, 7) + '...' : symbol1\n  switch (event) {\n    case TXN_TYPE.ADD:\n      return 'Add ' + formattedS0 + ' and ' + formattedS1\n    case TXN_TYPE.REMOVE:\n      return 'Remove ' + formattedS0 + ' and ' + formattedS1\n    case TXN_TYPE.SWAP:\n      return 'Swap ' + formattedS0 + ' for ' + formattedS1\n    default:\n      return ''\n  }\n}\n\n// @TODO rework into virtualized list\nfunction TxnList({ transactions, symbol0Override, symbol1Override, color }) {\n  // page state\n  const [page, setPage] = useState(1)\n  const [maxPage, setMaxPage] = useState(1)\n\n  // sorting\n  const [sortDirection, setSortDirection] = useState(true)\n  const [sortedColumn, setSortedColumn] = useState(SORT_FIELD.TIMESTAMP)\n  const [filteredItems, setFilteredItems] = useState()\n  const [txFilter, setTxFilter] = useState(TXN_TYPE.ALL)\n\n  const [currency] = useCurrentCurrency()\n\n  useEffect(() => {\n    setMaxPage(1) // edit this to do modular\n    setPage(1)\n  }, [transactions])\n\n  // parse the txns and format for UI\n  useEffect(() => {\n    if (transactions && transactions.mints && transactions.burns && transactions.swaps) {\n      let newTxns = []\n      if (transactions.mints.length > 0) {\n        transactions.mints.map((mint) => {\n          let newTxn = {}\n          newTxn.hash = mint.transaction.id\n          newTxn.timestamp = mint.transaction.timestamp\n          newTxn.type = TXN_TYPE.ADD\n          newTxn.token0Amount = mint.amount0\n          newTxn.token1Amount = mint.amount1\n          newTxn.account = mint.to\n          newTxn.token0Symbol = updateNameData(mint.pair).token0.symbol\n          newTxn.token1Symbol = updateNameData(mint.pair).token1.symbol\n          newTxn.amountUSD = mint.amountUSD\n          return newTxns.push(newTxn)\n        })\n      }\n      if (transactions.burns.length > 0) {\n        transactions.burns.map((burn) => {\n          let newTxn = {}\n          newTxn.hash = burn.transaction.id\n          newTxn.timestamp = burn.transaction.timestamp\n          newTxn.type = TXN_TYPE.REMOVE\n          newTxn.token0Amount = burn.amount0\n          newTxn.token1Amount = burn.amount1\n          newTxn.account = burn.sender\n          newTxn.token0Symbol = updateNameData(burn.pair).token0.symbol\n          newTxn.token1Symbol = updateNameData(burn.pair).token1.symbol\n          newTxn.amountUSD = burn.amountUSD\n          return newTxns.push(newTxn)\n        })\n      }\n      if (transactions.swaps.length > 0) {\n        transactions.swaps.map((swap) => {\n          const netToken0 = swap.amount0In - swap.amount0Out\n          const netToken1 = swap.amount1In - swap.amount1Out\n\n          let newTxn = {}\n\n          if (netToken0 < 0) {\n            newTxn.token0Symbol = updateNameData(swap.pair).token0.symbol\n            newTxn.token1Symbol = updateNameData(swap.pair).token1.symbol\n            newTxn.token0Amount = Math.abs(netToken0)\n            newTxn.token1Amount = Math.abs(netToken1)\n          } else if (netToken1 < 0) {\n            newTxn.token0Symbol = updateNameData(swap.pair).token1.symbol\n            newTxn.token1Symbol = updateNameData(swap.pair).token0.symbol\n            newTxn.token0Amount = Math.abs(netToken1)\n            newTxn.token1Amount = Math.abs(netToken0)\n          }\n\n          newTxn.hash = swap.transaction.id\n          newTxn.timestamp = swap.transaction.timestamp\n          newTxn.type = TXN_TYPE.SWAP\n\n          newTxn.amountUSD = swap.amountUSD\n          newTxn.account = swap.to\n          return newTxns.push(newTxn)\n        })\n      }\n\n      const filtered = newTxns.filter((item) => {\n        if (txFilter !== TXN_TYPE.ALL) {\n          return item.type === txFilter\n        }\n        return true\n      })\n      setFilteredItems(filtered)\n      let extraPages = 1\n      if (filtered.length % ITEMS_PER_PAGE === 0) {\n        extraPages = 0\n      }\n      if (filtered.length === 0) {\n        setMaxPage(1)\n      } else {\n        setMaxPage(Math.floor(filtered.length / ITEMS_PER_PAGE) + extraPages)\n      }\n    }\n  }, [transactions, txFilter])\n\n  useEffect(() => {\n    setPage(1)\n  }, [txFilter])\n\n  const filteredList =\n    filteredItems &&\n    filteredItems\n      .sort((a, b) => {\n        return parseFloat(a[sortedColumn]) > parseFloat(b[sortedColumn])\n          ? (sortDirection ? -1 : 1) * 1\n          : (sortDirection ? -1 : 1) * -1\n      })\n      .slice(ITEMS_PER_PAGE * (page - 1), page * ITEMS_PER_PAGE)\n\n  const below1080 = useMedia('(max-width: 1080px)')\n  const below780 = useMedia('(max-width: 780px)')\n\n  const ListItem = ({ item }) => {\n    return (\n      <DashGrid style={{ height: '48px' }}>\n        <DataText area=\"txn\" fontWeight=\"500\">\n          <Link color={color} external href={urls.showTransaction(item.hash)}>\n            {getTransactionType(item.type, item.token1Symbol, item.token0Symbol)}\n          </Link>\n        </DataText>\n        <DataText area=\"value\">\n          {currency === 'UBQ' ? 'Ξ ' + formattedNum(item.valueETH) : formattedNum(item.amountUSD, true)}\n        </DataText>\n        {!below780 && (\n          <>\n            <DataText area=\"amountOther\">\n              {formattedNum(item.token1Amount) + ' '}{' '}\n              <FormattedName text={item.token1Symbol} maxCharacters={5} margin={true} />\n            </DataText>\n            <DataText area=\"amountToken\">\n              {formattedNum(item.token0Amount) + ' '}{' '}\n              <FormattedName text={item.token0Symbol} maxCharacters={5} margin={true} />\n            </DataText>\n          </>\n        )}\n        {!below1080 && (\n          <DataText area=\"account\">\n            <Link color={color} href={'/#/account/' + item.account}>\n              {item.account && item.account.slice(0, 6) + '...' + item.account.slice(38, 42)}\n            </Link>\n          </DataText>\n        )}\n        <DataText area=\"time\">{formatTime(item.timestamp)}</DataText>\n      </DashGrid>\n    )\n  }\n\n  return (\n    <>\n      <DashGrid center={true} style={{ height: 'fit-content', padding: '0 0 1rem 0' }}>\n        {below780 ? (\n          <RowBetween area=\"txn\">\n            <DropdownSelect options={TXN_TYPE} active={txFilter} setActive={setTxFilter} color={color} />\n          </RowBetween>\n        ) : (\n          <RowFixed area=\"txn\" gap=\"10px\" pl={4}>\n            <SortText\n              onClick={() => {\n                setTxFilter(TXN_TYPE.ALL)\n              }}\n              active={txFilter === TXN_TYPE.ALL}\n            >\n              All\n            </SortText>\n            <SortText\n              onClick={() => {\n                setTxFilter(TXN_TYPE.SWAP)\n              }}\n              active={txFilter === TXN_TYPE.SWAP}\n            >\n              Swaps\n            </SortText>\n            <SortText\n              onClick={() => {\n                setTxFilter(TXN_TYPE.ADD)\n              }}\n              active={txFilter === TXN_TYPE.ADD}\n            >\n              Adds\n            </SortText>\n            <SortText\n              onClick={() => {\n                setTxFilter(TXN_TYPE.REMOVE)\n              }}\n              active={txFilter === TXN_TYPE.REMOVE}\n            >\n              Removes\n            </SortText>\n          </RowFixed>\n        )}\n\n        <Flex alignItems=\"center\" justifyContent=\"flexStart\">\n          <ClickableText\n            color=\"textDim\"\n            area=\"value\"\n            onClick={(e) => {\n              setSortedColumn(SORT_FIELD.VALUE)\n              setSortDirection(sortedColumn !== SORT_FIELD.VALUE ? true : !sortDirection)\n            }}\n          >\n            Total Value {sortedColumn === SORT_FIELD.VALUE ? (!sortDirection ? '↑' : '↓') : ''}\n          </ClickableText>\n        </Flex>\n        {!below780 && (\n          <Flex alignItems=\"center\">\n            <ClickableText\n              area=\"amountToken\"\n              color=\"textDim\"\n              onClick={() => {\n                setSortedColumn(SORT_FIELD.AMOUNT0)\n                setSortDirection(sortedColumn !== SORT_FIELD.AMOUNT0 ? true : !sortDirection)\n              }}\n            >\n              {symbol0Override ? symbol0Override + ' Amount' : 'Token Amount'}{' '}\n              {sortedColumn === SORT_FIELD.AMOUNT0 ? (sortDirection ? '↑' : '↓') : ''}\n            </ClickableText>\n          </Flex>\n        )}\n        <>\n          {!below780 && (\n            <Flex alignItems=\"center\">\n              <ClickableText\n                area=\"amountOther\"\n                color=\"textDim\"\n                onClick={() => {\n                  setSortedColumn(SORT_FIELD.AMOUNT1)\n                  setSortDirection(sortedColumn !== SORT_FIELD.AMOUNT1 ? true : !sortDirection)\n                }}\n              >\n                {symbol1Override ? symbol1Override + ' Amount' : 'Token Amount'}{' '}\n                {sortedColumn === SORT_FIELD.AMOUNT1 ? (sortDirection ? '↑' : '↓') : ''}\n              </ClickableText>\n            </Flex>\n          )}\n          {!below1080 && (\n            <Flex alignItems=\"center\">\n              <TYPE.body area=\"account\">Account</TYPE.body>\n            </Flex>\n          )}\n          <Flex alignItems=\"center\">\n            <ClickableText\n              area=\"time\"\n              color=\"textDim\"\n              onClick={() => {\n                setSortedColumn(SORT_FIELD.TIMESTAMP)\n                setSortDirection(sortedColumn !== SORT_FIELD.TIMESTAMP ? true : !sortDirection)\n              }}\n            >\n              Time {sortedColumn === SORT_FIELD.TIMESTAMP ? (!sortDirection ? '↑' : '↓') : ''}\n            </ClickableText>\n          </Flex>\n        </>\n      </DashGrid>\n      <Divider />\n      <List p={0}>\n        {!filteredList ? (\n          <LocalLoader />\n        ) : filteredList.length === 0 ? (\n          <EmptyCard>No recent transactions found.</EmptyCard>\n        ) : (\n          filteredList.map((item, index) => {\n            return (\n              <div key={index}>\n                <ListItem key={index} index={index + 1} item={item} />\n                <Divider />\n              </div>\n            )\n          })\n        )}\n      </List>\n      <PageButtons>\n        <div\n          onClick={(e) => {\n            setPage(page === 1 ? page : page - 1)\n          }}\n        >\n          <Arrow faded={page === 1 ? true : false}>←</Arrow>\n        </div>\n        <TYPE.body>{'Page ' + page + ' of ' + maxPage}</TYPE.body>\n        <div\n          onClick={(e) => {\n            setPage(page === maxPage ? page : page + 1)\n          }}\n        >\n          <Arrow faded={page === maxPage ? true : false}>→</Arrow>\n        </div>\n      </PageButtons>\n    </>\n  )\n}\n\nexport default TxnList\n","import React, { useState, useEffect, useRef } from 'react'\nimport { createChart } from 'lightweight-charts'\nimport dayjs from 'dayjs'\nimport utc from 'dayjs/plugin/utc'\nimport { formattedNum } from '../../utils'\nimport styled from 'styled-components'\nimport { usePrevious } from 'react-use'\nimport { Play } from 'react-feather'\nimport { useDarkModeManager } from '../../contexts/LocalStorage'\nimport { IconWrapper } from '..'\nimport { globalPrimary } from '../../Theme'\nimport { transparentize } from 'polished'\n\ndayjs.extend(utc)\n\nexport const CHART_TYPES = {\n  BAR: 'BAR',\n  AREA: 'AREA',\n}\n\nconst Wrapper = styled.div`\n  position: relative;\n`\n\n// constant height for charts\nconst HEIGHT = 300\n\nconst TradingViewChart = ({\n  type = CHART_TYPES.BAR,\n  data,\n  base,\n  baseChange,\n  field,\n  title,\n  width,\n  useWeekly = false,\n}) => {\n  // reference for DOM element to create with chart\n  const ref = useRef()\n\n  // pointer to the chart object\n  const [chartCreated, setChartCreated] = useState(false)\n  const dataPrev = usePrevious(data)\n\n  useEffect(() => {\n    if (data !== dataPrev && chartCreated && type === CHART_TYPES.BAR) {\n      // remove the tooltip element\n      let tooltip = document.getElementById('tooltip-id' + type)\n      let node = document.getElementById('test-id' + type)\n      node.removeChild(tooltip)\n      chartCreated.resize(0, 0)\n      setChartCreated()\n    }\n  }, [chartCreated, data, dataPrev, type])\n\n  // parese the data and format for tardingview consumption\n  const formattedData = data?.map((entry) => {\n    return {\n      time: dayjs.unix(entry.date).utc().format('YYYY-MM-DD'),\n      value: parseFloat(entry[field]),\n    }\n  })\n\n  // adjust the scale based on the type of chart\n  const topScale = type === CHART_TYPES.AREA ? 0.32 : 0.2\n\n  const [darkMode] = useDarkModeManager()\n  const textColor = darkMode ? 'white' : 'black'\n  const previousTheme = usePrevious(darkMode)\n\n  // reset the chart if them switches\n  useEffect(() => {\n    if (chartCreated && previousTheme !== darkMode) {\n      // remove the tooltip element\n      let tooltip = document.getElementById('tooltip-id' + type)\n      let node = document.getElementById('test-id' + type)\n      node.removeChild(tooltip)\n      chartCreated.resize(0, 0)\n      setChartCreated()\n    }\n  }, [chartCreated, darkMode, previousTheme, type])\n\n  // if no chart created yet, create one with options and add to DOM manually\n  useEffect(() => {\n    if (!chartCreated && formattedData) {\n      var chart = createChart(ref.current, {\n        width: width,\n        height: HEIGHT,\n        layout: {\n          backgroundColor: 'transparent',\n          textColor: textColor,\n        },\n        rightPriceScale: {\n          scaleMargins: {\n            top: topScale,\n            bottom: 0,\n          },\n          borderVisible: false,\n        },\n        timeScale: {\n          borderVisible: false,\n        },\n        grid: {\n          horzLines: {\n            color: 'rgba(197, 203, 206, 0.5)',\n            visible: false,\n          },\n          vertLines: {\n            color: 'rgba(197, 203, 206, 0.5)',\n            visible: false,\n          },\n        },\n        crosshair: {\n          horzLine: {\n            visible: false,\n            labelVisible: false,\n          },\n          vertLine: {\n            visible: true,\n            style: 0,\n            width: 2,\n            color: 'rgba(32, 38, 46, 0.1)',\n            labelVisible: false,\n          },\n        },\n        localization: {\n          priceFormatter: (val) => formattedNum(val, true),\n        },\n      })\n\n      var series =\n        type === CHART_TYPES.BAR\n          ? chart.addHistogramSeries({\n            color: globalPrimary,\n            priceFormat: {\n              type: 'volume',\n            },\n            scaleMargins: {\n              top: 0.32,\n              bottom: 0,\n            },\n            lineColor: globalPrimary,\n            lineWidth: 3,\n          })\n          : chart.addAreaSeries({\n            topColor: globalPrimary,\n            bottomColor: transparentize(1, globalPrimary),\n            lineColor: globalPrimary,\n            lineWidth: 3,\n          })\n\n      series.setData(formattedData)\n      var toolTip = document.createElement('div')\n      toolTip.setAttribute('id', 'tooltip-id' + type)\n      toolTip.className = darkMode ? 'three-line-legend-dark' : 'three-line-legend'\n      ref.current.appendChild(toolTip)\n      toolTip.style.display = 'block'\n      toolTip.style.fontWeight = '500'\n      toolTip.style.left = -4 + 'px'\n      toolTip.style.top = '-' + 8 + 'px'\n      toolTip.style.backgroundColor = 'transparent'\n\n      // format numbers\n      let percentChange = baseChange?.toFixed(2)\n      let formattedPercentChange = (percentChange > 0 ? '+' : '') + percentChange + '%'\n      let color = percentChange >= 0 ? 'green' : 'red'\n\n      // get the title of the chart\n      function setLastBarText() {\n        toolTip.innerHTML =\n          `<div style=\"font-size: 16px; margin: 4px 0px; color: ${textColor};\">${title} ${type === CHART_TYPES.BAR && !useWeekly ? '(24hr)' : ''\n          }</div>` +\n          `<div style=\"font-size: 22px; margin: 4px 0px; color:${textColor}\" >` +\n          formattedNum(base ?? 0, true) +\n          `<span style=\"margin-left: 10px; font-size: 16px; color: ${color};\">${formattedPercentChange}</span>` +\n          '</div>'\n      }\n      setLastBarText()\n\n      // update the title when hovering on the chart\n      chart.subscribeCrosshairMove(function (param) {\n        if (\n          param === undefined ||\n          param.time === undefined ||\n          param.point.x < 0 ||\n          param.point.x > width ||\n          param.point.y < 0 ||\n          param.point.y > HEIGHT\n        ) {\n          setLastBarText()\n        } else {\n          let dateStr = useWeekly\n            ? dayjs(param.time.year + '-' + param.time.month + '-' + param.time.day)\n              .startOf('week')\n              .format('MMMM D, YYYY') +\n            '-' +\n            dayjs(param.time.year + '-' + param.time.month + '-' + param.time.day)\n              .endOf('week')\n              .format('MMMM D, YYYY')\n            : dayjs(param.time.year + '-' + param.time.month + '-' + param.time.day).format('MMMM D, YYYY')\n          var price = param.seriesPrices.get(series)\n\n          toolTip.innerHTML =\n            `<div style=\"font-size: 16px; margin: 4px 0px; color: ${textColor};\">${title}</div>` +\n            `<div style=\"font-size: 22px; margin: 4px 0px; color: ${textColor}\">` +\n            formattedNum(price, true) +\n            '</div>' +\n            '<div>' +\n            dateStr +\n            '</div>'\n        }\n      })\n\n      chart.timeScale().fitContent()\n\n      setChartCreated(chart)\n    }\n  }, [\n    base,\n    baseChange,\n    chartCreated,\n    darkMode,\n    data,\n    formattedData,\n    textColor,\n    title,\n    topScale,\n    type,\n    useWeekly,\n    width,\n  ])\n\n  // responsiveness\n  useEffect(() => {\n    if (width) {\n      chartCreated && chartCreated.resize(width, HEIGHT)\n      chartCreated && chartCreated.timeScale().scrollToPosition(0)\n    }\n  }, [chartCreated, width])\n\n  return (\n    <Wrapper>\n      <div ref={ref} id={'test-id' + type} />\n      <IconWrapper>\n        <Play\n          onClick={() => {\n            chartCreated && chartCreated.timeScale().fitContent()\n          }}\n        />\n      </IconWrapper>\n    </Wrapper>\n  )\n}\n\nexport default TradingViewChart\n","import React from 'react'\nimport { Button as RebassButton } from 'rebass/styled-components'\nimport styled from 'styled-components'\nimport { Plus, ChevronDown, ChevronUp } from 'react-feather'\nimport { darken, transparentize } from 'polished'\nimport { RowBetween } from '../Row'\nimport { StyledIcon } from '..'\n\nconst Base = styled(RebassButton)`\n  padding: 8px 12px;\n  font-size: 0.825rem;\n  font-weight: 600;\n  border-radius: 12px;\n  cursor: pointer;\n  outline: none;\n  border: 1px solid transparent;\n  outline: none;\n  border-bottom-right-radius: ${({ open }) => open && '0'};\n  border-bottom-left-radius: ${({ open }) => open && '0'};\n`\n\nconst BaseCustom = styled(RebassButton)`\n  padding: 16px 12px;\n  font-size: 0.825rem;\n  font-weight: 400;\n  border-radius: 12px;\n  cursor: pointer;\n  outline: none;\n`\n\nconst Dull = styled(Base)`\n  background-color: rgba(255, 255, 255, 0.15);\n  border: 1px solid rgba(255, 255, 255, 0.15);\n  color: black;\n  height: 100%;\n  font-weight: 400;\n  &:hover,\n  :focus {\n    background-color: rgba(255, 255, 255, 0.25);\n    border-color: rgba(255, 255, 255, 0.25);\n  }\n  &:focus {\n    box-shadow: 0 0 0 1pt rgba(255, 255, 255, 0.25);\n  }\n  &:active {\n    background-color: rgba(255, 255, 255, 0.25);\n    border-color: rgba(255, 255, 255, 0.25);\n  }\n`\n\nexport default function ButtonStyled({ children, ...rest }) {\n  return <Base {...rest}>{children}</Base>\n}\n\nconst ContentWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n`\n\nexport const ButtonLight = styled(Base)`\n  background-color: ${({ color, theme }) => (color ? transparentize(0.9, color) : transparentize(0.9, theme.primary1))};\n  color: ${({ color, theme }) => (color ? darken(0.1, color) : theme.primary1)};\n\n  min-width: fit-content;\n  border-radius: 12px;\n  white-space: nowrap;\n\n  a {\n    color: ${({ color, theme }) => (color ? darken(0.1, color) : theme.primary1)};\n  }\n\n  :hover {\n    background-color: ${({ color, theme }) =>\n      color ? transparentize(0.8, color) : transparentize(0.8, theme.primary1)};\n  }\n`\n\nexport function ButtonDropdown({ disabled = false, children, open, ...rest }) {\n  return (\n    <ButtonFaded {...rest} disabled={disabled} ope={open}>\n      <RowBetween>\n        <div style={{ display: 'flex', alignItems: 'center' }}>{children}</div>\n        {open ? (\n          <StyledIcon>\n            <ChevronUp size={24} />\n          </StyledIcon>\n        ) : (\n          <StyledIcon>\n            <ChevronDown size={24} />\n          </StyledIcon>\n        )}\n      </RowBetween>\n    </ButtonFaded>\n  )\n}\n\nexport const ButtonDark = styled(Base)`\n  background-color: ${({ color, theme }) => (color ? color : theme.primary1)};\n  color: white;\n  width: fit-content;\n  border-radius: 12px;\n  white-space: nowrap;\n\n  :hover {\n    background-color: ${({ color, theme }) => (color ? darken(0.1, color) : darken(0.1, theme.primary1))};\n  }\n`\n\nexport const ButtonFaded = styled(Base)`\n  background-color: ${({ theme }) => theme.bg2};\n  color: (255, 255, 255, 0.5);\n  white-space: nowrap;\n\n  :hover {\n    opacity: 0.5;\n  }\n`\n\nexport function ButtonPlusDull({ disabled, children, ...rest }) {\n  return (\n    <Dull {...rest}>\n      <ContentWrapper>\n        <Plus size={16} />\n        <div style={{ display: 'flex', alignItems: 'center' }}>{children}</div>\n      </ContentWrapper>\n    </Dull>\n  )\n}\n\nexport function ButtonCustom({ children, bgColor, color, ...rest }) {\n  return (\n    <BaseCustom bg={bgColor} color={color} {...rest}>\n      {children}\n    </BaseCustom>\n  )\n}\n\nexport const OptionButton = styled.div`\n  font-weight: 500;\n  width: fit-content;\n  white-space: nowrap;\n  padding: 6px;\n  border-radius: 6px;\n  border: 1px solid ${({ theme }) => theme.bg4};\n  background-color: ${({ active, theme }) => active && theme.bg3};\n  color: ${({ theme }) => theme.text1};\n\n  :hover {\n    cursor: ${({ disabled }) => !disabled && 'pointer'};\n  }\n`\n","import React, { useState, useMemo, useEffect, useRef } from 'react'\nimport { ResponsiveContainer } from 'recharts'\nimport { timeframeOptions } from '../../constants'\nimport { useGlobalChartData, useGlobalData } from '../../contexts/GlobalData'\nimport { useMedia } from 'react-use'\nimport DropdownSelect from '../DropdownSelect'\nimport TradingViewChart, { CHART_TYPES } from '../TradingviewChart'\nimport { RowFixed } from '../Row'\nimport { OptionButton } from '../ButtonStyled'\nimport { getTimeframe } from '../../utils'\nimport { TYPE, globalPrimary } from '../../Theme'\n\nconst CHART_VIEW = {\n  VOLUME: 'Volume',\n  LIQUIDITY: 'Liquidity',\n}\n\nconst VOLUME_WINDOW = {\n  WEEKLY: 'WEEKLY',\n  DAYS: 'DAYS',\n}\nconst GlobalChart = ({ display }) => {\n  // chart options\n  const [chartView, setChartView] = useState(display === 'volume' ? CHART_VIEW.VOLUME : CHART_VIEW.LIQUIDITY)\n\n  // time window and window size for chart\n  const timeWindow = timeframeOptions.ALL_TIME\n  const [volumeWindow, setVolumeWindow] = useState(VOLUME_WINDOW.DAYS)\n\n  // global historical data\n  const [dailyData, weeklyData] = useGlobalChartData()\n  const {\n    totalLiquidityUSD,\n    oneDayVolumeUSD,\n    volumeChangeUSD,\n    liquidityChangeUSD,\n    oneWeekVolume,\n    weeklyVolumeChange,\n  } = useGlobalData()\n\n  // based on window, get starttim\n  let utcStartTime = getTimeframe(timeWindow)\n\n  const chartDataFiltered = useMemo(() => {\n    let currentData = volumeWindow === VOLUME_WINDOW.DAYS ? dailyData : weeklyData\n    return (\n      currentData &&\n      Object.keys(currentData)\n        ?.map((key) => {\n          let item = currentData[key]\n          if (item.date > utcStartTime) {\n            return item\n          } else {\n            return\n          }\n        })\n        .filter((item) => {\n          return !!item\n        })\n    )\n  }, [dailyData, utcStartTime, volumeWindow, weeklyData])\n  const below800 = useMedia('(max-width: 800px)')\n\n  // update the width on a window resize\n  const ref = useRef()\n  const isClient = typeof window === 'object'\n  const [width, setWidth] = useState(ref?.current?.container?.clientWidth)\n  useEffect(() => {\n    if (!isClient) {\n      return false\n    }\n    function handleResize() {\n      setWidth(ref?.current?.container?.clientWidth ?? width)\n    }\n    window.addEventListener('resize', handleResize)\n    return () => window.removeEventListener('resize', handleResize)\n  }, [isClient, width]) // Empty array ensures that effect is only run on mount and unmount\n\n  return chartDataFiltered ? (\n    <>\n      {below800 && (\n        <DropdownSelect options={CHART_VIEW} active={chartView} setActive={setChartView} color={globalPrimary} />\n      )}\n\n      {chartDataFiltered && chartView === CHART_VIEW.LIQUIDITY && (\n        <ResponsiveContainer aspect={60 / 28} ref={ref}>\n          <TradingViewChart\n            data={dailyData}\n            base={totalLiquidityUSD}\n            baseChange={liquidityChangeUSD}\n            title=\"Liquidity\"\n            field=\"totalLiquidityUSD\"\n            width={width}\n            type={CHART_TYPES.AREA}\n          />\n        </ResponsiveContainer>\n      )}\n      {chartDataFiltered && chartView === CHART_VIEW.VOLUME && (\n        <ResponsiveContainer aspect={60 / 28}>\n          <TradingViewChart\n            data={chartDataFiltered}\n            base={volumeWindow === VOLUME_WINDOW.WEEKLY ? oneWeekVolume : oneDayVolumeUSD}\n            baseChange={volumeWindow === VOLUME_WINDOW.WEEKLY ? weeklyVolumeChange : volumeChangeUSD}\n            title={volumeWindow === VOLUME_WINDOW.WEEKLY ? 'Volume (7d)' : 'Volume'}\n            field={volumeWindow === VOLUME_WINDOW.WEEKLY ? 'weeklyVolumeUSD' : 'dailyVolumeUSD'}\n            width={width}\n            type={CHART_TYPES.BAR}\n            useWeekly={volumeWindow === VOLUME_WINDOW.WEEKLY}\n          />\n        </ResponsiveContainer>\n      )}\n      {display === 'volume' && (\n        <RowFixed\n          style={{\n            bottom: '70px',\n            position: 'absolute',\n            left: '20px',\n            zIndex: 10,\n          }}\n        >\n          <OptionButton\n            active={volumeWindow === VOLUME_WINDOW.DAYS}\n            onClick={() => setVolumeWindow(VOLUME_WINDOW.DAYS)}\n          >\n            <TYPE.body>D</TYPE.body>\n          </OptionButton>\n          <OptionButton\n            style={{ marginLeft: '4px' }}\n            active={volumeWindow === VOLUME_WINDOW.WEEKLY}\n            onClick={() => setVolumeWindow(VOLUME_WINDOW.WEEKLY)}\n          >\n            <TYPE.body>W</TYPE.body>\n          </OptionButton>\n        </RowFixed>\n      )}\n    </>\n  ) : (\n    ''\n  )\n}\n\nexport default GlobalChart\n","import React, { useState, useEffect, useMemo, useRef } from 'react'\nimport styled from 'styled-components'\n\nimport Row, { RowFixed } from '../Row'\nimport TokenLogo from '../TokenLogo'\nimport { Search as SearchIcon, X } from 'react-feather'\nimport { BasicLink } from '../Link'\n\nimport { useAllTokenData, useTokenData } from '../../contexts/TokenData'\nimport { useAllPairData, usePairData } from '../../contexts/PairData'\nimport DoubleTokenLogo from '../DoubleLogo'\nimport { useMedia } from 'react-use'\nimport { useAllPairsInUniswap, useAllTokensInUniswap } from '../../contexts/GlobalData'\nimport { OVERVIEW_TOKEN_BLACKLIST, PAIR_BLACKLIST } from '../../constants'\n\nimport { transparentize } from 'polished'\nimport { client } from '../../apollo/client'\nimport { PAIR_SEARCH, TOKEN_SEARCH } from '../../apollo/queries'\nimport FormattedName from '../FormattedName'\nimport { TYPE } from '../../Theme'\nimport { updateNameData } from '../../utils/data'\n\nconst Container = styled.div`\n  height: 48px;\n  z-index: 30;\n  position: relative;\n\n  @media screen and (max-width: 600px) {\n    width: 100%;\n  }\n`\n\nconst Wrapper = styled.div`\n  display: flex;\n  position: relative;\n  flex-direction: row;\n  align-items: center;\n  justify-content: flex-end;\n  padding: 12px 16px;\n  border-radius: 12px;\n  background: ${({ theme, small, open }) =>\n    small ? (open ? transparentize(0.4, theme.bg1) : 'none') : transparentize(0.4, theme.bg6)};\n  border-bottom-right-radius: ${({ open }) => (open ? '0px' : '12px')};\n  border-bottom-left-radius: ${({ open }) => (open ? '0px' : '12px')};\n  z-index: 9999;\n  width: 100%;\n  min-width: 300px;\n  box-sizing: border-box;\n  box-shadow: ${({ open, small }) =>\n    !open && !small\n      ? '0px 24px 32px rgba(0, 0, 0, 0.04), 0px 16px 24px rgba(0, 0, 0, 0.04), 0px 4px 8px rgba(0, 0, 0, 0.04), 0px 0px 1px rgba(0, 0, 0, 0.04) '\n      : 'none'};\n  @media screen and (max-width: 500px) {\n    background: ${({ theme }) => transparentize(0.4, theme.bg1)};\n    box-shadow: ${({ open }) =>\n    !open\n      ? '0px 24px 32px rgba(0, 0, 0, 0.04), 0px 16px 24px rgba(0, 0, 0, 0.04), 0px 4px 8px rgba(0, 0, 0, 0.04), 0px 0px 1px rgba(0, 0, 0, 0.04) '\n      : 'none'};\n  }\n`\nconst Input = styled.input`\n  position: relative;\n  display: flex;\n  align-items: center;\n  white-space: nowrap;\n  background: none;\n  border: none;\n  outline: none;\n  width: 100%;\n  color: ${({ theme }) => theme.text1};\n  font-size: ${({ large }) => (large ? '20px' : '14px')};\n\n  ::placeholder {\n    color: ${({ theme }) => theme.text3};\n    font-size: 16px;\n  }\n\n  @media screen and (max-width: 640px) {\n    ::placeholder {\n      font-size: 1rem;\n    }\n  }\n`\n\nconst SearchIconLarge = styled(SearchIcon)`\n  height: 20px;\n  width: 20px;\n  margin-right: 0.5rem;\n  position: absolute;\n  right: 10px;\n  pointer-events: none;\n  color: ${({ theme }) => theme.text3};\n`\n\nconst CloseIcon = styled(X)`\n  height: 20px;\n  width: 20px;\n  margin-right: 0.5rem;\n  position: absolute;\n  right: 10px;\n  color: ${({ theme }) => theme.text3};\n  :hover {\n    cursor: pointer;\n  }\n`\n\nconst Menu = styled.div`\n  display: flex;\n  flex-direction: column;\n  z-index: 9999;\n  width: 100%;\n  top: 50px;\n  max-height: 540px;\n  overflow: auto;\n  left: 0;\n  padding-bottom: 20px;\n  background: ${({ theme }) => theme.bg6};\n  border-bottom-right-radius: 12px;\n  border-bottom-left-radius: 12px;\n  box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.04), 0px 4px 8px rgba(0, 0, 0, 0.04), 0px 16px 24px rgba(0, 0, 0, 0.04),\n    0px 24px 32px rgba(0, 0, 0, 0.04);\n  display: ${({ hide }) => hide && 'none'};\n`\n\nconst MenuItem = styled(Row)`\n  padding: 1rem;\n  font-size: 0.85rem;\n  & > * {\n    margin-right: 6px;\n  }\n  :hover {\n    cursor: pointer;\n    background-color: ${({ theme }) => theme.bg2};\n  }\n`\n\nconst Heading = styled(Row)`\n  padding: 1rem;\n  display: ${({ hide = false }) => hide && 'none'};\n`\n\nconst Gray = styled.span`\n  color: #888d9b;\n`\n\nconst Blue = styled.span`\n  color: ${({ theme }) => theme.primary1};\n  :hover {\n    cursor: pointer;\n  }\n`\n\nexport const Search = ({ small = false }) => {\n  let allTokens = useAllTokensInUniswap()\n  const allTokenData = useAllTokenData()\n\n  let allPairs = useAllPairsInUniswap()\n  const allPairData = useAllPairData()\n\n  const [showMenu, toggleMenu] = useState(false)\n  const [value, setValue] = useState('')\n  const [, toggleShadow] = useState(false)\n  const [, toggleBottomShadow] = useState(false)\n\n  // fetch new data on tokens and pairs if needed\n  useTokenData(value)\n  usePairData(value)\n\n  const below700 = useMedia('(max-width: 700px)')\n  const below470 = useMedia('(max-width: 470px)')\n  const below410 = useMedia('(max-width: 410px)')\n\n  useEffect(() => {\n    if (value !== '') {\n      toggleMenu(true)\n    } else {\n      toggleMenu(false)\n    }\n  }, [value])\n\n  const [searchedTokens, setSearchedTokens] = useState([])\n  const [searchedPairs, setSearchedPairs] = useState([])\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        if (value?.length > 0) {\n          let tokens = await client.query({\n            query: TOKEN_SEARCH,\n            variables: {\n              value: value ? value.toUpperCase() : '',\n              id: value,\n            },\n          })\n\n          let pairs = await client.query({\n            query: PAIR_SEARCH,\n            variables: {\n              tokens: tokens.data.asSymbol?.map((t) => t.id),\n              id: value,\n            },\n          })\n\n          setSearchedPairs(\n            updateNameData(pairs.data.as0)\n              .concat(updateNameData(pairs.data.as1))\n              .concat(updateNameData(pairs.data.asAddress))\n          )\n          const foundTokens = tokens.data.asSymbol.concat(tokens.data.asAddress).concat(tokens.data.asName)\n          setSearchedTokens(foundTokens)\n        }\n      } catch (e) {\n        console.log(e)\n      }\n    }\n    fetchData()\n  }, [value])\n\n  function escapeRegExp(string) {\n    return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&') // $& means the whole matched string\n  }\n\n  // add the searched tokens to the list if not found yet\n  allTokens = allTokens.concat(\n    searchedTokens.filter((searchedToken) => {\n      let included = false\n      updateNameData()\n      allTokens.map((token) => {\n        if (token.id === searchedToken.id) {\n          included = true\n        }\n        return true\n      })\n      return !included\n    })\n  )\n\n  let uniqueTokens = []\n  let found = {}\n  allTokens &&\n    allTokens.map((token) => {\n      if (!found[token.id]) {\n        found[token.id] = true\n        uniqueTokens.push(token)\n      }\n      return true\n    })\n\n  allPairs = allPairs.concat(\n    searchedPairs.filter((searchedPair) => {\n      let included = false\n      allPairs.map((pair) => {\n        if (pair.id === searchedPair.id) {\n          included = true\n        }\n        return true\n      })\n      return !included\n    })\n  )\n\n  let uniquePairs = []\n  let pairsFound = {}\n  allPairs &&\n    allPairs.map((pair) => {\n      if (!pairsFound[pair.id]) {\n        pairsFound[pair.id] = true\n        uniquePairs.push(pair)\n      }\n      return true\n    })\n\n  const filteredTokenList = useMemo(() => {\n    return uniqueTokens\n      ? uniqueTokens\n        .sort((a, b) => {\n          if (OVERVIEW_TOKEN_BLACKLIST.includes(a.id)) {\n            return 1\n          }\n          if (OVERVIEW_TOKEN_BLACKLIST.includes(b.id)) {\n            return -1\n          }\n          const tokenA = allTokenData[a.id]\n          const tokenB = allTokenData[b.id]\n          if (tokenA?.oneDayVolumeUSD && tokenB?.oneDayVolumeUSD) {\n            return tokenA.oneDayVolumeUSD > tokenB.oneDayVolumeUSD ? -1 : 1\n          }\n          if (tokenA?.oneDayVolumeUSD && !tokenB?.oneDayVolumeUSD) {\n            return -1\n          }\n          if (!tokenA?.oneDayVolumeUSD && tokenB?.oneDayVolumeUSD) {\n            return tokenA?.totalLiquidity > tokenB?.totalLiquidity ? -1 : 1\n          }\n          return 1\n        })\n        .filter((token) => {\n          if (OVERVIEW_TOKEN_BLACKLIST.includes(token.id)) {\n            return false\n          }\n          const regexMatches = Object.keys(token).map((tokenEntryKey) => {\n            const isAddress = value.slice(0, 2) === '0x'\n            if (tokenEntryKey === 'id' && isAddress) {\n              return token[tokenEntryKey].match(new RegExp(escapeRegExp(value), 'i'))\n            }\n            if (tokenEntryKey === 'symbol' && !isAddress) {\n              return token[tokenEntryKey].match(new RegExp(escapeRegExp(value), 'i'))\n            }\n            if (tokenEntryKey === 'name' && !isAddress) {\n              return token[tokenEntryKey].match(new RegExp(escapeRegExp(value), 'i'))\n            }\n            return false\n          })\n          return regexMatches.some((m) => m)\n        })\n      : []\n  }, [allTokenData, uniqueTokens, value])\n\n  const filteredPairList = useMemo(() => {\n    return uniquePairs\n      ? uniquePairs\n        .sort((a, b) => {\n          const pairA = allPairData[a.id]\n          const pairB = allPairData[b.id]\n          if (pairA?.trackedReserveETH && pairB?.trackedReserveETH) {\n            return parseFloat(pairA.trackedReserveETH) > parseFloat(pairB.trackedReserveETH) ? -1 : 1\n          }\n          if (pairA?.trackedReserveETH && !pairB?.trackedReserveETH) {\n            return -1\n          }\n          if (!pairA?.trackedReserveETH && pairB?.trackedReserveETH) {\n            return 1\n          }\n          return 0\n        })\n        .filter((pair) => {\n          if (PAIR_BLACKLIST.includes(pair.id)) {\n            return false\n          }\n          if (value && value.includes(' ')) {\n            const pairA = value.split(' ')[0]?.toUpperCase()\n            const pairB = value.split(' ')[1]?.toUpperCase()\n            return (\n              (pair.token0.symbol.includes(pairA) || pair.token0.symbol.includes(pairB)) &&\n              (pair.token1.symbol.includes(pairA) || pair.token1.symbol.includes(pairB))\n            )\n          }\n          if (value && value.includes('-')) {\n            const pairA = value.split('-')[0]?.toUpperCase()\n            const pairB = value.split('-')[1]?.toUpperCase()\n            return (\n              (pair.token0.symbol.includes(pairA) || pair.token0.symbol.includes(pairB)) &&\n              (pair.token1.symbol.includes(pairA) || pair.token1.symbol.includes(pairB))\n            )\n          }\n          const regexMatches = Object.keys(pair).map((field) => {\n            const isAddress = value.slice(0, 2) === '0x'\n            if (field === 'id' && isAddress) {\n              return pair[field].match(new RegExp(escapeRegExp(value), 'i'))\n            }\n            if (field === 'token0') {\n              return (\n                pair[field].symbol.match(new RegExp(escapeRegExp(value), 'i')) ||\n                pair[field].name.match(new RegExp(escapeRegExp(value), 'i'))\n              )\n            }\n            if (field === 'token1') {\n              return (\n                pair[field].symbol.match(new RegExp(escapeRegExp(value), 'i')) ||\n                pair[field].name.match(new RegExp(escapeRegExp(value), 'i'))\n              )\n            }\n            return false\n          })\n          return regexMatches.some((m) => m)\n        })\n      : []\n  }, [allPairData, uniquePairs, value])\n\n  useEffect(() => {\n    if (Object.keys(filteredTokenList).length > 2) {\n      toggleShadow(true)\n    } else {\n      toggleShadow(false)\n    }\n  }, [filteredTokenList])\n\n  useEffect(() => {\n    if (Object.keys(filteredPairList).length > 2) {\n      toggleBottomShadow(true)\n    } else {\n      toggleBottomShadow(false)\n    }\n  }, [filteredPairList])\n\n  const [tokensShown, setTokensShown] = useState(3)\n  const [pairsShown, setPairsShown] = useState(3)\n\n  function onDismiss() {\n    setPairsShown(3)\n    setTokensShown(3)\n    toggleMenu(false)\n    setValue('')\n  }\n\n  // refs to detect clicks outside modal\n  const wrapperRef = useRef()\n  const menuRef = useRef()\n\n  const handleClick = (e) => {\n    if (\n      !(menuRef.current && menuRef.current.contains(e.target)) &&\n      !(wrapperRef.current && wrapperRef.current.contains(e.target))\n    ) {\n      setPairsShown(3)\n      setTokensShown(3)\n      toggleMenu(false)\n    }\n  }\n\n  useEffect(() => {\n    document.addEventListener('click', handleClick)\n    return () => {\n      document.removeEventListener('click', handleClick)\n    }\n  })\n\n  return (\n    <Container small={small}>\n      <Wrapper open={showMenu} shadow={true} small={small}>\n        <Input\n          large={!small}\n          type={'text'}\n          ref={wrapperRef}\n          placeholder={\n            small\n              ? ''\n              : below410\n                ? 'Search...'\n                : below470\n                  ? 'Search Ubiqswap...'\n                  : below700\n                    ? 'Search pairs and tokens...'\n                    : 'Search Ubiqswap pairs and tokens...'\n          }\n          value={value}\n          onChange={(e) => {\n            setValue(e.target.value)\n          }}\n          onFocus={() => {\n            if (!showMenu) {\n              toggleMenu(true)\n            }\n          }}\n        />\n        {!showMenu ? <SearchIconLarge /> : <CloseIcon onClick={() => toggleMenu(false)} />}\n      </Wrapper>\n      <Menu hide={!showMenu} ref={menuRef}>\n        <Heading>\n          <Gray>Pairs</Gray>\n        </Heading>\n        <div>\n          {filteredPairList && Object.keys(filteredPairList).length === 0 && (\n            <MenuItem>\n              <TYPE.body>No results</TYPE.body>\n            </MenuItem>\n          )}\n          {filteredPairList &&\n            filteredPairList.slice(0, pairsShown).map((pair) => {\n              //format incorrect names\n              updateNameData(pair)\n              return (\n                <BasicLink to={'/pair/' + pair.id} key={pair.id} onClick={onDismiss}>\n                  <MenuItem>\n                    <DoubleTokenLogo a0={pair?.token0?.id} a1={pair?.token1?.id} margin={true} />\n                    <TYPE.body style={{ marginLeft: '10px' }}>\n                      {pair.token0.symbol + '-' + pair.token1.symbol} Pair\n                    </TYPE.body>\n                  </MenuItem>\n                </BasicLink>\n              )\n            })}\n          <Heading\n            hide={!(Object.keys(filteredPairList).length > 3 && Object.keys(filteredPairList).length >= pairsShown)}\n          >\n            <Blue\n              onClick={() => {\n                setPairsShown(pairsShown + 5)\n              }}\n            >\n              See more...\n            </Blue>\n          </Heading>\n        </div>\n        <Heading>\n          <Gray>Tokens</Gray>\n        </Heading>\n        <div>\n          {Object.keys(filteredTokenList).length === 0 && (\n            <MenuItem>\n              <TYPE.body>No results</TYPE.body>\n            </MenuItem>\n          )}\n          {filteredTokenList.slice(0, tokensShown).map((token) => {\n            // update displayed names\n            updateNameData({ token0: token })\n            return (\n              <BasicLink to={'/token/' + token.id} key={token.id} onClick={onDismiss}>\n                <MenuItem>\n                  <RowFixed>\n                    <TokenLogo address={token.id} style={{ marginRight: '10px' }} />\n                    <FormattedName text={token.name} maxCharacters={20} style={{ marginRight: '6px' }} />\n                    (<FormattedName text={token.symbol} maxCharacters={6} />)\n                  </RowFixed>\n                </MenuItem>\n              </BasicLink>\n            )\n          })}\n\n          <Heading\n            hide={!(Object.keys(filteredTokenList).length > 3 && Object.keys(filteredTokenList).length >= tokensShown)}\n          >\n            <Blue\n              onClick={() => {\n                setTokensShown(tokensShown + 5)\n              }}\n            >\n              See more...\n            </Blue>\n          </Heading>\n        </div>\n      </Menu>\n    </Container>\n  )\n}\n\nexport default Search\n","import React from 'react'\nimport styled from 'styled-components'\nimport { RowFixed, RowBetween } from '../Row'\nimport { useMedia } from 'react-use'\nimport { useGlobalData, useEthPrice } from '../../contexts/GlobalData'\nimport { formattedNum, localNumber } from '../../utils'\n\nimport { TYPE } from '../../Theme'\n\nconst Header = styled.div`\n  width: 100%;\n  position: sticky;\n  top: 0;\n`\n\nconst Medium = styled.span`\n  font-weight: 500;\n`\n\nexport default function GlobalStats() {\n  const below1295 = useMedia('(max-width: 1295px)')\n  const below1180 = useMedia('(max-width: 1180px)')\n  const below1024 = useMedia('(max-width: 1024px)')\n  const below400 = useMedia('(max-width: 400px)')\n  const below816 = useMedia('(max-width: 816px)')\n\n  const { oneDayVolumeUSD, oneDayTxns, pairCount } = useGlobalData()\n  const [ethPrice] = useEthPrice()\n  const formattedEthPrice = ethPrice ? formattedNum(ethPrice, true) : '-'\n  const oneDayFees = oneDayVolumeUSD ? formattedNum(oneDayVolumeUSD * 0.003, true) : ''\n\n  return (\n    <Header>\n      <RowBetween style={{ padding: below816 ? '0.5rem' : '.5rem' }}>\n        <RowFixed>\n          {!below400 && (\n            <TYPE.main\n              mr={'1rem'}\n              style={{ position: 'relative' }}\n            >\n              UBQ Price: <Medium>{formattedEthPrice}</Medium>\n            </TYPE.main>\n          )}\n\n          {!below1180 && (\n            <TYPE.main mr={'1rem'}>\n              Transactions (24H): <Medium>{localNumber(oneDayTxns)}</Medium>\n            </TYPE.main>\n          )}\n          {!below1024 && (\n            <TYPE.main mr={'1rem'}>\n              Pairs: <Medium>{localNumber(pairCount)}</Medium>\n            </TYPE.main>\n          )}\n          {!below1295 && (\n            <TYPE.main mr={'1rem'}>\n              Fees (24H): <Medium>{oneDayFees}</Medium>&nbsp;\n            </TYPE.main>\n          )}\n        </RowFixed>\n      </RowBetween>\n    </Header>\n  )\n}\n","import { Box as RebassBox } from 'rebass'\nimport styled, { css } from 'styled-components'\n\nconst panelPseudo = css`\n  :after {\n    content: '';\n    position: absolute;\n    left: 0;\n    right: 0;\n    height: 10px;\n  }\n\n  @media only screen and (min-width: 40em) {\n    :after {\n      content: unset;\n    }\n  }\n`\n\nconst Panel = styled(RebassBox)`\n  position: relative;\n  background-color: ${({ theme }) => theme.advancedBG};\n  padding: 1.25rem;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  border-radius: 8px;\n  border: 1px solid ${({ theme }) => theme.bg3};\n  box-shadow: 0px 6px 10px rgba(0, 0, 0, 0.05); /* box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.01), 0px 4px 8px rgba(0, 0, 0, 0.01), 0px 16px 24px rgba(0, 0, 0, 0.01), 0px 24px 32px rgba(0, 0, 0, 0.01); */\n  :hover {\n    cursor: ${({ hover }) => hover && 'pointer'};\n    border: ${({ hover, theme }) => hover && '1px solid' + theme.bg5};\n  }\n\n  ${(props) => props.background && `background-color: ${props.theme.advancedBG};`}\n\n  ${(props) => (props.area ? `grid-area: ${props.area};` : null)}\n\n  ${(props) =>\n    props.grouped &&\n    css`\n      @media only screen and (min-width: 40em) {\n        &:first-of-type {\n          border-radius: 20px 20px 0 0;\n        }\n        &:last-of-type {\n          border-radius: 0 0 20px 20px;\n        }\n      }\n    `}\n\n  ${(props) =>\n    props.rounded &&\n    css`\n      border-radius: 8px;\n      @media only screen and (min-width: 40em) {\n        border-radius: 10px;\n      }\n    `};\n\n  ${(props) => !props.last && panelPseudo}\n`\n\nexport default Panel\n\n// const Panel = styled.div`\n//   width: 100%;\n//   height: 100%;\n//   display: flex;\n//   flex-direction: column;\n//   justify-content: flex-start;\n//   border-radius: 12px;\n//   background-color: ${({ theme }) => theme.advancedBG};\n//   padding: 1.25rem;\n//   box-sizing: border-box;\n//   box-shadow: 0 1.1px 2.8px -9px rgba(0, 0, 0, 0.008), 0 2.7px 6.7px -9px rgba(0, 0, 0, 0.012),\n//     0 5px 12.6px -9px rgba(0, 0, 0, 0.015), 0 8.9px 22.6px -9px rgba(0, 0, 0, 0.018),\n//     0 16.7px 42.2px -9px rgba(0, 0, 0, 0.022), 0 40px 101px -9px rgba(0, 0, 0, 0.03);\n// `\n","import React, { useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { Box } from 'rebass'\nimport styled from 'styled-components'\n\nimport { AutoRow, RowBetween } from '../components/Row'\nimport { AutoColumn } from '../components/Column'\nimport PairList from '../components/PairList'\nimport TopTokenList from '../components/TokenList'\nimport TxnList from '../components/TxnList'\nimport GlobalChart from '../components/GlobalChart'\nimport Search from '../components/Search'\nimport GlobalStats from '../components/GlobalStats'\n\nimport { useGlobalData, useGlobalTransactions } from '../contexts/GlobalData'\nimport { useAllPairData } from '../contexts/PairData'\nimport { useMedia } from 'react-use'\nimport Panel from '../components/Panel'\nimport { useAllTokenData } from '../contexts/TokenData'\nimport { formattedNum, formattedPercent } from '../utils'\nimport { TYPE, ThemedBackground, globalPrimary } from '../Theme'\nimport { transparentize } from 'polished'\nimport { CustomLink } from '../components/Link'\n\nimport { PageWrapper, ContentWrapper } from '../components'\n\nconst ListOptions = styled(AutoRow)`\n  height: 40px;\n  width: 100%;\n  font-size: 1.25rem;\n  font-weight: 600;\n\n  @media screen and (max-width: 640px) {\n    font-size: 1rem;\n  }\n`\n\nconst GridRow = styled.div`\n  display: grid;\n  width: 100%;\n  grid-template-columns: 1fr 1fr;\n  column-gap: 6px;\n  align-items: start;\n  justify-content: space-between;\n`\n\nfunction GlobalPage() {\n  // get data for lists and totals\n  const allPairs = useAllPairData()\n  const allTokens = useAllTokenData()\n  const transactions = useGlobalTransactions()\n  const { totalLiquidityUSD, oneDayVolumeUSD, volumeChangeUSD, liquidityChangeUSD } = useGlobalData()\n\n  // breakpoints\n  const below800 = useMedia('(max-width: 800px)')\n\n  // scrolling refs\n  useEffect(() => {\n    document.querySelector('body').scrollTo({\n      behavior: 'smooth',\n      top: 0,\n    })\n  }, [])\n\n  return (\n    <PageWrapper>\n      <ThemedBackground backgroundColor={transparentize(0.8, globalPrimary)} />\n      <ContentWrapper>\n        <div>\n          <AutoColumn gap=\"24px\" style={{ paddingBottom: below800 ? '0' : '24px' }}>\n            <TYPE.largeHeader>{below800 ? 'Protocol Analytics' : 'Ubiqswap Protocol Analytics'}</TYPE.largeHeader>\n            <Search />\n            <GlobalStats />\n          </AutoColumn>\n          {below800 && ( // mobile card\n            <Box mb={20}>\n              <Panel>\n                <Box>\n                  <AutoColumn gap=\"36px\">\n                    <AutoColumn gap=\"20px\">\n                      <RowBetween>\n                        <TYPE.main>Volume (24hrs)</TYPE.main>\n                        <div />\n                      </RowBetween>\n                      <RowBetween align=\"flex-end\">\n                        <TYPE.main fontSize={'1.5rem'} lineHeight={1} fontWeight={600}>\n                          {formattedNum(oneDayVolumeUSD, true)}\n                        </TYPE.main>\n                        <TYPE.main fontSize={12}>{formattedPercent(volumeChangeUSD)}</TYPE.main>\n                      </RowBetween>\n                    </AutoColumn>\n                    <AutoColumn gap=\"20px\">\n                      <RowBetween>\n                        <TYPE.main>Total Liquidity</TYPE.main>\n                        <div />\n                      </RowBetween>\n                      <RowBetween align=\"flex-end\">\n                        <TYPE.main fontSize={'1.5rem'} lineHeight={1} fontWeight={600}>\n                          {formattedNum(totalLiquidityUSD, true)}\n                        </TYPE.main>\n                        <TYPE.main fontSize={12}>{formattedPercent(liquidityChangeUSD)}</TYPE.main>\n                      </RowBetween>\n                    </AutoColumn>\n                  </AutoColumn>\n                </Box>\n              </Panel>\n            </Box>\n          )}\n          {!below800 && (\n            <GridRow>\n              <Panel style={{ height: '100%', minHeight: '300px' }}>\n                <GlobalChart display=\"liquidity\" />\n              </Panel>\n              <Panel style={{ height: '100%' }}>\n                <GlobalChart display=\"volume\" />\n              </Panel>\n            </GridRow>\n          )}\n          {below800 && (\n            <AutoColumn style={{ marginTop: '6px' }} gap=\"24px\">\n              <Panel style={{ height: '100%', minHeight: '300px' }}>\n                <GlobalChart display=\"liquidity\" />\n              </Panel>\n            </AutoColumn>\n          )}\n          <ListOptions gap=\"10px\" style={{ marginTop: '2rem', marginBottom: '.5rem' }}>\n            <RowBetween>\n              <TYPE.main fontSize={'1.125rem'}>Top Tokens</TYPE.main>\n              <CustomLink to={'/tokens'}>See All</CustomLink>\n            </RowBetween>\n          </ListOptions>\n          <Panel style={{ marginTop: '6px', padding: '1.125rem 0 ' }}>\n            <TopTokenList tokens={allTokens} />\n          </Panel>\n          <ListOptions gap=\"10px\" style={{ marginTop: '2rem', marginBottom: '.5rem' }}>\n            <RowBetween>\n              <TYPE.main fontSize={'1rem'}>Top Pairs</TYPE.main>\n              <CustomLink to={'/pairs'}>See All</CustomLink>\n            </RowBetween>\n          </ListOptions>\n          <Panel style={{ marginTop: '6px', padding: '1.125rem 0 ' }}>\n            <PairList pairs={allPairs} useTracked={true} />\n          </Panel>\n          <span>\n            <TYPE.main fontSize={'1.125rem'} style={{ marginTop: '2rem' }}>\n              Transactions\n            </TYPE.main>\n          </span>\n          <Panel style={{ margin: '1rem 0' }}>\n            <TxnList transactions={transactions} />\n          </Panel>\n        </div>\n      </ContentWrapper>\n    </PageWrapper>\n  )\n}\n\nexport default withRouter(GlobalPage)\n","import React, { useState, useEffect, useRef } from 'react'\nimport { createChart, CrosshairMode } from 'lightweight-charts'\nimport dayjs from 'dayjs'\nimport { formattedNum } from '../../utils'\nimport { usePrevious } from 'react-use'\nimport styled from 'styled-components'\nimport { Play } from 'react-feather'\nimport { useDarkModeManager } from '../../contexts/LocalStorage'\n\nconst IconWrapper = styled.div`\n  position: absolute;\n  right: 10px;\n  color: ${({ theme }) => theme.text1}\n  border-radius: 3px;\n  height: 16px;\n  width: 16px;\n  padding: 0px;\n  bottom: 10px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  :hover {\n    cursor: pointer;\n    opacity: 0.7;\n  }\n`\n\nconst CandleStickChart = ({\n  data,\n  width,\n  height = 300,\n  base,\n  margin = true,\n  valueFormatter = (val) => formattedNum(val, true),\n}) => {\n  // reference for DOM element to create with chart\n  const ref = useRef()\n\n  const formattedData = data?.map((entry) => {\n    return {\n      time: parseFloat(entry.timestamp),\n      open: parseFloat(entry.open),\n      low: parseFloat(entry.open),\n      close: parseFloat(entry.close),\n      high: parseFloat(entry.close),\n    }\n  })\n\n  if (formattedData && formattedData.length > 0) {\n    formattedData.push({\n      time: dayjs().unix(),\n      open: parseFloat(formattedData[formattedData.length - 1].close),\n      close: parseFloat(base),\n      low: Math.min(parseFloat(base), parseFloat(formattedData[formattedData.length - 1].close)),\n      high: Math.max(parseFloat(base), parseFloat(formattedData[formattedData.length - 1].close)),\n    })\n  }\n\n  // pointer to the chart object\n  const [chartCreated, setChartCreated] = useState(false)\n  const dataPrev = usePrevious(data)\n\n  const [darkMode] = useDarkModeManager()\n  const textColor = darkMode ? 'white' : 'black'\n  const previousTheme = usePrevious(darkMode)\n\n  // reset the chart if theme switches\n  useEffect(() => {\n    if (chartCreated && previousTheme !== darkMode) {\n      // remove the tooltip element\n      let tooltip = document.getElementById('tooltip-id')\n      let node = document.getElementById('test-id')\n      node.removeChild(tooltip)\n      chartCreated.resize(0, 0)\n      setChartCreated()\n    }\n  }, [chartCreated, darkMode, previousTheme])\n\n  useEffect(() => {\n    if (data !== dataPrev && chartCreated) {\n      // remove the tooltip element\n      let tooltip = document.getElementById('tooltip-id')\n      let node = document.getElementById('test-id')\n      node.removeChild(tooltip)\n      chartCreated.resize(0, 0)\n      setChartCreated()\n    }\n  }, [chartCreated, data, dataPrev])\n\n  // if no chart created yet, create one with options and add to DOM manually\n  useEffect(() => {\n    if (!chartCreated) {\n      const chart = createChart(ref.current, {\n        width: width,\n        height: height,\n        layout: {\n          backgroundColor: 'transparent',\n          textColor: textColor,\n        },\n        grid: {\n          vertLines: {\n            color: 'rgba(197, 203, 206, 0.5)',\n          },\n          horzLines: {\n            color: 'rgba(197, 203, 206, 0.5)',\n          },\n        },\n        crosshair: {\n          mode: CrosshairMode.Normal,\n        },\n        rightPriceScale: {\n          borderColor: 'rgba(197, 203, 206, 0.8)',\n          visible: true,\n        },\n        timeScale: {\n          borderColor: 'rgba(197, 203, 206, 0.8)',\n        },\n        localization: {\n          priceFormatter: (val) => formattedNum(val),\n        },\n      })\n\n      var candleSeries = chart.addCandlestickSeries({\n        upColor: 'green',\n        downColor: 'red',\n        borderDownColor: 'red',\n        borderUpColor: 'green',\n        wickDownColor: 'red',\n        wickUpColor: 'green',\n      })\n\n      candleSeries.setData(formattedData)\n\n      var toolTip = document.createElement('div')\n      toolTip.setAttribute('id', 'tooltip-id')\n      toolTip.className = 'three-line-legend'\n      ref.current.appendChild(toolTip)\n      toolTip.style.display = 'block'\n      toolTip.style.left = (margin ? 116 : 10) + 'px'\n      toolTip.style.top = 50 + 'px'\n      toolTip.style.backgroundColor = 'transparent'\n\n      // get the title of the chart\n      function setLastBarText() {\n        toolTip.innerHTML = base\n          ? `<div style=\"font-size: 22px; margin: 4px 0px; color: ${textColor}\">` + valueFormatter(base) + '</div>'\n          : ''\n      }\n      setLastBarText()\n\n      // update the title when hovering on the chart\n      chart.subscribeCrosshairMove(function (param) {\n        if (\n          param === undefined ||\n          param.time === undefined ||\n          param.point.x < 0 ||\n          param.point.x > width ||\n          param.point.y < 0 ||\n          param.point.y > height\n        ) {\n          setLastBarText()\n        } else {\n          var price = param.seriesPrices.get(candleSeries).close\n          const time = dayjs.unix(param.time).format('MM/DD h:mm A')\n          toolTip.innerHTML =\n            `<div style=\"font-size: 22px; margin: 4px 0px; color: ${textColor}\">` +\n            valueFormatter(price) +\n            `<span style=\"font-size: 12px; margin: 4px 6px; color: ${textColor}\">` +\n            time +\n            ' UTC' +\n            '</span>' +\n            '</div>'\n        }\n      })\n\n      chart.timeScale().fitContent()\n\n      setChartCreated(chart)\n    }\n  }, [chartCreated, formattedData, width, height, valueFormatter, base, margin, textColor])\n\n  // responsiveness\n  useEffect(() => {\n    if (width) {\n      chartCreated && chartCreated.resize(width, height)\n      chartCreated && chartCreated.timeScale().scrollToPosition(0)\n    }\n  }, [chartCreated, height, width])\n\n  return (\n    <div>\n      <div ref={ref} id=\"test-id\" />\n      <IconWrapper>\n        <Play\n          onClick={() => {\n            chartCreated && chartCreated.timeScale().fitContent()\n          }}\n        />\n      </IconWrapper>\n    </div>\n  )\n}\n\nexport default CandleStickChart\n","import React, { useState, useRef, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Area, XAxis, YAxis, ResponsiveContainer, Tooltip, AreaChart, BarChart, Bar } from 'recharts'\nimport { AutoRow, RowBetween, RowFixed } from '../Row'\n\nimport { toK, toNiceDate, toNiceDateYear, formattedNum, getTimeframe } from '../../utils'\nimport { OptionButton } from '../ButtonStyled'\nimport { darken } from 'polished'\nimport { useMedia, usePrevious } from 'react-use'\nimport { timeframeOptions } from '../../constants'\nimport { useTokenChartData, useTokenPriceData } from '../../contexts/TokenData'\nimport DropdownSelect from '../DropdownSelect'\nimport CandleStickChart from '../CandleChart'\nimport LocalLoader from '../LocalLoader'\nimport { AutoColumn } from '../Column'\nimport { Activity } from 'react-feather'\nimport { useDarkModeManager } from '../../contexts/LocalStorage'\n\nconst ChartWrapper = styled.div`\n  height: 100%;\n  min-height: 300px;\n\n  @media screen and (max-width: 600px) {\n    min-height: 200px;\n  }\n`\n\nconst PriceOption = styled(OptionButton)`\n  border-radius: 2px;\n`\n\nconst CHART_VIEW = {\n  VOLUME: 'Volume',\n  LIQUIDITY: 'Liquidity',\n  PRICE: 'Price',\n  LINE_PRICE: 'Price (Line)',\n}\n\nconst DATA_FREQUENCY = {\n  DAY: 'DAY',\n  HOUR: 'HOUR',\n  LINE: 'LINE',\n}\n\nconst TokenChart = ({ address, color, base }) => {\n  // settings for the window and candle width\n  const [chartFilter, setChartFilter] = useState(CHART_VIEW.PRICE)\n  const [frequency, setFrequency] = useState(DATA_FREQUENCY.HOUR)\n\n  const [darkMode] = useDarkModeManager()\n  const textColor = darkMode ? 'white' : 'black'\n\n  // reset view on new address\n  const addressPrev = usePrevious(address)\n  useEffect(() => {\n    if (address !== addressPrev && addressPrev) {\n      setChartFilter(CHART_VIEW.LIQUIDITY)\n    }\n  }, [address, addressPrev])\n\n  let chartData = useTokenChartData(address)\n\n  const [timeWindow, setTimeWindow] = useState(timeframeOptions.WEEK)\n  const prevWindow = usePrevious(timeWindow)\n\n  // hourly and daily price data based on the current time window\n  const hourlyWeek = useTokenPriceData(address, timeframeOptions.WEEK, 3600)\n  const hourlyMonth = useTokenPriceData(address, timeframeOptions.MONTH, 3600)\n  const hourlyAll = useTokenPriceData(address, timeframeOptions.ALL_TIME, 3600)\n  const dailyWeek = useTokenPriceData(address, timeframeOptions.WEEK, 86400)\n  const dailyMonth = useTokenPriceData(address, timeframeOptions.MONTH, 86400)\n  const dailyAll = useTokenPriceData(address, timeframeOptions.ALL_TIME, 86400)\n\n  const priceData =\n    timeWindow === timeframeOptions.MONTH\n      ? // monthly selected\n        frequency === DATA_FREQUENCY.DAY\n        ? dailyMonth\n        : hourlyMonth\n      : // weekly selected\n      timeWindow === timeframeOptions.WEEK\n      ? frequency === DATA_FREQUENCY.DAY\n        ? dailyWeek\n        : hourlyWeek\n      : // all time selected\n      frequency === DATA_FREQUENCY.DAY\n      ? dailyAll\n      : hourlyAll\n\n  // switch to hourly data when switched to week window\n  useEffect(() => {\n    if (timeWindow === timeframeOptions.WEEK && prevWindow && prevWindow !== timeframeOptions.WEEK) {\n      setFrequency(DATA_FREQUENCY.HOUR)\n    }\n  }, [prevWindow, timeWindow])\n\n  // switch to daily data if switche to month or all time view\n  useEffect(() => {\n    if (timeWindow === timeframeOptions.MONTH && prevWindow && prevWindow !== timeframeOptions.MONTH) {\n      setFrequency(DATA_FREQUENCY.DAY)\n    }\n    if (timeWindow === timeframeOptions.ALL_TIME && prevWindow && prevWindow !== timeframeOptions.ALL_TIME) {\n      setFrequency(DATA_FREQUENCY.DAY)\n    }\n  }, [prevWindow, timeWindow])\n\n  const below1080 = useMedia('(max-width: 1080px)')\n  const below600 = useMedia('(max-width: 600px)')\n\n  let utcStartTime = getTimeframe(timeWindow)\n  const domain = [(dataMin) => (dataMin > utcStartTime ? dataMin : utcStartTime), 'dataMax']\n  const aspect = below1080 ? 60 / 32 : below600 ? 60 / 42 : 60 / 22\n\n  chartData = chartData?.filter((entry) => entry.date >= utcStartTime)\n\n  // update the width on a window resize\n  const ref = useRef()\n  const isClient = typeof window === 'object'\n  const [width, setWidth] = useState(ref?.current?.container?.clientWidth)\n  useEffect(() => {\n    if (!isClient) {\n      return false\n    }\n    function handleResize() {\n      setWidth(ref?.current?.container?.clientWidth ?? width)\n    }\n    window.addEventListener('resize', handleResize)\n    return () => window.removeEventListener('resize', handleResize)\n  }, [isClient, width]) // Empty array ensures that effect is only run on mount and unmount\n\n  return (\n    <ChartWrapper>\n      {below600 ? (\n        <RowBetween mb={40}>\n          <DropdownSelect options={CHART_VIEW} active={chartFilter} setActive={setChartFilter} color={color} />\n          <DropdownSelect options={timeframeOptions} active={timeWindow} setActive={setTimeWindow} color={color} />\n        </RowBetween>\n      ) : (\n        <RowBetween\n          mb={\n            chartFilter === CHART_VIEW.LIQUIDITY ||\n            chartFilter === CHART_VIEW.VOLUME ||\n            (chartFilter === CHART_VIEW.PRICE && frequency === DATA_FREQUENCY.LINE)\n              ? 40\n              : 0\n          }\n          align=\"flex-start\"\n        >\n          <AutoColumn gap=\"8px\">\n            <RowFixed>\n              <OptionButton\n                active={chartFilter === CHART_VIEW.LIQUIDITY}\n                onClick={() => setChartFilter(CHART_VIEW.LIQUIDITY)}\n                style={{ marginRight: '6px' }}\n              >\n                Liquidity\n              </OptionButton>\n              <OptionButton\n                active={chartFilter === CHART_VIEW.VOLUME}\n                onClick={() => setChartFilter(CHART_VIEW.VOLUME)}\n                style={{ marginRight: '6px' }}\n              >\n                Volume\n              </OptionButton>\n              <OptionButton\n                active={chartFilter === CHART_VIEW.PRICE}\n                onClick={() => {\n                  setChartFilter(CHART_VIEW.PRICE)\n                }}\n              >\n                Price\n              </OptionButton>\n            </RowFixed>\n            {chartFilter === CHART_VIEW.PRICE && (\n              <AutoRow gap=\"4px\">\n                <PriceOption\n                  active={frequency === DATA_FREQUENCY.DAY}\n                  onClick={() => {\n                    setTimeWindow(timeframeOptions.MONTH)\n                    setFrequency(DATA_FREQUENCY.DAY)\n                  }}\n                >\n                  D\n                </PriceOption>\n                <PriceOption\n                  active={frequency === DATA_FREQUENCY.HOUR}\n                  onClick={() => setFrequency(DATA_FREQUENCY.HOUR)}\n                >\n                  H\n                </PriceOption>\n                <PriceOption\n                  active={frequency === DATA_FREQUENCY.LINE}\n                  onClick={() => setFrequency(DATA_FREQUENCY.LINE)}\n                >\n                  <Activity size={14} />\n                </PriceOption>\n              </AutoRow>\n            )}\n          </AutoColumn>\n          <AutoRow justify=\"flex-end\" gap=\"6px\" align=\"flex-start\">\n            <OptionButton\n              active={timeWindow === timeframeOptions.WEEK}\n              onClick={() => setTimeWindow(timeframeOptions.WEEK)}\n            >\n              1W\n            </OptionButton>\n            <OptionButton\n              active={timeWindow === timeframeOptions.MONTH}\n              onClick={() => setTimeWindow(timeframeOptions.MONTH)}\n            >\n              1M\n            </OptionButton>\n            <OptionButton\n              active={timeWindow === timeframeOptions.ALL_TIME}\n              onClick={() => setTimeWindow(timeframeOptions.ALL_TIME)}\n            >\n              All\n            </OptionButton>\n          </AutoRow>\n        </RowBetween>\n      )}\n      {chartFilter === CHART_VIEW.LIQUIDITY && chartData && (\n        <ResponsiveContainer aspect={aspect}>\n          <AreaChart margin={{ top: 0, right: 10, bottom: 6, left: 0 }} barCategoryGap={1} data={chartData}>\n            <defs>\n              <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                <stop offset=\"5%\" stopColor={color} stopOpacity={0.35} />\n                <stop offset=\"95%\" stopColor={color} stopOpacity={0} />\n              </linearGradient>\n            </defs>\n            <XAxis\n              tickLine={false}\n              axisLine={false}\n              interval=\"preserveEnd\"\n              tickMargin={16}\n              minTickGap={120}\n              tickFormatter={(tick) => toNiceDate(tick)}\n              dataKey=\"date\"\n              tick={{ fill: textColor }}\n              type={'number'}\n              domain={['dataMin', 'dataMax']}\n            />\n            <YAxis\n              type=\"number\"\n              orientation=\"right\"\n              tickFormatter={(tick) => '$' + toK(tick)}\n              axisLine={false}\n              tickLine={false}\n              interval=\"preserveEnd\"\n              minTickGap={80}\n              yAxisId={0}\n              tick={{ fill: textColor }}\n            />\n            <Tooltip\n              cursor={true}\n              formatter={(val) => formattedNum(val, true)}\n              labelFormatter={(label) => toNiceDateYear(label)}\n              labelStyle={{ paddingTop: 4 }}\n              contentStyle={{\n                padding: '10px 14px',\n                borderRadius: 10,\n                borderColor: color,\n                color: 'black',\n              }}\n              wrapperStyle={{ top: -70, left: -10 }}\n            />\n            <Area\n              key={'other'}\n              dataKey={'totalLiquidityUSD'}\n              stackId=\"2\"\n              strokeWidth={2}\n              dot={false}\n              type=\"monotone\"\n              name={'Liquidity'}\n              yAxisId={0}\n              stroke={darken(0.12, color)}\n              fill=\"url(#colorUv)\"\n            />\n          </AreaChart>\n        </ResponsiveContainer>\n      )}\n      {chartFilter === CHART_VIEW.PRICE &&\n        (frequency === DATA_FREQUENCY.LINE ? (\n          <ResponsiveContainer aspect={below1080 ? 60 / 32 : 60 / 16}>\n            <AreaChart margin={{ top: 0, right: 10, bottom: 6, left: 0 }} barCategoryGap={1} data={chartData}>\n              <defs>\n                <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                  <stop offset=\"5%\" stopColor={color} stopOpacity={0.35} />\n                  <stop offset=\"95%\" stopColor={color} stopOpacity={0} />\n                </linearGradient>\n              </defs>\n              <XAxis\n                tickLine={false}\n                axisLine={false}\n                interval=\"preserveEnd\"\n                tickMargin={16}\n                minTickGap={120}\n                tickFormatter={(tick) => toNiceDate(tick)}\n                dataKey=\"date\"\n                tick={{ fill: textColor }}\n                type={'number'}\n                domain={domain}\n              />\n              <YAxis\n                type=\"number\"\n                orientation=\"right\"\n                tickFormatter={(tick) => '$' + toK(tick)}\n                axisLine={false}\n                tickLine={false}\n                interval=\"preserveEnd\"\n                minTickGap={80}\n                yAxisId={0}\n                tick={{ fill: textColor }}\n              />\n              <Tooltip\n                cursor={true}\n                formatter={(val) => formattedNum(val, true)}\n                labelFormatter={(label) => toNiceDateYear(label)}\n                labelStyle={{ paddingTop: 4 }}\n                contentStyle={{\n                  padding: '10px 14px',\n                  borderRadius: 10,\n                  borderColor: color,\n                  color: 'black',\n                }}\n                wrapperStyle={{ top: -70, left: -10 }}\n              />\n              <Area\n                key={'other'}\n                dataKey={'priceUSD'}\n                stackId=\"2\"\n                strokeWidth={2}\n                dot={false}\n                type=\"monotone\"\n                name={'Price'}\n                yAxisId={0}\n                stroke={darken(0.12, color)}\n                fill=\"url(#colorUv)\"\n              />\n            </AreaChart>\n          </ResponsiveContainer>\n        ) : priceData ? (\n          <ResponsiveContainer aspect={aspect} ref={ref}>\n            <CandleStickChart data={priceData} width={width} base={base} />\n          </ResponsiveContainer>\n        ) : (\n          <LocalLoader />\n        ))}\n\n      {chartFilter === CHART_VIEW.VOLUME && (\n        <ResponsiveContainer aspect={aspect}>\n          <BarChart margin={{ top: 0, right: 10, bottom: 6, left: 10 }} barCategoryGap={1} data={chartData}>\n            <XAxis\n              tickLine={false}\n              axisLine={false}\n              interval=\"preserveEnd\"\n              minTickGap={80}\n              tickMargin={14}\n              tickFormatter={(tick) => toNiceDate(tick)}\n              dataKey=\"date\"\n              tick={{ fill: textColor }}\n              type={'number'}\n              domain={['dataMin', 'dataMax']}\n            />\n            <YAxis\n              type=\"number\"\n              axisLine={false}\n              tickMargin={16}\n              tickFormatter={(tick) => '$' + toK(tick)}\n              tickLine={false}\n              orientation=\"right\"\n              interval=\"preserveEnd\"\n              minTickGap={80}\n              yAxisId={0}\n              tick={{ fill: textColor }}\n            />\n            <Tooltip\n              cursor={{ fill: color, opacity: 0.1 }}\n              formatter={(val) => formattedNum(val, true)}\n              labelFormatter={(label) => toNiceDateYear(label)}\n              labelStyle={{ paddingTop: 4 }}\n              contentStyle={{\n                padding: '10px 14px',\n                borderRadius: 10,\n                borderColor: color,\n                color: 'black',\n              }}\n              wrapperStyle={{ top: -70, left: -10 }}\n            />\n            <Bar\n              type=\"monotone\"\n              name={'Volume'}\n              dataKey={'dailyVolumeUSD'}\n              fill={color}\n              opacity={'0.4'}\n              yAxisId={0}\n              stroke={color}\n            />\n          </BarChart>\n        </ResponsiveContainer>\n      )}\n    </ChartWrapper>\n  )\n}\n\nexport default TokenChart\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useCopyClipboard } from '../../hooks'\nimport { CheckCircle, Copy } from 'react-feather'\nimport { StyledIcon } from '..'\n\nconst CopyIcon = styled.div`\n  color: #aeaeae;\n  flex-shrink: 0;\n  margin-right: 1rem;\n  margin-left: 0.5rem;\n  text-decoration: none;\n  :hover,\n  :active,\n  :focus {\n    text-decoration: none;\n    opacity: 0.8;\n    cursor: pointer;\n  }\n`\nconst TransactionStatusText = styled.span`\n  margin-left: 0.25rem;\n  ${({ theme }) => theme.flexRowNoWrap};\n  align-items: center;\n  color: black;\n`\n\nexport default function CopyHelper({ toCopy }) {\n  const [isCopied, setCopied] = useCopyClipboard()\n\n  return (\n    <CopyIcon onClick={() => setCopied(toCopy)}>\n      {isCopied ? (\n        <TransactionStatusText>\n          <StyledIcon>\n            <CheckCircle size={'14'} />\n          </StyledIcon>\n        </TransactionStatusText>\n      ) : (\n        <TransactionStatusText>\n          <StyledIcon>\n            <Copy size={'14'} />\n          </StyledIcon>\n        </TransactionStatusText>\n      )}\n    </CopyIcon>\n  )\n}\n","import React from 'react'\nimport 'feather-icons'\nimport styled from 'styled-components'\nimport { Text } from 'rebass'\nimport { AlertTriangle } from 'react-feather'\nimport { RowBetween, RowFixed } from '../Row'\nimport { ButtonDark } from '../ButtonStyled'\nimport { AutoColumn } from '../Column'\nimport { Hover } from '..'\nimport Link from '../Link'\nimport { useMedia } from 'react-use'\n\nconst WarningWrapper = styled.div`\n  border-radius: 20px;\n  border: 1px solid #f82d3a;\n  background: rgba(248, 45, 58, 0.05);\n  padding: 1rem;\n  color: #f82d3a;\n  display: ${({ show }) => !show && 'none'};\n  margin: 0 2rem 2rem 2rem;\n  position: relative;\n\n  @media screen and (max-width: 800px) {\n    width: 80% !important;\n    margin-left: 5%;\n  }\n`\n\nconst StyledWarningIcon = styled(AlertTriangle)`\n  min-height: 20px;\n  min-width: 20px;\n  stroke: red;\n`\n\nexport default function Warning({ type, show, setShow, address }) {\n  const below800 = useMedia('(max-width: 800px)')\n\n  const textContent = below800 ? (\n    <div>\n      <Text fontWeight={500} lineHeight={'145.23%'} mt={'10px'}>\n        Anyone can create and name any ERC20 token on Ubiq, including creating fake versions of existing tokens and\n        tokens that claim to represent projects that do not have a token.\n      </Text>\n      <Text fontWeight={500} lineHeight={'145.23%'} mt={'10px'}>\n        Similar to Ubiqscan, this site automatically tracks analytics for all ERC20 tokens independent of token\n        integrity. Please do your own research before interacting with any ERC20 token.\n      </Text>\n    </div>\n  ) : (\n      <Text fontWeight={500} lineHeight={'145.23%'} mt={'10px'}>\n        Anyone can create and name any ERC20 token on Ubiq, including creating fake versions of existing tokens and\n        tokens that claim to represent projects that do not have a token. Similar to Ubiqscan, this site automatically\n        tracks analytics for all ERC20 tokens independent of token integrity. Please do your own research before\n        interacting with any ERC20 token.\n      </Text>\n    )\n\n  return (\n    <WarningWrapper show={show}>\n      <AutoColumn gap=\"4px\">\n        <RowFixed>\n          <StyledWarningIcon />\n          <Text fontWeight={600} lineHeight={'145.23%'} ml={'10px'}>\n            Token Safety Alert\n          </Text>\n        </RowFixed>\n        {textContent}\n        {below800 ? (\n          <div>\n            <Hover style={{ marginTop: '10px' }}>\n              <Link\n                fontWeight={500}\n                lineHeight={'145.23%'}\n                color={'#2172E5'}\n                href={'https://ubiqscan.io/address/' + address}\n                target=\"_blank\"\n              >\n                View {type === 'token' ? 'token' : 'pair'} contract on Ubiqscan\n              </Link>\n            </Hover>\n            <RowBetween style={{ marginTop: '20px' }}>\n              <div />\n              <ButtonDark color={'#f82d3a'} style={{ minWidth: '140px' }} onClick={() => setShow(false)}>\n                I understand\n              </ButtonDark>\n            </RowBetween>\n          </div>\n        ) : (\n            <RowBetween style={{ marginTop: '10px' }}>\n              <Hover>\n                <Link\n                  fontWeight={500}\n                  lineHeight={'145.23%'}\n                  color={'#2172E5'}\n                  href={'https://ubiqscan.io/address/' + address}\n                  target=\"_blank\"\n                >\n                  View {type === 'token' ? 'token' : 'pair'} contract on Ubiqscan\n              </Link>\n              </Hover>\n              <ButtonDark color={'#f82d3a'} style={{ minWidth: '140px' }} onClick={() => setShow(false)}>\n                I understand\n            </ButtonDark>\n            </RowBetween>\n          )}\n      </AutoColumn>\n    </WarningWrapper>\n  )\n}\n","import React, { useCallback, useState } from 'react'\nimport styled from 'styled-components'\nimport Popover, { PopoverProps } from '../Popover'\n\nconst Wrapper = styled.span`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst TooltipContainer = styled.div`\n  width: 228px;\n  padding: 0.6rem 1rem;\n  line-height: 150%;\n  font-weight: 400;\n`\n\ninterface TooltipProps extends Omit<PopoverProps, 'content'> {\n  text: string\n}\n\nexport function Tooltip({ text, ...rest }: TooltipProps) {\n  return <Popover content={<TooltipContainer>{text}</TooltipContainer>} {...rest} />\n}\n\nexport default function HoverText({ text, children }: { text: string; children: any }) {\n  const [show, setShow] = useState<boolean>(false)\n  const open = useCallback(() => setShow(true), [setShow])\n  const close = useCallback(() => setShow(false), [setShow])\n\n  return (\n    <Wrapper>\n      <Tooltip text={text} show={show}>\n        <Wrapper onMouseEnter={open} onMouseLeave={close}>\n          {children}\n        </Wrapper>\n      </Tooltip>\n    </Wrapper>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { TYPE } from '../../Theme'\nimport { RowFixed } from '../Row'\n\nconst StyleCheckbox = styled.input`\n  background: ${({ theme }) => theme.bg2};\n\n  :before {\n    background: #f35429;\n  }\n\n  :hover {\n    cursor: pointer;\n  }\n`\n\nconst ButtonText = styled(TYPE.main)`\n  cursor: pointer;\n  :hover {\n    opacity: 0.6;\n  }\n`\n\nconst CheckBox = ({ checked, setChecked, text }) => {\n  return (\n    <RowFixed>\n      <StyleCheckbox name=\"checkbox\" type=\"checkbox\" checked={checked} onChange={setChecked} />\n      <ButtonText ml={'4px'} onClick={setChecked}>\n        {text}\n      </ButtonText>\n    </RowFixed>\n  )\n}\n\nexport default CheckBox\n","import React, { useState } from 'react'\nimport 'feather-icons'\nimport { withRouter } from 'react-router-dom'\nimport { Text } from 'rebass'\nimport styled from 'styled-components'\nimport Link from '../components/Link'\nimport Panel from '../components/Panel'\nimport TokenLogo from '../components/TokenLogo'\nimport PairList from '../components/PairList'\nimport Loader from '../components/LocalLoader'\nimport { AutoRow, RowBetween, RowFixed } from '../components/Row'\nimport Column, { AutoColumn } from '../components/Column'\nimport { ButtonLight, ButtonDark } from '../components/ButtonStyled'\nimport TxnList from '../components/TxnList'\nimport TokenChart from '../components/TokenChart'\nimport { BasicLink } from '../components/Link'\nimport Search from '../components/Search'\nimport { formattedNum, formattedPercent, getPoolLink, getSwapLink, localNumber } from '../utils'\nimport { useTokenData, useTokenTransactions, useTokenPairs } from '../contexts/TokenData'\nimport { TYPE, ThemedBackground } from '../Theme'\nimport { transparentize } from 'polished'\nimport { useColor } from '../hooks'\nimport CopyHelper from '../components/Copy'\nimport { useMedia } from 'react-use'\nimport { useDataForList } from '../contexts/PairData'\nimport { useEffect } from 'react'\nimport Warning from '../components/Warning'\nimport { usePathDismissed, useSavedTokens } from '../contexts/LocalStorage'\nimport { Hover, PageWrapper, ContentWrapper, StyledIcon } from '../components'\nimport { PlusCircle, Bookmark, AlertCircle } from 'react-feather'\nimport FormattedName from '../components/FormattedName'\nimport { useListedTokens } from '../contexts/Application'\nimport HoverText from '../components/HoverText'\nimport { UNTRACKED_COPY } from '../constants'\nimport QuestionHelper from '../components/QuestionHelper'\nimport Checkbox from '../components/Checkbox'\n\nconst DashboardWrapper = styled.div`\n  width: 100%;\n`\n\nconst PanelWrapper = styled.div`\n  grid-template-columns: repeat(3, 1fr);\n  grid-template-rows: max-content;\n  gap: 6px;\n  display: inline-grid;\n  width: 100%;\n  align-items: start;\n  @media screen and (max-width: 1024px) {\n    grid-template-columns: 1fr;\n    align-items: stretch;\n    > * {\n      grid-column: 1 / 4;\n    }\n\n    > * {\n      &:first-child {\n        width: 100%;\n      }\n    }\n  }\n`\n\nconst TokenDetailsLayout = styled.div`\n  display: inline-grid;\n  width: 100%;\n  grid-template-columns: auto auto auto 1fr;\n  column-gap: 30px;\n  align-items: start;\n\n  &:last-child {\n    align-items: center;\n    justify-items: end;\n  }\n  @media screen and (max-width: 1024px) {\n    grid-template-columns: 1fr;\n    align-items: stretch;\n    > * {\n      grid-column: 1 / 4;\n      margin-bottom: 1rem;\n    }\n\n    &:last-child {\n      align-items: start;\n      justify-items: start;\n    }\n  }\n`\n\nconst WarningIcon = styled(AlertCircle)`\n  stroke: ${({ theme }) => theme.text1};\n  height: 16px;\n  width: 16px;\n  opacity: 0.6;\n`\n\nconst WarningGrouping = styled.div`\n  opacity: ${({ disabled }) => disabled && '0.4'};\n  pointer-events: ${({ disabled }) => disabled && 'none'};\n`\n\nfunction TokenPage({ address, history }) {\n  const {\n    id,\n    name,\n    symbol,\n    priceUSD,\n    oneDayVolumeUSD,\n    totalLiquidityUSD,\n    volumeChangeUSD,\n    oneDayVolumeUT,\n    volumeChangeUT,\n    priceChangeUSD,\n    liquidityChangeUSD,\n    oneDayTxns,\n    txnChange,\n  } = useTokenData(address)\n\n  useEffect(() => {\n    document.querySelector('body').scrollTo(0, 0)\n  }, [])\n\n  // detect color from token\n  const backgroundColor = useColor(id, symbol)\n\n  const allPairs = useTokenPairs(address)\n\n  // pairs to show in pair list\n  const fetchedPairsList = useDataForList(allPairs)\n\n  // all transactions with this token\n  const transactions = useTokenTransactions(address)\n\n  // price\n  const price = priceUSD ? formattedNum(priceUSD, true) : ''\n  const priceChange = priceChangeUSD ? formattedPercent(priceChangeUSD) : ''\n\n  // volume\n  const volume = formattedNum(!!oneDayVolumeUSD ? oneDayVolumeUSD : oneDayVolumeUT, true)\n\n  const usingUtVolume = oneDayVolumeUSD === 0 && !!oneDayVolumeUT\n  const volumeChange = formattedPercent(!usingUtVolume ? volumeChangeUSD : volumeChangeUT)\n\n  // liquidity\n  const liquidity = formattedNum(totalLiquidityUSD, true)\n  const liquidityChange = formattedPercent(liquidityChangeUSD)\n\n  // transactions\n  const txnChangeFormatted = formattedPercent(txnChange)\n\n  const below1080 = useMedia('(max-width: 1080px)')\n  const below800 = useMedia('(max-width: 800px)')\n  const below600 = useMedia('(max-width: 600px)')\n  const below500 = useMedia('(max-width: 500px)')\n\n  // format for long symbol\n  const LENGTH = below1080 ? 10 : 16\n  const formattedSymbol = symbol?.length > LENGTH ? symbol.slice(0, LENGTH) + '...' : symbol\n\n  const [dismissed, markAsDismissed] = usePathDismissed(history.location.pathname)\n  const [savedTokens, addToken] = useSavedTokens()\n  const listedTokens = useListedTokens()\n\n  useEffect(() => {\n    window.scrollTo({\n      behavior: 'smooth',\n      top: 0,\n    })\n  }, [])\n\n  const [useTracked, setUseTracked] = useState(true)\n\n  return (\n    <PageWrapper>\n      <ThemedBackground backgroundColor={transparentize(0.6, backgroundColor)} />\n      <Warning\n        type={'token'}\n        show={!dismissed && listedTokens && !listedTokens.includes(address)}\n        setShow={markAsDismissed}\n        address={address}\n      />\n      <ContentWrapper>\n        <RowBetween style={{ flexWrap: 'wrap', alingItems: 'start' }}>\n          <AutoRow align=\"flex-end\" style={{ width: 'fit-content' }}>\n            <TYPE.body>\n              <BasicLink to=\"/tokens\">{'Tokens '}</BasicLink>→ {symbol}\n              {'  '}\n            </TYPE.body>\n            <Link\n              style={{ width: 'fit-content' }}\n              color={backgroundColor}\n              external\n              href={'https://ubiqscan.io/address/' + address}\n            >\n              <Text style={{ marginLeft: '.15rem' }} fontSize={'14px'} fontWeight={400}>\n                ({address.slice(0, 8) + '...' + address.slice(36, 42)})\n              </Text>\n            </Link>\n          </AutoRow>\n          {!below600 && <Search small={true} />}\n        </RowBetween>\n\n        <WarningGrouping disabled={!dismissed && listedTokens && !listedTokens.includes(address)}>\n          <DashboardWrapper style={{ marginTop: below1080 ? '0' : '1rem' }}>\n            <RowBetween\n              style={{\n                flexWrap: 'wrap',\n                marginBottom: '2rem',\n                alignItems: 'flex-start',\n              }}\n            >\n              <RowFixed style={{ flexWrap: 'wrap' }}>\n                <RowFixed style={{ alignItems: 'baseline' }}>\n                  <TokenLogo address={address} size=\"32px\" style={{ alignSelf: 'center' }} />\n                  <TYPE.main fontSize={below1080 ? '1.5rem' : '2rem'} fontWeight={500} style={{ margin: '0 1rem' }}>\n                    <RowFixed gap=\"6px\">\n                      <FormattedName text={name ? name + ' ' : ''} maxCharacters={16} style={{ marginRight: '6px' }} />{' '}\n                      {formattedSymbol ? `(${formattedSymbol})` : ''}\n                    </RowFixed>\n                  </TYPE.main>{' '}\n                  {!below1080 && (\n                    <>\n                      <TYPE.main fontSize={'1.5rem'} fontWeight={500} style={{ marginRight: '1rem' }}>\n                        {price}\n                      </TYPE.main>\n                      {priceChange}\n                    </>\n                  )}\n                </RowFixed>\n              </RowFixed>\n              <span>\n                <RowFixed ml={below500 ? '0' : '2.5rem'} mt={below500 ? '1rem' : '0'}>\n                  {!!!savedTokens[address] && !below800 ? (\n                    <Hover onClick={() => addToken(address, symbol)}>\n                      <StyledIcon>\n                        <PlusCircle style={{ marginRight: '0.5rem' }} />\n                      </StyledIcon>\n                    </Hover>\n                  ) : !below1080 ? (\n                    <StyledIcon>\n                      <Bookmark style={{ marginRight: '0.5rem', opacity: 0.4 }} />\n                    </StyledIcon>\n                  ) : (\n                        <></>\n                      )}\n                  <Link href={getPoolLink(address)} target=\"_blank\">\n                    <ButtonLight color={backgroundColor}>+ Add Liquidity</ButtonLight>\n                  </Link>\n                  <Link href={getSwapLink(address)} target=\"_blank\">\n                    <ButtonDark ml={'.5rem'} mr={below1080 && '.5rem'} color={backgroundColor}>\n                      Trade\n                    </ButtonDark>\n                  </Link>\n                </RowFixed>\n              </span>\n            </RowBetween>\n\n            <>\n              {!below1080 && (\n                <RowFixed>\n                  <TYPE.main fontSize={'1.125rem'} mr=\"6px\">\n                    Token Stats\n                  </TYPE.main>\n                  {usingUtVolume && (\n                    <HoverText text={UNTRACKED_COPY}>\n                      <WarningIcon />\n                    </HoverText>\n                  )}\n                </RowFixed>\n              )}\n              <PanelWrapper style={{ marginTop: below1080 ? '0' : '1rem' }}>\n                {below1080 && price && (\n                  <Panel>\n                    <AutoColumn gap=\"20px\">\n                      <RowBetween>\n                        <TYPE.main>Price</TYPE.main>\n                        <div />\n                      </RowBetween>\n                      <RowBetween align=\"flex-end\">\n                        {' '}\n                        <TYPE.main fontSize={'1.5rem'} lineHeight={1} fontWeight={500}>\n                          {price}\n                        </TYPE.main>\n                        <TYPE.main>{priceChange}</TYPE.main>\n                      </RowBetween>\n                    </AutoColumn>\n                  </Panel>\n                )}\n                <Panel>\n                  <AutoColumn gap=\"20px\">\n                    <RowBetween>\n                      <TYPE.main>Total Liquidity</TYPE.main>\n                      <div />\n                    </RowBetween>\n                    <RowBetween align=\"flex-end\">\n                      <TYPE.main fontSize={'1.5rem'} lineHeight={1} fontWeight={500}>\n                        {liquidity}\n                      </TYPE.main>\n                      <TYPE.main>{liquidityChange}</TYPE.main>\n                    </RowBetween>\n                  </AutoColumn>\n                </Panel>\n                <Panel>\n                  <AutoColumn gap=\"20px\">\n                    <RowBetween>\n                      <TYPE.main>Volume (24hrs)</TYPE.main>\n                      <div />\n                    </RowBetween>\n                    <RowBetween align=\"flex-end\">\n                      <TYPE.main fontSize={'1.5rem'} lineHeight={1} fontWeight={500}>\n                        {volume}\n                      </TYPE.main>\n                      <TYPE.main>{volumeChange}</TYPE.main>\n                    </RowBetween>\n                  </AutoColumn>\n                </Panel>\n\n                <Panel>\n                  <AutoColumn gap=\"20px\">\n                    <RowBetween>\n                      <TYPE.main>Transactions (24hrs)</TYPE.main>\n                      <div />\n                    </RowBetween>\n                    <RowBetween align=\"flex-end\">\n                      <TYPE.main fontSize={'1.5rem'} lineHeight={1} fontWeight={500}>\n                        {oneDayTxns ? localNumber(oneDayTxns) : 0}\n                      </TYPE.main>\n                      <TYPE.main>{txnChangeFormatted}</TYPE.main>\n                    </RowBetween>\n                  </AutoColumn>\n                </Panel>\n                <Panel\n                  style={{\n                    gridColumn: below1080 ? '1' : '2/4',\n                    gridRow: below1080 ? '' : '1/4',\n                  }}\n                >\n                  <TokenChart address={address} color={backgroundColor} base={priceUSD} />\n                </Panel>\n              </PanelWrapper>\n            </>\n\n            <RowBetween style={{ marginTop: '3rem' }}>\n              <TYPE.main fontSize={'1.125rem'}>Top Pairs</TYPE.main>\n              <AutoRow gap=\"4px\" style={{ width: 'fit-content' }}>\n                <Checkbox\n                  checked={useTracked}\n                  setChecked={() => setUseTracked(!useTracked)}\n                  text={'Hide untracked pairs'}\n                />\n                <QuestionHelper text=\"Untracked USD values may be inaccurate due to low liquidity UBQ pairs.\" />\n              </AutoRow>\n            </RowBetween>\n            <Panel\n              rounded\n              style={{\n                marginTop: '1.5rem',\n                padding: '1.125rem 0 ',\n              }}\n            >\n              {address && fetchedPairsList ? (\n                <PairList color={backgroundColor} address={address} pairs={fetchedPairsList} useTracked={useTracked} />\n              ) : (\n                  <Loader />\n                )}\n            </Panel>\n            <RowBetween mt={40} mb={'1rem'}>\n              <TYPE.main fontSize={'1.125rem'}>Transactions</TYPE.main> <div />\n            </RowBetween>\n            <Panel rounded>\n              {transactions ? <TxnList color={backgroundColor} transactions={transactions} /> : <Loader />}\n            </Panel>\n            <>\n              <RowBetween style={{ marginTop: '3rem' }}>\n                <TYPE.main fontSize={'1.125rem'}>Token Information</TYPE.main>{' '}\n              </RowBetween>\n              <Panel\n                rounded\n                style={{\n                  marginTop: '1.5rem',\n                }}\n                p={20}\n              >\n                <TokenDetailsLayout>\n                  <Column>\n                    <TYPE.main>Symbol</TYPE.main>\n                    <Text style={{ marginTop: '.5rem' }} fontSize={24} fontWeight=\"500\">\n                      <FormattedName text={symbol} maxCharacters={12} />\n                    </Text>\n                  </Column>\n                  <Column>\n                    <TYPE.main>Name</TYPE.main>\n                    <TYPE.main style={{ marginTop: '.5rem' }} fontSize={24} fontWeight=\"500\">\n                      <FormattedName text={name} maxCharacters={16} />\n                    </TYPE.main>\n                  </Column>\n                  <Column>\n                    <TYPE.main>Address</TYPE.main>\n                    <AutoRow align=\"flex-end\">\n                      <TYPE.main style={{ marginTop: '.5rem' }} fontSize={24} fontWeight=\"500\">\n                        {address.slice(0, 8) + '...' + address.slice(36, 42)}\n                      </TYPE.main>\n                      <CopyHelper toCopy={address} />\n                    </AutoRow>\n                  </Column>\n                  <ButtonLight color={backgroundColor}>\n                    <Link color={backgroundColor} external href={'https://ubiqscan.io/address/' + address}>\n                      View on Ubiqscan ↗\n                    </Link>\n                  </ButtonLight>\n                </TokenDetailsLayout>\n              </Panel>\n            </>\n          </DashboardWrapper>\n        </WarningGrouping>\n      </ContentWrapper>\n    </PageWrapper>\n  )\n}\n\nexport default withRouter(TokenPage)\n","import React, { useState, useRef, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Area, XAxis, YAxis, ResponsiveContainer, Tooltip, AreaChart, BarChart, Bar } from 'recharts'\nimport { RowBetween, AutoRow } from '../Row'\n\nimport { toK, toNiceDate, toNiceDateYear, formattedNum, getTimeframe } from '../../utils'\nimport { OptionButton } from '../ButtonStyled'\nimport { darken } from 'polished'\nimport { usePairChartData, useHourlyRateData, usePairData } from '../../contexts/PairData'\nimport { timeframeOptions } from '../../constants'\nimport { useMedia } from 'react-use'\nimport { EmptyCard } from '..'\nimport DropdownSelect from '../DropdownSelect'\nimport CandleStickChart from '../CandleChart'\nimport LocalLoader from '../LocalLoader'\nimport { useDarkModeManager } from '../../contexts/LocalStorage'\n\nconst ChartWrapper = styled.div`\n  height: 100%;\n  max-height: 340px;\n\n  @media screen and (max-width: 600px) {\n    min-height: 200px;\n  }\n`\n\nconst OptionsRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  margin-bottom: 40px;\n`\n\nconst CHART_VIEW = {\n  VOLUME: 'Volume',\n  LIQUIDITY: 'Liquidity',\n  RATE0: 'Rate 0',\n  RATE1: 'Rate 1',\n}\n\nconst PairChart = ({ address, color, base0, base1 }) => {\n  const [chartFilter, setChartFilter] = useState(CHART_VIEW.LIQUIDITY)\n\n  const [timeWindow, setTimeWindow] = useState(timeframeOptions.MONTH)\n\n  const [darkMode] = useDarkModeManager()\n  const textColor = darkMode ? 'white' : 'black'\n\n  // update the width on a window resize\n  const ref = useRef()\n  const isClient = typeof window === 'object'\n  const [width, setWidth] = useState(ref?.current?.container?.clientWidth)\n  const [height, setHeight] = useState(ref?.current?.container?.clientHeight)\n  useEffect(() => {\n    if (!isClient) {\n      return false\n    }\n    function handleResize() {\n      setWidth(ref?.current?.container?.clientWidth ?? width)\n      setHeight(ref?.current?.container?.clientHeight ?? height)\n    }\n    window.addEventListener('resize', handleResize)\n    return () => window.removeEventListener('resize', handleResize)\n  }, [height, isClient, width]) // Empty array ensures that effect is only run on mount and unmount\n\n  // get data for pair, and rates\n  const pairData = usePairData(address)\n  let chartData = usePairChartData(address)\n  const hourlyData = useHourlyRateData(address, timeWindow)\n  const hourlyRate0 = hourlyData && hourlyData[0]\n  const hourlyRate1 = hourlyData && hourlyData[1]\n\n  // formatted symbols for overflow\n  const formattedSymbol0 =\n    pairData?.token0?.symbol.length > 6 ? pairData?.token0?.symbol.slice(0, 5) + '...' : pairData?.token0?.symbol\n  const formattedSymbol1 =\n    pairData?.token1?.symbol.length > 6 ? pairData?.token1?.symbol.slice(0, 5) + '...' : pairData?.token1?.symbol\n\n  const below1600 = useMedia('(max-width: 1600px)')\n  const below1080 = useMedia('(max-width: 1080px)')\n  const below600 = useMedia('(max-width: 600px)')\n\n  let utcStartTime = getTimeframe(timeWindow)\n  chartData = chartData?.filter((entry) => entry.date >= utcStartTime)\n\n  if (chartData && chartData.length === 0) {\n    return (\n      <ChartWrapper>\n        <EmptyCard height=\"300px\">No historical data yet.</EmptyCard>{' '}\n      </ChartWrapper>\n    )\n  }\n\n  /**\n   * Used to format values on chart on scroll\n   * Needs to be raw html for chart API to parse styles\n   * @param {*} val\n   */\n  function valueFormatter(val) {\n    if (chartFilter === CHART_VIEW.RATE0) {\n      return (\n        formattedNum(val) +\n        `<span style=\"font-size: 12px; margin-left: 4px;\">${formattedSymbol1}/${formattedSymbol0}<span>`\n      )\n    }\n    if (chartFilter === CHART_VIEW.RATE1) {\n      return (\n        formattedNum(val) +\n        `<span style=\"font-size: 12px; margin-left: 4px;\">${formattedSymbol0}/${formattedSymbol1}<span>`\n      )\n    }\n  }\n\n  const aspect = below1080 ? 60 / 20 : below1600 ? 60 / 28 : 60 / 22\n\n  return (\n    <ChartWrapper>\n      {below600 ? (\n        <RowBetween mb={40}>\n          <DropdownSelect options={CHART_VIEW} active={chartFilter} setActive={setChartFilter} color={color} />\n          <DropdownSelect options={timeframeOptions} active={timeWindow} setActive={setTimeWindow} color={color} />\n        </RowBetween>\n      ) : (\n        <OptionsRow>\n          <AutoRow gap=\"6px\" style={{ flexWrap: 'nowrap' }}>\n            <OptionButton\n              active={chartFilter === CHART_VIEW.LIQUIDITY}\n              onClick={() => {\n                setTimeWindow(timeframeOptions.ALL_TIME)\n                setChartFilter(CHART_VIEW.LIQUIDITY)\n              }}\n            >\n              Liquidity\n            </OptionButton>\n            <OptionButton\n              active={chartFilter === CHART_VIEW.VOLUME}\n              onClick={() => {\n                setTimeWindow(timeframeOptions.ALL_TIME)\n                setChartFilter(CHART_VIEW.VOLUME)\n              }}\n            >\n              Volume\n            </OptionButton>\n            <OptionButton\n              active={chartFilter === CHART_VIEW.RATE0}\n              onClick={() => {\n                setTimeWindow(timeframeOptions.WEEK)\n                setChartFilter(CHART_VIEW.RATE0)\n              }}\n            >\n              {pairData.token0 ? formattedSymbol1 + '/' + formattedSymbol0 : '-'}\n            </OptionButton>\n            <OptionButton\n              active={chartFilter === CHART_VIEW.RATE1}\n              onClick={() => {\n                setTimeWindow(timeframeOptions.WEEK)\n                setChartFilter(CHART_VIEW.RATE1)\n              }}\n            >\n              {pairData.token0 ? formattedSymbol0 + '/' + formattedSymbol1 : '-'}\n            </OptionButton>\n          </AutoRow>\n          <AutoRow justify=\"flex-end\" gap=\"6px\">\n            <OptionButton\n              active={timeWindow === timeframeOptions.WEEK}\n              onClick={() => setTimeWindow(timeframeOptions.WEEK)}\n            >\n              1W\n            </OptionButton>\n            <OptionButton\n              active={timeWindow === timeframeOptions.MONTH}\n              onClick={() => setTimeWindow(timeframeOptions.MONTH)}\n            >\n              1M\n            </OptionButton>\n            <OptionButton\n              active={timeWindow === timeframeOptions.ALL_TIME}\n              onClick={() => setTimeWindow(timeframeOptions.ALL_TIME)}\n            >\n              All\n            </OptionButton>\n          </AutoRow>\n        </OptionsRow>\n      )}\n      {chartFilter === CHART_VIEW.LIQUIDITY && (\n        <ResponsiveContainer aspect={aspect}>\n          <AreaChart margin={{ top: 0, right: 10, bottom: 6, left: 0 }} barCategoryGap={1} data={chartData}>\n            <defs>\n              <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                <stop offset=\"5%\" stopColor={color} stopOpacity={0.35} />\n                <stop offset=\"95%\" stopColor={color} stopOpacity={0} />\n              </linearGradient>\n            </defs>\n            <XAxis\n              tickLine={false}\n              axisLine={false}\n              interval=\"preserveEnd\"\n              tickMargin={14}\n              minTickGap={80}\n              tickFormatter={(tick) => toNiceDate(tick)}\n              dataKey=\"date\"\n              tick={{ fill: textColor }}\n              type={'number'}\n              domain={['dataMin', 'dataMax']}\n            />\n            <YAxis\n              type=\"number\"\n              orientation=\"right\"\n              tickFormatter={(tick) => '$' + toK(tick)}\n              axisLine={false}\n              tickLine={false}\n              interval=\"preserveEnd\"\n              minTickGap={80}\n              yAxisId={0}\n              tickMargin={16}\n              tick={{ fill: textColor }}\n            />\n            <Tooltip\n              cursor={true}\n              formatter={(val) => formattedNum(val, true)}\n              labelFormatter={(label) => toNiceDateYear(label)}\n              labelStyle={{ paddingTop: 4 }}\n              contentStyle={{\n                padding: '10px 14px',\n                borderRadius: 10,\n                borderColor: color,\n                color: 'black',\n              }}\n              wrapperStyle={{ top: -70, left: -10 }}\n            />\n            <Area\n              strokeWidth={2}\n              dot={false}\n              type=\"monotone\"\n              name={' (USD)'}\n              dataKey={'reserveUSD'}\n              yAxisId={0}\n              stroke={darken(0.12, color)}\n              fill=\"url(#colorUv)\"\n            />\n          </AreaChart>\n        </ResponsiveContainer>\n      )}\n\n      {chartFilter === CHART_VIEW.RATE1 &&\n        (hourlyRate1 ? (\n          <ResponsiveContainer aspect={aspect} ref={ref}>\n            <CandleStickChart\n              data={hourlyRate1}\n              base={base0}\n              margin={false}\n              width={width}\n              valueFormatter={valueFormatter}\n            />\n          </ResponsiveContainer>\n        ) : (\n          <LocalLoader />\n        ))}\n\n      {chartFilter === CHART_VIEW.RATE0 &&\n        (hourlyRate0 ? (\n          <ResponsiveContainer aspect={aspect} ref={ref}>\n            <CandleStickChart\n              data={hourlyRate0}\n              base={base1}\n              margin={false}\n              width={width}\n              valueFormatter={valueFormatter}\n            />\n          </ResponsiveContainer>\n        ) : (\n          <LocalLoader />\n        ))}\n\n      {chartFilter === CHART_VIEW.VOLUME && (\n        <ResponsiveContainer aspect={aspect}>\n          <BarChart\n            margin={{ top: 0, right: 0, bottom: 6, left: below1080 ? 0 : 10 }}\n            barCategoryGap={1}\n            data={chartData}\n          >\n            <XAxis\n              tickLine={false}\n              axisLine={false}\n              interval=\"preserveEnd\"\n              minTickGap={80}\n              tickMargin={14}\n              tickFormatter={(tick) => toNiceDate(tick)}\n              dataKey=\"date\"\n              tick={{ fill: textColor }}\n              type={'number'}\n              domain={['dataMin', 'dataMax']}\n            />\n            <YAxis\n              type=\"number\"\n              axisLine={false}\n              tickMargin={16}\n              tickFormatter={(tick) => '$' + toK(tick)}\n              tickLine={false}\n              interval=\"preserveEnd\"\n              orientation=\"right\"\n              minTickGap={80}\n              yAxisId={0}\n              tick={{ fill: textColor }}\n            />\n            <Tooltip\n              cursor={{ fill: color, opacity: 0.1 }}\n              formatter={(val) => formattedNum(val, true)}\n              labelFormatter={(label) => toNiceDateYear(label)}\n              labelStyle={{ paddingTop: 4 }}\n              contentStyle={{\n                padding: '10px 14px',\n                borderRadius: 10,\n                borderColor: color,\n                color: 'black',\n              }}\n              wrapperStyle={{ top: -70, left: -10 }}\n            />\n            <Bar\n              type=\"monotone\"\n              name={'Volume'}\n              dataKey={'dailyVolumeUSD'}\n              fill={color}\n              opacity={'0.4'}\n              yAxisId={0}\n              stroke={color}\n            />\n          </BarChart>\n        </ResponsiveContainer>\n      )}\n    </ChartWrapper>\n  )\n}\n\nexport default PairChart\n","import React, { useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport 'feather-icons'\nimport styled from 'styled-components'\nimport Panel from '../components/Panel'\nimport { PageWrapper, ContentWrapperLarge, StyledIcon } from '../components/index'\nimport { AutoRow, RowBetween, RowFixed } from '../components/Row'\nimport Column, { AutoColumn } from '../components/Column'\nimport { ButtonLight, ButtonDark } from '../components/ButtonStyled'\nimport PairChart from '../components/PairChart'\nimport Link from '../components/Link'\nimport TxnList from '../components/TxnList'\nimport Loader from '../components/LocalLoader'\nimport { BasicLink } from '../components/Link'\nimport Search from '../components/Search'\nimport { formattedNum, formattedPercent, getPoolLink, getSwapLink } from '../utils'\nimport { useColor } from '../hooks'\nimport { usePairData, usePairTransactions } from '../contexts/PairData'\nimport { TYPE, ThemedBackground } from '../Theme'\nimport { transparentize } from 'polished'\nimport CopyHelper from '../components/Copy'\nimport { useMedia } from 'react-use'\nimport DoubleTokenLogo from '../components/DoubleLogo'\nimport TokenLogo from '../components/TokenLogo'\nimport { Hover } from '../components'\nimport { useEthPrice } from '../contexts/GlobalData'\nimport Warning from '../components/Warning'\nimport { usePathDismissed, useSavedPairs } from '../contexts/LocalStorage'\n\nimport { Bookmark, PlusCircle, AlertCircle } from 'react-feather'\nimport FormattedName from '../components/FormattedName'\nimport { useListedTokens } from '../contexts/Application'\nimport HoverText from '../components/HoverText'\nimport { UNTRACKED_COPY } from '../constants'\n\nconst DashboardWrapper = styled.div`\n  width: 100%;\n`\n\nconst PanelWrapper = styled.div`\n  grid-template-columns: repeat(3, 1fr);\n  grid-template-rows: max-content;\n  gap: 6px;\n  display: inline-grid;\n  width: 100%;\n  align-items: start;\n  @media screen and (max-width: 1024px) {\n    grid-template-columns: 1fr;\n    align-items: stretch;\n    > * {\n      grid-column: 1 / 4;\n    }\n\n    > * {\n      &:first-child {\n        width: 100%;\n      }\n    }\n  }\n`\n\nconst TokenDetailsLayout = styled.div`\n  display: inline-grid;\n  width: 100%;\n  grid-template-columns: auto auto auto auto 1fr;\n  column-gap: 60px;\n  align-items: start;\n\n  &:last-child {\n    align-items: center;\n    justify-items: end;\n  }\n  @media screen and (max-width: 1024px) {\n    grid-template-columns: 1fr;\n    align-items: stretch;\n    > * {\n      grid-column: 1 / 4;\n      margin-bottom: 1rem;\n    }\n\n    &:last-child {\n      align-items: start;\n      justify-items: start;\n    }\n  }\n`\n\nconst FixedPanel = styled(Panel)`\n  width: fit-content;\n  padding: 8px 12px;\n  border-radius: 10px;\n\n  :hover {\n    cursor: pointer;\n    background-color: ${({ theme }) => theme.bg2};\n  }\n`\n\nconst HoverSpan = styled.span`\n  :hover {\n    cursor: pointer;\n    opacity: 0.7;\n  }\n`\n\nconst WarningIcon = styled(AlertCircle)`\n  stroke: ${({ theme }) => theme.text1};\n  height: 16px;\n  width: 16px;\n  opacity: 0.6;\n`\n\nconst WarningGrouping = styled.div`\n  opacity: ${({ disabled }) => disabled && '0.4'};\n  pointer-events: ${({ disabled }) => disabled && 'none'};\n`\n\nfunction PairPage({ pairAddress, history }) {\n  const {\n    token0,\n    token1,\n    reserve0,\n    reserve1,\n    reserveUSD,\n    trackedReserveUSD,\n    oneDayVolumeUSD,\n    volumeChangeUSD,\n    oneDayVolumeUntracked,\n    volumeChangeUntracked,\n    liquidityChangeUSD,\n  } = usePairData(pairAddress)\n\n  useEffect(() => {\n    document.querySelector('body').scrollTo(0, 0)\n  }, [])\n\n  const transactions = usePairTransactions(pairAddress)\n  const backgroundColor = useColor(pairAddress)\n\n  const formattedLiquidity = reserveUSD ? formattedNum(reserveUSD, true) : formattedNum(trackedReserveUSD, true)\n  const usingUntrackedLiquidity = !trackedReserveUSD && !!reserveUSD\n  const liquidityChange = formattedPercent(liquidityChangeUSD)\n\n  // volume\n  const volume = !!oneDayVolumeUSD ? formattedNum(oneDayVolumeUSD, true) : formattedNum(oneDayVolumeUntracked, true)\n  const usingUtVolume = oneDayVolumeUSD === 0 && !!oneDayVolumeUntracked\n  const volumeChange = formattedPercent(!usingUtVolume ? volumeChangeUSD : volumeChangeUntracked)\n\n  const showUSDWaning = usingUntrackedLiquidity | usingUtVolume\n\n  // get fees\t  // get fees\n  const fees =\n    oneDayVolumeUSD || oneDayVolumeUSD === 0\n      ? usingUtVolume\n        ? formattedNum(oneDayVolumeUntracked * 0.003, true)\n        : formattedNum(oneDayVolumeUSD * 0.003, true)\n      : '-'\n\n  // token data for usd\n  const [ethPrice] = useEthPrice()\n  const token0USD =\n    token0?.derivedETH && ethPrice ? formattedNum(parseFloat(token0.derivedETH) * parseFloat(ethPrice), true) : ''\n\n  const token1USD =\n    token1?.derivedETH && ethPrice ? formattedNum(parseFloat(token1.derivedETH) * parseFloat(ethPrice), true) : ''\n\n  // rates\n  const token0Rate = reserve0 && reserve1 ? formattedNum(reserve1 / reserve0) : '-'\n  const token1Rate = reserve0 && reserve1 ? formattedNum(reserve0 / reserve1) : '-'\n\n  // formatted symbols for overflow\n  const formattedSymbol0 = token0?.symbol.length > 6 ? token0?.symbol.slice(0, 5) + '...' : token0?.symbol\n  const formattedSymbol1 = token1?.symbol.length > 6 ? token1?.symbol.slice(0, 5) + '...' : token1?.symbol\n\n  const below1080 = useMedia('(max-width: 1080px)')\n  const below900 = useMedia('(max-width: 900px)')\n  const below600 = useMedia('(max-width: 600px)')\n\n  const [dismissed, markAsDismissed] = usePathDismissed(history.location.pathname)\n\n  useEffect(() => {\n    window.scrollTo({\n      behavior: 'smooth',\n      top: 0,\n    })\n  }, [])\n\n  const [savedPairs, addPair] = useSavedPairs()\n\n  const listedTokens = useListedTokens()\n\n  return (\n    <PageWrapper>\n      <ThemedBackground backgroundColor={transparentize(0.6, backgroundColor)} />\n      <span />\n      <Warning\n        type={'pair'}\n        show={!dismissed && listedTokens && !(listedTokens.includes(token0?.id) && listedTokens.includes(token1?.id))}\n        setShow={markAsDismissed}\n        address={pairAddress}\n      />\n      <ContentWrapperLarge>\n        <RowBetween>\n          <TYPE.body>\n            <BasicLink to=\"/pairs\">{'Pairs '}</BasicLink>→ {token0?.symbol}-{token1?.symbol}\n          </TYPE.body>\n          {!below600 && <Search small={true} />}\n        </RowBetween>\n        <WarningGrouping\n          disabled={\n            !dismissed && listedTokens && !(listedTokens.includes(token0?.id) && listedTokens.includes(token1?.id))\n          }\n        >\n          <DashboardWrapper>\n            <AutoColumn gap=\"40px\" style={{ marginBottom: '1.5rem' }}>\n              <div\n                style={{\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                  flexWrap: 'wrap',\n                  width: '100%',\n                }}\n              >\n                <RowFixed style={{ flexWrap: 'wrap', minWidth: '100px' }}>\n                  <RowFixed>\n                    {token0 && token1 && (\n                      <DoubleTokenLogo a0={token0?.id || ''} a1={token1?.id || ''} size={32} margin={true} />\n                    )}{' '}\n                    <TYPE.main fontSize={below1080 ? '1.5rem' : '2rem'} style={{ margin: '0 1rem' }}>\n                      {token0 && token1 ? (\n                        <>\n                          <HoverSpan onClick={() => history.push(`/token/${token0?.id}`)}>{token0.symbol}</HoverSpan>\n                          <span>-</span>\n                          <HoverSpan onClick={() => history.push(`/token/${token1?.id}`)}>\n                            {token1.symbol}\n                          </HoverSpan>{' '}\n                          Pair\n                        </>\n                      ) : (\n                          ''\n                        )}\n                    </TYPE.main>\n                  </RowFixed>\n                </RowFixed>\n                <RowFixed\n                  ml={below900 ? '0' : '2.5rem'}\n                  mt={below1080 && '1rem'}\n                  style={{\n                    flexDirection: below1080 ? 'row-reverse' : 'initial',\n                  }}\n                >\n                  {!!!savedPairs[pairAddress] && !below1080 ? (\n                    <Hover onClick={() => addPair(pairAddress, token0.id, token1.id, token0.symbol, token1.symbol)}>\n                      <StyledIcon>\n                        <PlusCircle style={{ marginRight: '0.5rem' }} />\n                      </StyledIcon>\n                    </Hover>\n                  ) : !below1080 ? (\n                    <StyledIcon>\n                      <Bookmark style={{ marginRight: '0.5rem', opacity: 0.4 }} />\n                    </StyledIcon>\n                  ) : (\n                        <></>\n                      )}\n\n                  <Link external href={getPoolLink(token0?.id, token1?.id)}>\n                    <ButtonLight color={backgroundColor}>+ Add Liquidity</ButtonLight>\n                  </Link>\n                  <Link external href={getSwapLink(token0?.id, token1?.id)}>\n                    <ButtonDark ml={!below1080 && '.5rem'} mr={below1080 && '.5rem'} color={backgroundColor}>\n                      Trade\n                    </ButtonDark>\n                  </Link>\n                </RowFixed>\n              </div>\n            </AutoColumn>\n            <AutoRow\n              gap=\"6px\"\n              style={{\n                width: 'fit-content',\n                marginTop: below900 ? '1rem' : '0',\n                marginBottom: below900 ? '0' : '2rem',\n                flexWrap: 'wrap',\n              }}\n            >\n              <FixedPanel onClick={() => history.push(`/token/${token0?.id}`)}>\n                <RowFixed>\n                  <TokenLogo address={token0?.id} size={'16px'} />\n                  <TYPE.main fontSize={'16px'} lineHeight={1} fontWeight={500} ml={'4px'}>\n                    {token0 && token1\n                      ? `1 ${formattedSymbol0} = ${token0Rate} ${formattedSymbol1} ${parseFloat(token0?.derivedETH) ? '(' + token0USD + ')' : ''\n                      }`\n                      : '-'}\n                  </TYPE.main>\n                </RowFixed>\n              </FixedPanel>\n              <FixedPanel onClick={() => history.push(`/token/${token1?.id}`)}>\n                <RowFixed>\n                  <TokenLogo address={token1?.id} size={'16px'} />\n                  <TYPE.main fontSize={'16px'} lineHeight={1} fontWeight={500} ml={'4px'}>\n                    {token0 && token1\n                      ? `1 ${formattedSymbol1} = ${token1Rate} ${formattedSymbol0}  ${parseFloat(token1?.derivedETH) ? '(' + token1USD + ')' : ''\n                      }`\n                      : '-'}\n                  </TYPE.main>\n                </RowFixed>\n              </FixedPanel>\n            </AutoRow>\n            <>\n              {!below1080 && (\n                <RowFixed>\n                  <TYPE.main fontSize={'1.125rem'} mr=\"6px\">\n                    Pair Stats\n                  </TYPE.main>\n                  {showUSDWaning ? (\n                    <HoverText text={UNTRACKED_COPY}>\n                      <WarningIcon />\n                    </HoverText>\n                  ) : null}\n                </RowFixed>\n              )}\n              <PanelWrapper style={{ marginTop: '1.5rem' }}>\n                <Panel style={{ height: '100%' }}>\n                  <AutoColumn gap=\"20px\">\n                    <RowBetween>\n                      <TYPE.main>Total Liquidity </TYPE.main>\n                      <div />\n                    </RowBetween>\n                    <RowBetween align=\"flex-end\">\n                      <TYPE.main fontSize={'1.5rem'} lineHeight={1} fontWeight={500}>\n                        {formattedLiquidity}\n                      </TYPE.main>\n                      <TYPE.main>{liquidityChange}</TYPE.main>\n                    </RowBetween>\n                  </AutoColumn>\n                </Panel>\n                <Panel style={{ height: '100%' }}>\n                  <AutoColumn gap=\"20px\">\n                    <RowBetween>\n                      <TYPE.main>Volume (24hrs) </TYPE.main>\n                      <div />\n                    </RowBetween>\n                    <RowBetween align=\"flex-end\">\n                      <TYPE.main fontSize={'1.5rem'} lineHeight={1} fontWeight={500}>\n                        {volume}\n                      </TYPE.main>\n                      <TYPE.main>{volumeChange}</TYPE.main>\n                    </RowBetween>\n                  </AutoColumn>\n                </Panel>\n                <Panel style={{ height: '100%' }}>\n                  <AutoColumn gap=\"20px\">\n                    <RowBetween>\n                      <TYPE.main>Fees (24hrs)</TYPE.main>\n                      <div />\n                    </RowBetween>\n                    <RowBetween align=\"flex-end\">\n                      <TYPE.main fontSize={'1.5rem'} lineHeight={1} fontWeight={500}>\n                        {fees}\n                      </TYPE.main>\n                      <TYPE.main>{volumeChange}</TYPE.main>\n                    </RowBetween>\n                  </AutoColumn>\n                </Panel>\n                <Panel style={{ height: '100%' }}>\n                  <AutoColumn gap=\"20px\">\n                    <RowBetween>\n                      <TYPE.main>Pooled Tokens</TYPE.main>\n                      <div />\n                    </RowBetween>\n                    <Hover onClick={() => history.push(`/token/${token0?.id}`)} fade={true}>\n                      <AutoRow gap=\"4px\">\n                        <TokenLogo address={token0?.id} />\n                        <TYPE.main fontSize={20} lineHeight={1} fontWeight={500}>\n                          <RowFixed>\n                            {reserve0 ? formattedNum(reserve0) : ''}{' '}\n                            <FormattedName text={token0?.symbol ?? ''} maxCharacters={8} margin={true} />\n                          </RowFixed>\n                        </TYPE.main>\n                      </AutoRow>\n                    </Hover>\n                    <Hover onClick={() => history.push(`/token/${token1?.id}`)} fade={true}>\n                      <AutoRow gap=\"4px\">\n                        <TokenLogo address={token1?.id} />\n                        <TYPE.main fontSize={20} lineHeight={1} fontWeight={500}>\n                          <RowFixed>\n                            {reserve1 ? formattedNum(reserve1) : ''}{' '}\n                            <FormattedName text={token1?.symbol ?? ''} maxCharacters={8} margin={true} />\n                          </RowFixed>\n                        </TYPE.main>\n                      </AutoRow>\n                    </Hover>\n                  </AutoColumn>\n                </Panel>\n                <Panel\n                  style={{\n                    gridColumn: below1080 ? '1' : '2/4',\n                    gridRow: below1080 ? '' : '1/5',\n                  }}\n                >\n                  <PairChart\n                    address={pairAddress}\n                    color={backgroundColor}\n                    base0={reserve1 / reserve0}\n                    base1={reserve0 / reserve1}\n                  />\n                </Panel>\n              </PanelWrapper>\n              <TYPE.main fontSize={'1.125rem'} style={{ marginTop: '3rem' }}>\n                Transactions\n              </TYPE.main>{' '}\n              <Panel\n                style={{\n                  marginTop: '1.5rem',\n                }}\n              >\n                {transactions ? <TxnList transactions={transactions} /> : <Loader />}\n              </Panel>\n              <RowBetween style={{ marginTop: '3rem' }}>\n                <TYPE.main fontSize={'1.125rem'}>Pair Information</TYPE.main>{' '}\n              </RowBetween>\n              <Panel\n                rounded\n                style={{\n                  marginTop: '1.5rem',\n                }}\n                p={20}\n              >\n                <TokenDetailsLayout>\n                  <Column>\n                    <TYPE.main>Pair Name</TYPE.main>\n                    <TYPE.main style={{ marginTop: '.5rem' }}>\n                      <RowFixed>\n                        <FormattedName text={token0?.symbol ?? ''} maxCharacters={8} />\n                        -\n                        <FormattedName text={token1?.symbol ?? ''} maxCharacters={8} />\n                      </RowFixed>\n                    </TYPE.main>\n                  </Column>\n                  <Column>\n                    <TYPE.main>Pair Address</TYPE.main>\n                    <AutoRow align=\"flex-end\">\n                      <TYPE.main style={{ marginTop: '.5rem' }}>\n                        {pairAddress.slice(0, 6) + '...' + pairAddress.slice(38, 42)}\n                      </TYPE.main>\n                      <CopyHelper toCopy={pairAddress} />\n                    </AutoRow>\n                  </Column>\n                  <Column>\n                    <TYPE.main>\n                      <RowFixed>\n                        <FormattedName text={token0?.symbol ?? ''} maxCharacters={8} />{' '}\n                        <span style={{ marginLeft: '4px' }}>Address</span>\n                      </RowFixed>\n                    </TYPE.main>\n                    <AutoRow align=\"flex-end\">\n                      <TYPE.main style={{ marginTop: '.5rem' }}>\n                        {token0 && token0.id.slice(0, 6) + '...' + token0.id.slice(38, 42)}\n                      </TYPE.main>\n                      <CopyHelper toCopy={token0?.id} />\n                    </AutoRow>\n                  </Column>\n                  <Column>\n                    <TYPE.main>\n                      <RowFixed>\n                        <FormattedName text={token1?.symbol ?? ''} maxCharacters={8} />{' '}\n                        <span style={{ marginLeft: '4px' }}>Address</span>\n                      </RowFixed>\n                    </TYPE.main>\n                    <AutoRow align=\"flex-end\">\n                      <TYPE.main style={{ marginTop: '.5rem' }} fontSize={16}>\n                        {token1 && token1.id.slice(0, 6) + '...' + token1.id.slice(38, 42)}\n                      </TYPE.main>\n                      <CopyHelper toCopy={token1?.id} />\n                    </AutoRow>\n                  </Column>\n                  <ButtonLight color={backgroundColor}>\n                    <Link color={backgroundColor} external href={'https://ubiqscan.io/address/' + pairAddress}>\n                      View on Ubiqscan ↗\n                    </Link>\n                  </ButtonLight>\n                </TokenDetailsLayout>\n              </Panel>\n            </>\n          </DashboardWrapper>\n        </WarningGrouping>\n      </ContentWrapperLarge>\n    </PageWrapper>\n  )\n}\n\nexport default withRouter(PairPage)\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Area, XAxis, YAxis, ResponsiveContainer, Tooltip, AreaChart } from 'recharts'\nimport { AutoRow, RowBetween } from '../Row'\nimport { toK, toNiceDate, toNiceDateYear, formattedNum, getTimeframe } from '../../utils'\nimport { OptionButton } from '../ButtonStyled'\nimport { darken } from 'polished'\nimport { useMedia } from 'react-use'\nimport { timeframeOptions } from '../../constants'\nimport DropdownSelect from '../DropdownSelect'\nimport { useUserLiquidityChart } from '../../contexts/User'\nimport LocalLoader from '../LocalLoader'\nimport { useDarkModeManager } from '../../contexts/LocalStorage'\nimport { TYPE, globalPrimary } from '../../Theme'\n\nconst ChartWrapper = styled.div`\n  height: 100%;\n  max-height: 390px;\n\n  @media screen and (max-width: 600px) {\n    min-height: 200px;\n  }\n`\n\nconst UserChart = ({ account }) => {\n  const chartData = useUserLiquidityChart(account)\n\n  const [timeWindow, setTimeWindow] = useState(timeframeOptions.ALL_TIME)\n  let utcStartTime = getTimeframe(timeWindow)\n\n  const below600 = useMedia('(max-width: 600px)')\n  const above1600 = useMedia('(min-width: 1600px)')\n\n  const domain = [(dataMin) => (dataMin > utcStartTime ? dataMin : utcStartTime), 'dataMax']\n\n  const aspect = above1600 ? 60 / 12 : below600 ? 60 / 42 : 60 / 16\n\n  const [darkMode] = useDarkModeManager()\n  const textColor = darkMode ? 'white' : 'black'\n\n  return (\n    <ChartWrapper>\n      {below600 ? (\n        <RowBetween mb={40}>\n          <div />\n          <DropdownSelect options={timeframeOptions} active={timeWindow} setActive={setTimeWindow} color={globalPrimary} />\n        </RowBetween>\n      ) : (\n        <RowBetween mb={40}>\n          <AutoRow gap=\"10px\">\n            <TYPE.main>Liquidity Value</TYPE.main>\n          </AutoRow>\n          <AutoRow justify=\"flex-end\" gap=\"4px\">\n            <OptionButton\n              active={timeWindow === timeframeOptions.MONTH}\n              onClick={() => setTimeWindow(timeframeOptions.MONTH)}\n            >\n              1M\n            </OptionButton>\n            <OptionButton\n              active={timeWindow === timeframeOptions.WEEK}\n              onClick={() => setTimeWindow(timeframeOptions.WEEK)}\n            >\n              1W\n            </OptionButton>\n            <OptionButton\n              active={timeWindow === timeframeOptions.ALL_TIME}\n              onClick={() => setTimeWindow(timeframeOptions.ALL_TIME)}\n            >\n              All\n            </OptionButton>\n          </AutoRow>\n        </RowBetween>\n      )}\n      {chartData ? (\n        <ResponsiveContainer aspect={aspect} style={{ height: 'inherit' }}>\n          <AreaChart margin={{ top: 0, right: 10, bottom: 6, left: 0 }} barCategoryGap={1} data={chartData}>\n            <defs>\n              <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                <stop offset=\"5%\" stopColor={globalPrimary} stopOpacity={0.35} />\n                <stop offset=\"95%\" stopColor={globalPrimary} stopOpacity={0} />\n              </linearGradient>\n            </defs>\n            <XAxis\n              tickLine={false}\n              axisLine={false}\n              interval=\"preserveEnd\"\n              tickMargin={16}\n              minTickGap={0}\n              tickFormatter={(tick) => toNiceDate(tick)}\n              dataKey=\"date\"\n              tick={{ fill: textColor }}\n              type={'number'}\n              domain={domain}\n            />\n            <YAxis\n              type=\"number\"\n              orientation=\"right\"\n              tickFormatter={(tick) => '$' + toK(tick)}\n              axisLine={false}\n              tickLine={false}\n              interval=\"preserveEnd\"\n              minTickGap={6}\n              yAxisId={0}\n              tick={{ fill: textColor }}\n            />\n            <Tooltip\n              cursor={true}\n              formatter={(val) => formattedNum(val, true)}\n              labelFormatter={(label) => toNiceDateYear(label)}\n              labelStyle={{ paddingTop: 4 }}\n              contentStyle={{\n                padding: '10px 14px',\n                borderRadius: 10,\n                borderColor: globalPrimary,\n                color: 'black',\n              }}\n              wrapperStyle={{ top: -70, left: -10 }}\n            />\n            <Area\n              key={'other'}\n              dataKey={'valueUSD'}\n              stackId=\"2\"\n              strokeWidth={2}\n              dot={false}\n              type=\"monotone\"\n              name={'Liquidity'}\n              yAxisId={0}\n              stroke={darken(0.12, globalPrimary)}\n              fill=\"url(#colorUv)\"\n            />\n          </AreaChart>\n        </ResponsiveContainer>\n      ) : (\n        <LocalLoader />\n      )}\n    </ChartWrapper>\n  )\n}\n\nexport default UserChart\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { XAxis, YAxis, ResponsiveContainer, Tooltip, LineChart, Line, CartesianGrid } from 'recharts'\nimport { AutoRow, RowBetween } from '../Row'\n\nimport { toK, toNiceDate, toNiceDateYear, formattedNum, getTimeframe } from '../../utils'\nimport { OptionButton } from '../ButtonStyled'\nimport { useMedia } from 'react-use'\nimport { timeframeOptions } from '../../constants'\nimport DropdownSelect from '../DropdownSelect'\nimport { useUserPositionChart } from '../../contexts/User'\nimport { useTimeframe } from '../../contexts/Application'\nimport LocalLoader from '../LocalLoader'\nimport { useColor } from '../../hooks'\nimport { useDarkModeManager } from '../../contexts/LocalStorage'\n\nconst ChartWrapper = styled.div`\n  max-height: 420px;\n\n  @media screen and (max-width: 600px) {\n    min-height: 200px;\n  }\n`\n\nconst OptionsRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  margin-bottom: 40px;\n`\n\nconst CHART_VIEW = {\n  VALUE: 'Value',\n  FEES: 'Fees',\n}\n\nconst PairReturnsChart = ({ account, position }) => {\n  let data = useUserPositionChart(position, account)\n\n  const [timeWindow, setTimeWindow] = useTimeframe()\n\n  const below600 = useMedia('(max-width: 600px)')\n\n  const color = useColor(position?.pair.token0.id)\n\n  const [chartView, setChartView] = useState(CHART_VIEW.VALUE)\n\n  // based on window, get starttime\n  let utcStartTime = getTimeframe(timeWindow)\n  data = data?.filter((entry) => entry.date >= utcStartTime)\n\n  const aspect = below600 ? 60 / 42 : 60 / 16\n\n  const [darkMode] = useDarkModeManager()\n  const textColor = darkMode ? 'white' : 'black'\n\n  return (\n    <ChartWrapper>\n      {below600 ? (\n        <RowBetween mb={40}>\n          <div />\n          <DropdownSelect options={timeframeOptions} active={timeWindow} setActive={setTimeWindow} />\n        </RowBetween>\n      ) : (\n        <OptionsRow>\n          <AutoRow gap=\"6px\" style={{ flexWrap: 'nowrap' }}>\n            <OptionButton active={chartView === CHART_VIEW.VALUE} onClick={() => setChartView(CHART_VIEW.VALUE)}>\n              Liquidity\n            </OptionButton>\n            <OptionButton active={chartView === CHART_VIEW.FEES} onClick={() => setChartView(CHART_VIEW.FEES)}>\n              Fees\n            </OptionButton>\n          </AutoRow>\n          <AutoRow justify=\"flex-end\" gap=\"6px\">\n            <OptionButton\n              active={timeWindow === timeframeOptions.WEEK}\n              onClick={() => setTimeWindow(timeframeOptions.WEEK)}\n            >\n              1W\n            </OptionButton>\n            <OptionButton\n              active={timeWindow === timeframeOptions.MONTH}\n              onClick={() => setTimeWindow(timeframeOptions.MONTH)}\n            >\n              1M\n            </OptionButton>\n            <OptionButton\n              active={timeWindow === timeframeOptions.ALL_TIME}\n              onClick={() => setTimeWindow(timeframeOptions.ALL_TIME)}\n            >\n              All\n            </OptionButton>\n          </AutoRow>\n        </OptionsRow>\n      )}\n      <ResponsiveContainer aspect={aspect}>\n        {data ? (\n          <LineChart margin={{ top: 0, right: 0, bottom: 0, left: 0 }} barCategoryGap={1} data={data}>\n            <defs>\n              <linearGradient id=\"colorUv\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                <stop offset=\"5%\" stopColor={color} stopOpacity={0.35} />\n                <stop offset=\"95%\" stopColor={color} stopOpacity={0} />\n              </linearGradient>\n            </defs>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis\n              tickLine={false}\n              axisLine={false}\n              interval=\"preserveEnd\"\n              tickMargin={14}\n              tickFormatter={(tick) => toNiceDate(tick)}\n              dataKey=\"date\"\n              tick={{ fill: textColor }}\n              type={'number'}\n              domain={['dataMin', 'dataMax']}\n            />\n            <YAxis\n              type=\"number\"\n              orientation=\"right\"\n              tickFormatter={(tick) => '$' + toK(tick)}\n              axisLine={false}\n              tickLine={false}\n              interval=\"preserveStartEnd\"\n              minTickGap={0}\n              yAxisId={0}\n              tick={{ fill: textColor }}\n            />\n            <Tooltip\n              cursor={true}\n              formatter={(val) => formattedNum(val, true)}\n              labelFormatter={(label) => toNiceDateYear(label)}\n              labelStyle={{ paddingTop: 4 }}\n              contentStyle={{\n                padding: '10px 14px',\n                borderRadius: 10,\n                borderColor: color,\n                color: 'black',\n              }}\n              wrapperStyle={{ top: -70, left: -10 }}\n            />\n\n            <Line\n              type=\"monotone\"\n              dataKey={chartView === CHART_VIEW.VALUE ? 'usdValue' : 'fees'}\n              stroke={color}\n              yAxisId={0}\n              name={chartView === CHART_VIEW.VALUE ? 'Liquidity' : 'Fees Earned (Cumulative)'}\n            />\n          </LineChart>\n        ) : (\n          <LocalLoader />\n        )}\n      </ResponsiveContainer>\n    </ChartWrapper>\n  )\n}\n\nexport default PairReturnsChart\n","import React, { useState, useEffect } from 'react'\nimport { useMedia } from 'react-use'\nimport dayjs from 'dayjs'\nimport LocalLoader from '../LocalLoader'\nimport utc from 'dayjs/plugin/utc'\nimport { Box, Flex, Text } from 'rebass'\nimport styled from 'styled-components'\nimport Link, { CustomLink } from '../Link'\nimport { Divider } from '../../components'\nimport DoubleTokenLogo from '../DoubleLogo'\nimport { withRouter } from 'react-router-dom'\nimport { formattedNum, getPoolLink } from '../../utils'\nimport { AutoColumn } from '../Column'\nimport { useEthPrice } from '../../contexts/GlobalData'\nimport { RowFixed } from '../Row'\nimport { ButtonLight } from '../ButtonStyled'\nimport { TYPE } from '../../Theme'\nimport FormattedName from '../FormattedName'\n\ndayjs.extend(utc)\n\nconst PageButtons = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  margin-top: 2em;\n  margin-bottom: 0.5em;\n`\n\nconst Arrow = styled.div`\n  color: ${({ theme }) => theme.primary1};\n  opacity: ${(props) => (props.faded ? 0.3 : 1)};\n  padding: 0 20px;\n  user-select: none;\n  :hover {\n    cursor: pointer;\n  }\n`\n\nconst List = styled(Box)`\n  -webkit-overflow-scrolling: touch;\n`\n\nconst DashGrid = styled.div`\n  display: grid;\n  grid-gap: 1em;\n  grid-template-columns: 5px 0.5fr 1fr 1fr;\n  grid-template-areas: 'number name uniswap return';\n  align-items: flex-start;\n  padding: 20px 0;\n\n  > * {\n    justify-content: flex-end;\n    width: 100%;\n\n    :first-child {\n      justify-content: flex-start;\n      text-align: left;\n      width: 20px;\n    }\n  }\n\n  @media screen and (min-width: 1200px) {\n    grid-template-columns: 35px 2.5fr 1fr 1fr;\n    grid-template-areas: 'number name uniswap return';\n  }\n\n  @media screen and (max-width: 740px) {\n    grid-template-columns: 2.5fr 1fr 1fr;\n    grid-template-areas: 'name uniswap return';\n  }\n\n  @media screen and (max-width: 500px) {\n    grid-template-columns: 2.5fr 1fr;\n    grid-template-areas: 'name uniswap';\n  }\n`\n\nconst ListWrapper = styled.div``\n\nconst ClickableText = styled(Text)`\n  color: ${({ theme }) => theme.text1};\n  &:hover {\n    cursor: pointer;\n    opacity: 0.6;\n  }\n\n  text-align: end;\n  user-select: none;\n`\n\nconst DataText = styled(Flex)`\n  align-items: center;\n  text-align: center;\n  color: ${({ theme }) => theme.text1};\n  & > * {\n    font-size: 1em;\n  }\n\n  @media screen and (max-width: 600px) {\n    font-size: 13px;\n  }\n`\n\nconst SORT_FIELD = {\n  VALUE: 'VALUE',\n  UNISWAP_RETURN: 'UNISWAP_RETURN',\n}\n\nfunction PositionList({ positions }) {\n  const below500 = useMedia('(max-width: 500px)')\n  const below740 = useMedia('(max-width: 740px)')\n\n  // pagination\n  const [page, setPage] = useState(1)\n  const [maxPage, setMaxPage] = useState(1)\n  const ITEMS_PER_PAGE = 10\n\n  // sorting\n  const [sortDirection, setSortDirection] = useState(true)\n  const [sortedColumn, setSortedColumn] = useState(SORT_FIELD.VALUE)\n\n  useEffect(() => {\n    setMaxPage(1) // edit this to do modular\n    setPage(1)\n  }, [positions])\n\n  useEffect(() => {\n    if (positions) {\n      let extraPages = 1\n      if (positions.length % ITEMS_PER_PAGE === 0) {\n        extraPages = 0\n      }\n      setMaxPage(Math.floor(positions.length / ITEMS_PER_PAGE) + extraPages || 1)\n    }\n  }, [positions])\n\n  const [ethPrice] = useEthPrice()\n\n  const ListItem = ({ position, index }) => {\n    const poolOwnership = position.liquidityTokenBalance / position.pair.totalSupply\n    const valueUSD = poolOwnership * position.pair.reserveUSD\n\n    return (\n      <DashGrid style={{ opacity: poolOwnership > 0 ? 1 : 0.6 }} focus={true}>\n        {!below740 && <DataText area=\"number\">{index}</DataText>}\n        <DataText area=\"name\" justifyContent=\"flex-start\" alignItems=\"flex-start\">\n          <AutoColumn gap=\"8px\" justify=\"flex-start\" align=\"flex-start\">\n            <DoubleTokenLogo size={16} a0={position.pair.token0.id} a1={position.pair.token1.id} margin={!below740} />\n          </AutoColumn>\n          <AutoColumn gap=\"8px\" justify=\"flex-start\" style={{ marginLeft: '20px' }}>\n            <CustomLink to={'/pair/' + position.pair.id}>\n              <TYPE.main style={{ whiteSpace: 'nowrap' }} to={'/pair/'}>\n                <FormattedName\n                  text={position.pair.token0.symbol + '-' + position.pair.token1.symbol}\n                  maxCharacters={below740 ? 10 : 18}\n                />\n              </TYPE.main>\n            </CustomLink>\n\n            <RowFixed gap=\"8px\" justify=\"flex-start\">\n              <Link\n                external\n                href={getPoolLink(position.pair.token0.id, position.pair.token1.id)}\n                style={{ marginRight: '.5rem' }}\n              >\n                <ButtonLight style={{ padding: '4px 6px', borderRadius: '4px' }}>Add</ButtonLight>\n              </Link>\n              {poolOwnership > 0 && (\n                <Link external href={getPoolLink(position.pair.token0.id, position.pair.token1.id, true)}>\n                  <ButtonLight style={{ padding: '4px 6px', borderRadius: '4px' }}>Remove</ButtonLight>\n                </Link>\n              )}\n            </RowFixed>\n          </AutoColumn>\n        </DataText>\n        <DataText area=\"uniswap\">\n          <AutoColumn gap=\"12px\" justify=\"flex-end\">\n            <TYPE.main>{formattedNum(valueUSD, true, true)}</TYPE.main>\n            <AutoColumn gap=\"4px\" justify=\"flex-end\">\n              <RowFixed>\n                <TYPE.small fontWeight={400}>\n                  {formattedNum(poolOwnership * parseFloat(position.pair.reserve0))}{' '}\n                </TYPE.small>\n                <FormattedName\n                  text={position.pair.token0.symbol}\n                  maxCharacters={below740 ? 10 : 18}\n                  margin={true}\n                  fontSize={'11px'}\n                />\n              </RowFixed>\n              <RowFixed>\n                <TYPE.small fontWeight={400}>\n                  {formattedNum(poolOwnership * parseFloat(position.pair.reserve1))}{' '}\n                </TYPE.small>\n                <FormattedName\n                  text={position.pair.token1.symbol}\n                  maxCharacters={below740 ? 10 : 18}\n                  margin={true}\n                  fontSize={'11px'}\n                />\n              </RowFixed>\n            </AutoColumn>\n          </AutoColumn>\n        </DataText>\n        {!below500 && (\n          <DataText area=\"return\">\n            <AutoColumn gap=\"12px\" justify=\"flex-end\">\n              <TYPE.main color={'green'}>\n                <RowFixed>{formattedNum(position?.fees.sum, true, true)}</RowFixed>\n              </TYPE.main>\n              <AutoColumn gap=\"4px\" justify=\"flex-end\">\n                <RowFixed>\n                  <TYPE.small fontWeight={400}>\n                    {parseFloat(position.pair.token0.derivedETH)\n                      ? formattedNum(\n                          position?.fees.sum / (parseFloat(position.pair.token0.derivedETH) * ethPrice) / 2,\n                          false,\n                          true\n                        )\n                      : 0}{' '}\n                  </TYPE.small>\n                  <FormattedName\n                    text={position.pair.token0.symbol}\n                    maxCharacters={below740 ? 10 : 18}\n                    margin={true}\n                    fontSize={'11px'}\n                  />\n                </RowFixed>\n                <RowFixed>\n                  <TYPE.small fontWeight={400}>\n                    {parseFloat(position.pair.token1.derivedETH)\n                      ? formattedNum(\n                          position?.fees.sum / (parseFloat(position.pair.token1.derivedETH) * ethPrice) / 2,\n                          false,\n                          true\n                        )\n                      : 0}{' '}\n                  </TYPE.small>\n                  <FormattedName\n                    text={position.pair.token1.symbol}\n                    maxCharacters={below740 ? 10 : 18}\n                    margin={true}\n                    fontSize={'11px'}\n                  />\n                </RowFixed>\n              </AutoColumn>\n            </AutoColumn>\n          </DataText>\n        )}\n      </DashGrid>\n    )\n  }\n\n  const positionsSorted =\n    positions &&\n    positions\n\n      .sort((p0, p1) => {\n        if (sortedColumn === SORT_FIELD.PRINCIPAL) {\n          return p0?.principal?.usd > p1?.principal?.usd ? (sortDirection ? -1 : 1) : sortDirection ? 1 : -1\n        }\n        if (sortedColumn === SORT_FIELD.HODL) {\n          return p0?.hodl?.sum > p1?.hodl?.sum ? (sortDirection ? -1 : 1) : sortDirection ? 1 : -1\n        }\n        if (sortedColumn === SORT_FIELD.UNISWAP_RETURN) {\n          return p0?.uniswap?.return > p1?.uniswap?.return ? (sortDirection ? -1 : 1) : sortDirection ? 1 : -1\n        }\n        if (sortedColumn === SORT_FIELD.VALUE) {\n          const bal0 = (p0.liquidityTokenBalance / p0.pair.totalSupply) * p0.pair.reserveUSD\n          const bal1 = (p1.liquidityTokenBalance / p1.pair.totalSupply) * p1.pair.reserveUSD\n          return bal0 > bal1 ? (sortDirection ? -1 : 1) : sortDirection ? 1 : -1\n        }\n        return 1\n      })\n      .slice(ITEMS_PER_PAGE * (page - 1), page * ITEMS_PER_PAGE)\n      .map((position, index) => {\n        return (\n          <div key={index}>\n            <ListItem key={index} index={(page - 1) * 10 + index + 1} position={position} />\n            <Divider />\n          </div>\n        )\n      })\n\n  return (\n    <ListWrapper>\n      <DashGrid center={true} style={{ height: '32px', padding: 0 }}>\n        {!below740 && (\n          <Flex alignItems=\"flex-start\" justifyContent=\"flexStart\">\n            <TYPE.main area=\"number\">#</TYPE.main>\n          </Flex>\n        )}\n        <Flex alignItems=\"flex-start\" justifyContent=\"flex-start\">\n          <TYPE.main area=\"number\">Name</TYPE.main>\n        </Flex>\n        <Flex alignItems=\"center\" justifyContent=\"flexEnd\">\n          <ClickableText\n            area=\"uniswap\"\n            onClick={(e) => {\n              setSortedColumn(SORT_FIELD.VALUE)\n              setSortDirection(sortedColumn !== SORT_FIELD.VALUE ? true : !sortDirection)\n            }}\n          >\n            {below740 ? 'Value' : 'Liquidity'} {sortedColumn === SORT_FIELD.VALUE ? (!sortDirection ? '↑' : '↓') : ''}\n          </ClickableText>\n        </Flex>\n        {!below500 && (\n          <Flex alignItems=\"center\" justifyContent=\"flexEnd\">\n            <ClickableText\n              area=\"return\"\n              onClick={() => {\n                setSortedColumn(SORT_FIELD.UNISWAP_RETURN)\n                setSortDirection(sortedColumn !== SORT_FIELD.UNISWAP_RETURN ? true : !sortDirection)\n              }}\n            >\n              {below740 ? 'Fees' : 'Total Fees Earned'}{' '}\n              {sortedColumn === SORT_FIELD.UNISWAP_RETURN ? (!sortDirection ? '↑' : '↓') : ''}\n            </ClickableText>\n          </Flex>\n        )}\n      </DashGrid>\n      <Divider />\n      <List p={0}>{!positionsSorted ? <LocalLoader /> : positionsSorted}</List>\n      <PageButtons>\n        <div onClick={() => setPage(page === 1 ? page : page - 1)}>\n          <Arrow faded={page === 1 ? true : false}>←</Arrow>\n        </div>\n        <TYPE.body>{'Page ' + page + ' of ' + maxPage}</TYPE.body>\n        <div onClick={() => setPage(page === maxPage ? page : page + 1)}>\n          <Arrow faded={page === maxPage ? true : false}>→</Arrow>\n        </div>\n      </PageButtons>\n    </ListWrapper>\n  )\n}\n\nexport default withRouter(PositionList)\n","import React, { useState, useMemo, useEffect, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { useUserTransactions, useUserPositions } from '../contexts/User'\nimport TxnList from '../components/TxnList'\nimport Panel from '../components/Panel'\nimport { formattedNum } from '../utils'\nimport Row, { AutoRow, RowFixed, RowBetween } from '../components/Row'\nimport { AutoColumn } from '../components/Column'\nimport UserChart from '../components/UserChart'\nimport PairReturnsChart from '../components/PairReturnsChart'\nimport PositionList from '../components/PositionList'\nimport { TYPE } from '../Theme'\nimport { ButtonDropdown } from '../components/ButtonStyled'\nimport { PageWrapper, ContentWrapper, StyledIcon } from '../components'\nimport DoubleTokenLogo from '../components/DoubleLogo'\nimport { Bookmark, Activity } from 'react-feather'\nimport Link from '../components/Link'\nimport { FEE_WARNING_TOKENS } from '../constants'\nimport { BasicLink } from '../components/Link'\nimport { useMedia } from 'react-use'\nimport Search from '../components/Search'\nimport { useSavedAccounts } from '../contexts/LocalStorage'\n\nconst AccountWrapper = styled.div`\n  background-color: rgba(255, 255, 255, 0.2);\n  padding: 6px 16px;\n  border-radius: 100px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nconst Header = styled.div``\n\nconst DashboardWrapper = styled.div`\n  width: 100%;\n`\n\nconst DropdownWrapper = styled.div`\n  position: relative;\n  margin-bottom: 1rem;\n  border: 1px solid #edeef2;\n  border-radius: 12px;\n`\n\nconst Flyout = styled.div`\n  position: absolute;\n  top: 38px;\n  left: -1px;\n  width: 100%;\n  background-color: ${({ theme }) => theme.bg1};\n  z-index: 999;\n  border-bottom-right-radius: 10px;\n  border-bottom-left-radius: 10px;\n  padding-top: 4px;\n  border: 1px solid #edeef2;\n  border-top: none;\n`\n\nconst MenuRow = styled(Row)`\n  width: 100%;\n  padding: 12px 0;\n  padding-left: 12px;\n\n  :hover {\n    cursor: pointer;\n    background-color: ${({ theme }) => theme.bg2};\n  }\n`\n\nconst PanelWrapper = styled.div`\n  grid-template-columns: 1fr;\n  grid-template-rows: max-content;\n  gap: 6px;\n  display: inline-grid;\n  width: 100%;\n  align-items: start;\n`\n\nconst Warning = styled.div`\n  background-color: ${({ theme }) => theme.bg2};\n  color: ${({ theme }) => theme.text1};\n  padding: 1rem;\n  font-weight: 600;\n  border-radius: 10px;\n  margin-bottom: 1rem;\n  width: calc(100% - 2rem);\n`\n\nfunction AccountPage({ account }) {\n  // get data for this account\n  const transactions = useUserTransactions(account)\n  const positions = useUserPositions(account)\n  // const miningPositions = useMiningPositions(account)\n\n  // get data for user stats\n  const transactionCount = transactions?.swaps?.length + transactions?.burns?.length + transactions?.mints?.length\n\n  // get derived totals\n  let totalSwappedUSD = useMemo(() => {\n    return transactions?.swaps\n      ? transactions?.swaps.reduce((total, swap) => {\n        return total + parseFloat(swap.amountUSD)\n      }, 0)\n      : 0\n  }, [transactions])\n\n  // if any position has token from fee warning list, show warning\n  const [showWarning, setShowWarning] = useState(false)\n  useEffect(() => {\n    if (positions) {\n      for (let i = 0; i < positions.length; i++) {\n        if (\n          FEE_WARNING_TOKENS.includes(positions[i].pair.token0.id) ||\n          FEE_WARNING_TOKENS.includes(positions[i].pair.token1.id)\n        ) {\n          setShowWarning(true)\n        }\n      }\n    }\n  }, [positions])\n\n  // settings for list view and dropdowns\n  const hideLPContent = positions && positions.length === 0\n  const [showDropdown, setShowDropdown] = useState(false)\n  const [activePosition, setActivePosition] = useState()\n\n  const dynamicPositions = activePosition ? [activePosition] : positions\n\n  const aggregateFees = dynamicPositions?.reduce(function (total, position) {\n    return total + position.fees.sum\n  }, 0)\n\n  const positionValue = useMemo(() => {\n    return dynamicPositions\n      ? dynamicPositions.reduce((total, position) => {\n        return (\n          total +\n          (parseFloat(position?.liquidityTokenBalance) / parseFloat(position?.pair?.totalSupply)) *\n          position?.pair?.reserveUSD\n        )\n      }, 0)\n      : null\n  }, [dynamicPositions])\n\n  useEffect(() => {\n    window.scrollTo({\n      behavior: 'smooth',\n      top: 0,\n    })\n  }, [])\n\n  const below600 = useMedia('(max-width: 600px)')\n\n  // adding/removing account from saved accounts\n  const [savedAccounts, addAccount, removeAccount] = useSavedAccounts()\n  const isBookmarked = savedAccounts.includes(account)\n  const handleBookmarkClick = useCallback(() => {\n    ; (isBookmarked ? removeAccount : addAccount)(account)\n  }, [account, isBookmarked, addAccount, removeAccount])\n\n  return (\n    <PageWrapper>\n      <ContentWrapper>\n        <RowBetween>\n          <TYPE.body>\n            <BasicLink to=\"/accounts\">{'Accounts '}</BasicLink>→{' '}\n            <Link lineHeight={'145.23%'} href={'https://ubiqscan.io/address/' + account} target=\"_blank\">\n              {' '}\n              {account?.slice(0, 42)}{' '}\n            </Link>\n          </TYPE.body>\n          {!below600 && <Search small={true} />}\n        </RowBetween>\n        <Header>\n          <RowBetween>\n            <span>\n              <TYPE.header fontSize={24}>{account?.slice(0, 6) + '...' + account?.slice(38, 42)}</TYPE.header>\n              <Link lineHeight={'145.23%'} href={'https://ubiqscan.io/address/' + account} target=\"_blank\">\n                <TYPE.main fontSize={14} color={'green1'}>View on Ubiqscan ↗</TYPE.main>\n              </Link>\n            </span>\n            <AccountWrapper>\n              <StyledIcon>\n                <Bookmark\n                  onClick={handleBookmarkClick}\n                  style={{ opacity: isBookmarked ? 0.8 : 0.4, cursor: 'pointer' }}\n                />\n              </StyledIcon>\n            </AccountWrapper>\n          </RowBetween>\n        </Header>\n        <DashboardWrapper>\n          {showWarning && <Warning>Fees cannot currently be calculated for pairs that include AMPL.</Warning>}\n          {!hideLPContent && (\n            <DropdownWrapper>\n              <ButtonDropdown width=\"100%\" onClick={() => setShowDropdown(!showDropdown)} open={showDropdown}>\n                {!activePosition && (\n                  <RowFixed>\n                    <StyledIcon>\n                      <Activity size={16} />\n                    </StyledIcon>\n                    <TYPE.body ml={'10px'}>All Positions</TYPE.body>\n                  </RowFixed>\n                )}\n                {activePosition && (\n                  <RowFixed>\n                    <DoubleTokenLogo a0={activePosition.pair.token0.id} a1={activePosition.pair.token1.id} size={16} />\n                    <TYPE.body ml={'16px'}>\n                      {activePosition.pair.token0.symbol}-{activePosition.pair.token1.symbol} Position\n                    </TYPE.body>\n                  </RowFixed>\n                )}\n              </ButtonDropdown>\n              {showDropdown && (\n                <Flyout>\n                  <AutoColumn gap=\"0px\">\n                    {positions?.map((p, i) => {\n                      if (p.pair.token1.symbol === 'WUBQ') {\n                        p.pair.token1.symbol = 'UBQ'\n                      }\n                      if (p.pair.token0.symbol === 'WUBQ') {\n                        p.pair.token0.symbol = 'UBQ'\n                      }\n                      return (\n                        p.pair.id !== activePosition?.pair.id && (\n                          <MenuRow\n                            onClick={() => {\n                              setActivePosition(p)\n                              setShowDropdown(false)\n                            }}\n                            key={i}\n                          >\n                            <DoubleTokenLogo a0={p.pair.token0.id} a1={p.pair.token1.id} size={16} />\n                            <TYPE.body ml={'16px'}>\n                              {p.pair.token0.symbol}-{p.pair.token1.symbol} Position\n                            </TYPE.body>\n                          </MenuRow>\n                        )\n                      )\n                    })}\n                    {activePosition && (\n                      <MenuRow\n                        onClick={() => {\n                          setActivePosition()\n                          setShowDropdown(false)\n                        }}\n                      >\n                        <RowFixed>\n                          <StyledIcon>\n                            <Activity size={16} />\n                          </StyledIcon>\n                          <TYPE.body ml={'10px'}>All Positions</TYPE.body>\n                        </RowFixed>\n                      </MenuRow>\n                    )}\n                  </AutoColumn>\n                </Flyout>\n              )}\n            </DropdownWrapper>\n          )}\n          {!hideLPContent && (\n            <Panel style={{ height: '100%', marginBottom: '1rem' }}>\n              <AutoRow gap=\"20px\">\n                <AutoColumn gap=\"10px\">\n                  <RowBetween>\n                    <TYPE.body>Liquidity (Including Fees)</TYPE.body>\n                    <div />\n                  </RowBetween>\n                  <RowFixed align=\"flex-end\">\n                    <TYPE.header fontSize={'24px'} lineHeight={1}>\n                      {positionValue\n                        ? formattedNum(positionValue, true)\n                        : positionValue === 0\n                          ? formattedNum(0, true)\n                          : '-'}\n                    </TYPE.header>\n                  </RowFixed>\n                </AutoColumn>\n                <AutoColumn gap=\"10px\">\n                  <RowBetween>\n                    <TYPE.body>Fees Earned (Cumulative)</TYPE.body>\n                    <div />\n                  </RowBetween>\n                  <RowFixed align=\"flex-end\">\n                    <TYPE.header fontSize={'24px'} lineHeight={1} color={aggregateFees && 'green'}>\n                      {aggregateFees ? formattedNum(aggregateFees, true, true) : '-'}\n                    </TYPE.header>\n                  </RowFixed>\n                </AutoColumn>\n              </AutoRow>\n            </Panel>\n          )}\n          {!hideLPContent && (\n            <PanelWrapper>\n              <Panel style={{ gridColumn: '1' }}>\n                {activePosition ? (\n                  <PairReturnsChart account={account} position={activePosition} />\n                ) : (\n                  <UserChart account={account} position={activePosition} />\n                )}\n              </Panel>\n            </PanelWrapper>\n          )}\n          <TYPE.main fontSize={'1.125rem'} style={{ marginTop: '3rem' }}>\n            Positions\n          </TYPE.main>{' '}\n          <Panel\n            style={{\n              marginTop: '1.5rem',\n            }}\n          >\n            <PositionList positions={positions} />\n          </Panel>\n          <TYPE.main fontSize={'1.125rem'} style={{ marginTop: '3rem' }}>\n            Transactions\n          </TYPE.main>{' '}\n          <Panel\n            style={{\n              marginTop: '1.5rem',\n            }}\n          >\n            <TxnList transactions={transactions} />\n          </Panel>\n          <TYPE.main fontSize={'1.125rem'} style={{ marginTop: '3rem' }}>\n            Wallet Stats\n          </TYPE.main>{' '}\n          <Panel\n            style={{\n              marginTop: '1.5rem',\n            }}\n          >\n            <AutoRow gap=\"20px\">\n              <AutoColumn gap=\"8px\">\n                <TYPE.header fontSize={24}>{totalSwappedUSD ? formattedNum(totalSwappedUSD, true) : '-'}</TYPE.header>\n                <TYPE.main>Total Value Swapped</TYPE.main>\n              </AutoColumn>\n              <AutoColumn gap=\"8px\">\n                <TYPE.header fontSize={24}>\n                  {totalSwappedUSD ? formattedNum(totalSwappedUSD * 0.003, true) : '-'}\n                </TYPE.header>\n                <TYPE.main>Total Fees Paid</TYPE.main>\n              </AutoColumn>\n              <AutoColumn gap=\"8px\">\n                <TYPE.header fontSize={24}>{transactionCount ? transactionCount : '-'}</TYPE.header>\n                <TYPE.main>Total Transactions</TYPE.main>\n              </AutoColumn>\n            </AutoRow>\n          </Panel>\n        </DashboardWrapper>\n      </ContentWrapper>\n    </PageWrapper>\n  )\n}\n\nexport default AccountPage\n","import React, { useEffect } from 'react'\nimport 'feather-icons'\n\nimport TopTokenList from '../components/TokenList'\nimport { TYPE } from '../Theme'\nimport Panel from '../components/Panel'\nimport { useAllTokenData } from '../contexts/TokenData'\nimport { PageWrapper, FullWrapper } from '../components'\nimport { RowBetween } from '../components/Row'\nimport Search from '../components/Search'\nimport { useMedia } from 'react-use'\n\nfunction AllTokensPage() {\n  const allTokens = useAllTokenData()\n  console.log({ allTokens })\n\n  useEffect(() => {\n    window.scrollTo(0, 0)\n  }, [])\n\n  const below600 = useMedia('(max-width: 800px)')\n\n  return (\n    <PageWrapper>\n      <FullWrapper>\n        <RowBetween>\n          <TYPE.largeHeader>Top Tokens</TYPE.largeHeader>\n          {!below600 && <Search small={true} />}\n        </RowBetween>\n        <Panel style={{ marginTop: '6px', padding: below600 && '1rem 0 0 0 ' }}>\n          <TopTokenList tokens={allTokens} itemMax={50} />\n        </Panel>\n      </FullWrapper>\n    </PageWrapper>\n  )\n}\n\nexport default AllTokensPage\n","import React, { useEffect, useState } from 'react'\nimport 'feather-icons'\n\nimport { TYPE } from '../Theme'\nimport Panel from '../components/Panel'\nimport { useAllPairData } from '../contexts/PairData'\nimport PairList from '../components/PairList'\nimport { PageWrapper, FullWrapper } from '../components'\nimport { RowBetween, AutoRow } from '../components/Row'\nimport Search from '../components/Search'\nimport { useMedia } from 'react-use'\nimport QuestionHelper from '../components/QuestionHelper'\nimport CheckBox from '../components/Checkbox'\n\nfunction AllPairsPage() {\n  const allPairs = useAllPairData()\n\n  useEffect(() => {\n    window.scrollTo(0, 0)\n  }, [])\n\n  const below800 = useMedia('(max-width: 800px)')\n\n  const [useTracked, setUseTracked] = useState(true)\n\n  return (\n    <PageWrapper>\n      <FullWrapper>\n        <RowBetween>\n          <TYPE.largeHeader>Top Pairs</TYPE.largeHeader>\n          {!below800 && <Search small={true} />}\n        </RowBetween>\n        <AutoRow gap=\"4px\">\n          <CheckBox checked={useTracked} setChecked={() => setUseTracked(!useTracked)} text={'Hide untracked pairs'} />\n          <QuestionHelper text=\"Untracked USD values may be inaccurate due to low liquidity UBQ pairs.\" />\n        </AutoRow>\n        <Panel style={{ padding: below800 && '1rem 0 0 0 ' }}>\n          <PairList pairs={allPairs} disbaleLinks={true} maxItems={50} useTracked={useTracked} />\n        </Panel>\n      </FullWrapper>\n    </PageWrapper>\n  )\n}\n\nexport default AllPairsPage\n","import React, { useState } from 'react'\nimport 'feather-icons'\nimport { withRouter } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { ButtonLight, ButtonFaded } from '../ButtonStyled'\nimport { AutoRow, RowBetween } from '../Row'\nimport { isAddress } from '../../utils'\nimport { useSavedAccounts } from '../../contexts/LocalStorage'\nimport { AutoColumn } from '../Column'\nimport { TYPE } from '../../Theme'\nimport { Hover, StyledIcon } from '..'\nimport Panel from '../Panel'\nimport { Divider } from '..'\nimport { Flex } from 'rebass'\n\nimport { X } from 'react-feather'\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: flex-end;\n  width: 100%;\n  border-radius: 12px;\n`\n\nconst Input = styled.input`\n  position: relative;\n  display: flex;\n  align-items: center;\n  width: 100%;\n  white-space: nowrap;\n  background: none;\n  border: none;\n  outline: none;\n  padding: 12px 16px;\n  border-radius: 12px;\n  color: ${({ theme }) => theme.text1};\n  background-color: ${({ theme }) => theme.bg1};\n  font-size: 16px;\n  margin-right: 1rem;\n  border: 1px solid ${({ theme }) => theme.bg3};\n\n  ::placeholder {\n    color: ${({ theme }) => theme.text3};\n    font-size: 14px;\n  }\n\n  @media screen and (max-width: 640px) {\n    ::placeholder {\n      font-size: 1rem;\n    }\n  }\n`\n\nconst AccountLink = styled.span`\n  display: flex;\n  cursor: pointer;\n  color: ${({ theme }) => theme.link};\n  font-size: 14px;\n  font-weight: 500;\n`\n\nconst DashGrid = styled.div`\n  display: grid;\n  grid-gap: 1em;\n  grid-template-columns: 1fr;\n  grid-template-areas: 'account';\n  padding: 0 4px;\n\n  > * {\n    justify-content: flex-end;\n  }\n`\n\nfunction AccountSearch({ history, small }) {\n  const [accountValue, setAccountValue] = useState()\n  const [savedAccounts, addAccount, removeAccount] = useSavedAccounts()\n\n  function handleAccountSearch() {\n    if (isAddress(accountValue)) {\n      history.push('/account/' + accountValue)\n      if (!savedAccounts.includes(accountValue)) {\n        addAccount(accountValue)\n      }\n    }\n  }\n\n  return (\n    <AutoColumn gap={'1rem'}>\n      {!small && (\n        <>\n          <AutoRow>\n            <Wrapper>\n              <Input\n                placeholder=\"0x...\"\n                onChange={(e) => {\n                  setAccountValue(e.target.value)\n                }}\n              />\n            </Wrapper>\n            <ButtonLight onClick={handleAccountSearch}>Load Account Details</ButtonLight>\n          </AutoRow>\n        </>\n      )}\n\n      <AutoColumn gap={'12px'}>\n        {!small && (\n          <Panel>\n            <DashGrid center={true} style={{ height: 'fit-content', padding: '0 0 1rem 0' }}>\n              <TYPE.main area=\"account\">Saved Accounts</TYPE.main>\n            </DashGrid>\n            <Divider />\n            {savedAccounts?.length > 0 ? (\n              savedAccounts.map((account) => {\n                return (\n                  <DashGrid key={account} center={true} style={{ height: 'fit-content', padding: '1rem 0 0 0' }}>\n                    <Flex\n                      area=\"account\"\n                      justifyContent=\"space-between\"\n                      onClick={() => history.push('/account/' + account)}\n                    >\n                      <AccountLink>{account?.slice(0, 42)}</AccountLink>\n                      <Hover\n                        onClick={(e) => {\n                          e.stopPropagation()\n                          removeAccount(account)\n                        }}\n                      >\n                        <StyledIcon>\n                          <X size={16} />\n                        </StyledIcon>\n                      </Hover>\n                    </Flex>\n                  </DashGrid>\n                )\n              })\n            ) : (\n              <TYPE.light style={{ marginTop: '1rem' }}>No saved accounts</TYPE.light>\n            )}\n          </Panel>\n        )}\n\n        {small && (\n          <>\n            <TYPE.main>{'Accounts'}</TYPE.main>\n            {savedAccounts?.length > 0 ? (\n              savedAccounts.map((account) => {\n                return (\n                  <RowBetween key={account}>\n                    <ButtonFaded onClick={() => history.push('/account/' + account)}>\n                      {small ? (\n                        <TYPE.header>{account?.slice(0, 6) + '...' + account?.slice(38, 42)}</TYPE.header>\n                      ) : (\n                        <AccountLink>{account?.slice(0, 42)}</AccountLink>\n                      )}\n                    </ButtonFaded>\n                    <Hover onClick={() => removeAccount(account)}>\n                      <StyledIcon>\n                        <X size={16} />\n                      </StyledIcon>\n                    </Hover>\n                  </RowBetween>\n                )\n              })\n            ) : (\n              <TYPE.light>No pinned wallets</TYPE.light>\n            )}\n          </>\n        )}\n      </AutoColumn>\n    </AutoColumn>\n  )\n}\n\nexport default withRouter(AccountSearch)\n","import React from 'react'\nimport { withRouter } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { RowBetween, RowFixed } from '../Row'\nimport { AutoColumn } from '../Column'\nimport { TYPE } from '../../Theme'\nimport { useSavedTokens, useSavedPairs } from '../../contexts/LocalStorage'\nimport { Hover } from '..'\nimport TokenLogo from '../TokenLogo'\nimport AccountSearch from '../AccountSearch'\nimport { Bookmark, ChevronRight, X } from 'react-feather'\nimport { ButtonFaded } from '../ButtonStyled'\nimport FormattedName from '../FormattedName'\n\nconst RightColumn = styled.div`\n  position: fixed;\n  right: 0;\n  top: 0px;\n  height: 100vh;\n  width: ${({ open }) => (open ? '160px' : '23px')};\n  padding: 1.25rem;\n  border-left: ${({ theme, open }) => '1px solid' + theme.bg3};\n  background-color: ${({ theme }) => theme.bg1};\n  z-index: 9999;\n  overflow: auto;\n  :hover {\n    cursor: pointer;\n  }\n`\n\nconst SavedButton = styled(RowBetween)`\n  padding-bottom: ${({ open }) => open && '20px'};\n  border-bottom: ${({ theme, open }) => open && '1px solid' + theme.bg3};\n  margin-bottom: ${({ open }) => open && '1.25rem'};\n\n  :hover {\n    cursor: pointer;\n  }\n`\n\nconst ScrollableDiv = styled(AutoColumn)`\n  overflow: auto;\n  padding-bottom: 60px;\n`\n\nconst StyledIcon = styled.div`\n  color: ${({ theme }) => theme.text2};\n`\n\nfunction PinnedData({ history, open, setSavedOpen }) {\n  const [savedPairs, , removePair] = useSavedPairs()\n  const [savedTokens, , removeToken] = useSavedTokens()\n\n  return !open ? (\n    <RightColumn open={open} onClick={() => setSavedOpen(true)}>\n      <SavedButton open={open}>\n        <StyledIcon>\n          <Bookmark size={20} />\n        </StyledIcon>\n      </SavedButton>\n    </RightColumn>\n  ) : (\n    <RightColumn gap=\"1rem\" open={open}>\n      <SavedButton onClick={() => setSavedOpen(false)} open={open}>\n        <RowFixed>\n          <StyledIcon>\n            <Bookmark size={16} />\n          </StyledIcon>\n          <TYPE.main ml={'4px'}>Saved</TYPE.main>\n        </RowFixed>\n        <StyledIcon>\n          <ChevronRight />\n        </StyledIcon>\n      </SavedButton>\n      <AccountSearch small={true} />\n      <AutoColumn gap=\"40px\" style={{ marginTop: '2rem' }}>\n        <AutoColumn gap={'12px'}>\n          <TYPE.main>Pinned Pairs</TYPE.main>\n          {Object.keys(savedPairs).filter((key) => {\n            return !!savedPairs[key]\n          }).length > 0 ? (\n            Object.keys(savedPairs)\n              .filter((address) => {\n                return !!savedPairs[address]\n              })\n              .map((address) => {\n                const pair = savedPairs[address]\n                return (\n                  <RowBetween key={pair.address}>\n                    <ButtonFaded onClick={() => history.push('/pair/' + address)}>\n                      <RowFixed>\n                        <TYPE.header>\n                          <FormattedName\n                            text={pair.token0Symbol + '/' + pair.token1Symbol}\n                            maxCharacters={12}\n                            fontSize={'12px'}\n                          />\n                        </TYPE.header>\n                      </RowFixed>\n                    </ButtonFaded>\n                    <Hover onClick={() => removePair(pair.address)}>\n                      <StyledIcon>\n                        <X size={16} />\n                      </StyledIcon>\n                    </Hover>\n                  </RowBetween>\n                )\n              })\n          ) : (\n            <TYPE.light>Pinned pairs will appear here.</TYPE.light>\n          )}\n        </AutoColumn>\n        <ScrollableDiv gap={'12px'}>\n          <TYPE.main>Pinned Tokens</TYPE.main>\n          {Object.keys(savedTokens).filter((key) => {\n            return !!savedTokens[key]\n          }).length > 0 ? (\n            Object.keys(savedTokens)\n              .filter((address) => {\n                return !!savedTokens[address]\n              })\n              .map((address) => {\n                const token = savedTokens[address]\n                return (\n                  <RowBetween key={address}>\n                    <ButtonFaded onClick={() => history.push('/token/' + address)}>\n                      <RowFixed>\n                        <TokenLogo address={address} size={'14px'} />\n                        <TYPE.header ml={'6px'}>\n                          <FormattedName text={token.symbol} maxCharacters={12} fontSize={'12px'} />\n                        </TYPE.header>\n                      </RowFixed>\n                    </ButtonFaded>\n                    <Hover onClick={() => removeToken(address)}>\n                      <StyledIcon>\n                        <X size={16} />\n                      </StyledIcon>\n                    </Hover>\n                  </RowBetween>\n                )\n              })\n          ) : (\n            <TYPE.light>Pinned tokens will appear here.</TYPE.light>\n          )}\n        </ScrollableDiv>\n      </AutoColumn>\n    </RightColumn>\n  )\n}\n\nexport default withRouter(PinnedData)\n","import React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport styled from 'styled-components'\n\nimport { Flex } from 'rebass'\nimport { RowFixed } from '../Row'\nimport Wordmark from '../../assets/wordmark_white.svg'\n\nconst TitleWrapper = styled.div`\n  text-decoration: none;\n\n  &:hover {\n    cursor: pointer;\n  }\n\n  z-index: 10;\n`\n\nexport default function Title() {\n  const history = useHistory()\n\n  return (\n    <TitleWrapper onClick={() => history.push('/')}>\n      <Flex alignItems=\"center\">\n        <RowFixed>\n          <img width={'114px'} style={{ marginTop: '0px' }} src={Wordmark} alt=\"logo\" />\n        </RowFixed>\n      </Flex>\n    </TitleWrapper>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Sun, Moon } from 'react-feather'\n\nconst IconWrapper = styled.div<{ isActive?: boolean }>`\n  opacity: ${({ isActive }) => (isActive ? 0.8 : 0.4)};\n\n  :hover {\n    opacity: 1;\n  }\n`\n\nconst StyledToggle = styled.div`\n  display: flex;\n  width: fit-content;\n  cursor: pointer;\n  text-decoration: none;\n  margin-top: 1rem;\n  color: white;\n\n  :hover {\n    text-decoration: none;\n  }\n`\n\nexport interface ToggleProps {\n  isActive: boolean\n  toggle: () => void\n}\n\nexport default function Toggle({ isActive, toggle }: ToggleProps) {\n  return (\n    <StyledToggle onClick={toggle}>\n      <span>\n        <IconWrapper isActive={!isActive}>\n          <Sun size={20} />\n        </IconWrapper>\n      </span>\n      <span style={{ padding: '0 .5rem' }}>{' / '}</span>\n      <span>\n        <IconWrapper isActive={isActive}>\n          <Moon size={20} />\n        </IconWrapper>\n      </span>\n    </StyledToggle>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { AutoColumn } from '../Column'\nimport Title from '../Title'\nimport { BasicLink } from '../Link'\nimport { useMedia } from 'react-use'\nimport { transparentize } from 'polished'\nimport { TYPE } from '../../Theme'\nimport { withRouter } from 'react-router-dom'\nimport { TrendingUp, List, PieChart, Disc } from 'react-feather'\nimport Link from '../Link'\nimport { useSessionStart } from '../../contexts/Application'\nimport { useDarkModeManager } from '../../contexts/LocalStorage'\nimport Toggle from '../Toggle'\n\nconst Wrapper = styled.div`\n  height: ${({ isMobile }) => (isMobile ? 'initial' : '100vh')};\n  background-color: ${({ theme }) => transparentize(0.4, theme.bg1)};\n  color: ${({ theme }) => theme.text1};\n  padding: 0.5rem 0.5rem 0.5rem 0.75rem;\n  position: sticky;\n  top: 0px;\n  z-index: 9999;\n  box-sizing: border-box;\n  /* background-color: #1b1c22; */\n  background: linear-gradient(193.68deg, #1b1c22 0.68%, #000000 100.48%);\n  color: ${({ theme }) => theme.bg2};\n\n  @media screen and (max-width: 800px) {\n    grid-template-columns: 1fr;\n    position: relative;\n  }\n\n  @media screen and (max-width: 600px) {\n    padding: 1rem;\n  }\n`\n\nconst Option = styled.div`\n  font-weight: 500;\n  font-size: 14px;\n  opacity: ${({ activeText }) => (activeText ? 1 : 0.6)};\n  color: ${({ theme }) => theme.white};\n  display: flex;\n  :hover {\n    opacity: 1;\n  }\n`\n\nconst DesktopWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  height: 100vh;\n`\n\nconst MobileWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\n\nconst HeaderText = styled.div`\n  margin-right: 0.75rem;\n  font-size: 0.825rem;\n  font-weight: 500;\n  display: inline-box;\n  display: -webkit-inline-box;\n  opacity: 0.8;\n  :hover {\n    opacity: 1;\n  }\n  a {\n    color: ${({ theme }) => theme.white};\n  }\n`\n\nconst Polling = styled.div`\n  position: fixed;\n  display: flex;\n  left: 0;\n  bottom: 0;\n  padding: 1rem;\n  color: white;\n  opacity: 0.4;\n  transition: opacity 0.25s ease;\n  :hover {\n    opacity: 1;\n  }\n`\nconst PollingDot = styled.div`\n  width: 8px;\n  height: 8px;\n  min-height: 8px;\n  min-width: 8px;\n  margin-right: 0.5rem;\n  margin-top: 3px;\n  border-radius: 50%;\n  background-color: ${({ theme }) => theme.green1};\n`\n\nfunction SideNav({ history }) {\n  const below1080 = useMedia('(max-width: 1080px)')\n\n  const below1180 = useMedia('(max-width: 1180px)')\n\n  const seconds = useSessionStart()\n\n  const [isDark, toggleDarkMode] = useDarkModeManager()\n\n  return (\n    <Wrapper isMobile={below1080}>\n      {!below1080 ? (\n        <DesktopWrapper>\n          <AutoColumn gap=\"1rem\" style={{ marginLeft: '.75rem', marginTop: '1.5rem' }}>\n            <Title />\n            {!below1080 && (\n              <AutoColumn gap=\"1.25rem\" style={{ marginTop: '1rem' }}>\n                <BasicLink to=\"/home\">\n                  <Option activeText={history.location.pathname === '/home' ?? undefined}>\n                    <TrendingUp size={20} style={{ marginRight: '.75rem' }} />\n                    Overview\n                  </Option>\n                </BasicLink>\n                <BasicLink to=\"/tokens\">\n                  <Option\n                    activeText={\n                      (history.location.pathname.split('/')[1] === 'tokens' ||\n                        history.location.pathname.split('/')[1] === 'token') ??\n                      undefined\n                    }\n                  >\n                    <Disc size={20} style={{ marginRight: '.75rem' }} />\n                    Tokens\n                  </Option>\n                </BasicLink>\n                <BasicLink to=\"/pairs\">\n                  <Option\n                    activeText={\n                      (history.location.pathname.split('/')[1] === 'pairs' ||\n                        history.location.pathname.split('/')[1] === 'pair') ??\n                      undefined\n                    }\n                  >\n                    <PieChart size={20} style={{ marginRight: '.75rem' }} />\n                    Pairs\n                  </Option>\n                </BasicLink>\n\n                <BasicLink to=\"/accounts\">\n                  <Option\n                    activeText={\n                      (history.location.pathname.split('/')[1] === 'accounts' ||\n                        history.location.pathname.split('/')[1] === 'account') ??\n                      undefined\n                    }\n                  >\n                    <List size={20} style={{ marginRight: '.75rem' }} />\n                    Accounts\n                  </Option>\n                </BasicLink>\n              </AutoColumn>\n            )}\n          </AutoColumn>\n          <AutoColumn gap=\"0.5rem\" style={{ marginLeft: '.75rem', marginBottom: '4rem' }}>\n            <HeaderText>\n              <Link href=\"https://swap.ubiq.fi\" target=\"_blank\">\n                Swap\n              </Link>\n            </HeaderText>\n            <HeaderText>\n              <Link href=\"https://ubiqlabs.io\" target=\"_blank\">\n                UbiqLabs\n              </Link>\n            </HeaderText>\n            <HeaderText>\n              <Link href=\"https://discord.com/invite/XaqzJB4\" target=\"_blank\">\n                Discord\n              </Link>\n            </HeaderText>\n            <HeaderText>\n              <Link href=\"https://twitter.com/ubiqlabs\" target=\"_blank\">\n                Twitter\n              </Link>\n            </HeaderText>\n            <Toggle isActive={isDark} toggle={toggleDarkMode} />\n          </AutoColumn>\n          {!below1180 && (\n            <Polling style={{ marginLeft: '.5rem' }}>\n              <PollingDot />\n              <a href=\"/\" style={{ color: 'white' }}>\n                <TYPE.small color={'white'}>\n                  Updated {!!seconds ? seconds + 's' : '-'} ago <br />\n                </TYPE.small>\n              </a>\n            </Polling>\n          )}\n        </DesktopWrapper>\n      ) : (\n        <MobileWrapper>\n          <Title />\n        </MobileWrapper>\n      )}\n    </Wrapper>\n  )\n}\n\nexport default withRouter(SideNav)\n","import React, { useState, useEffect } from 'react'\nimport { useMedia } from 'react-use'\nimport dayjs from 'dayjs'\nimport LocalLoader from '../LocalLoader'\nimport utc from 'dayjs/plugin/utc'\nimport { Box, Flex } from 'rebass'\nimport styled from 'styled-components'\n\nimport { CustomLink } from '../Link'\nimport { Divider } from '..'\nimport { withRouter } from 'react-router-dom'\nimport { formattedNum } from '../../utils'\nimport { TYPE } from '../../Theme'\nimport DoubleTokenLogo from '../DoubleLogo'\nimport { RowFixed } from '../Row'\n\ndayjs.extend(utc)\n\nconst PageButtons = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  margin-top: 2em;\n  margin-bottom: 0.5em;\n`\n\nconst Arrow = styled.div`\n  color: ${({ theme }) => theme.primary1};\n  opacity: ${(props) => (props.faded ? 0.3 : 1)};\n  padding: 0 20px;\n  user-select: none;\n  :hover {\n    cursor: pointer;\n  }\n`\n\nconst List = styled(Box)`\n  -webkit-overflow-scrolling: touch;\n`\n\nconst DashGrid = styled.div`\n  display: grid;\n  grid-gap: 1em;\n  grid-template-columns: 10px 1.5fr 1fr 1fr;\n  grid-template-areas: 'number name pair value';\n  padding: 0 4px;\n\n  > * {\n    justify-content: flex-end;\n  }\n\n  @media screen and (max-width: 1080px) {\n    grid-template-columns: 10px 1.5fr 1fr 1fr;\n    grid-template-areas: 'number name pair value';\n  }\n\n  @media screen and (max-width: 600px) {\n    grid-template-columns: 1fr 1fr 1fr;\n    grid-template-areas: 'name pair value';\n  }\n`\n\nconst ListWrapper = styled.div``\n\nconst DataText = styled(Flex)`\n  align-items: center;\n  text-align: center;\n  color: ${({ theme }) => theme.text1};\n  & > * {\n    font-size: 14px;\n  }\n\n  @media screen and (max-width: 600px) {\n    font-size: 13px;\n  }\n`\n\nfunction LPList({ lps, disbaleLinks, maxItems = 10 }) {\n  const below600 = useMedia('(max-width: 600px)')\n  const below800 = useMedia('(max-width: 800px)')\n\n  // pagination\n  const [page, setPage] = useState(1)\n  const [maxPage, setMaxPage] = useState(1)\n  const ITEMS_PER_PAGE = maxItems\n\n  useEffect(() => {\n    setMaxPage(1) // edit this to do modular\n    setPage(1)\n  }, [lps])\n\n  useEffect(() => {\n    if (lps) {\n      let extraPages = 1\n      if (Object.keys(lps).length % ITEMS_PER_PAGE === 0) {\n        extraPages = 0\n      }\n      setMaxPage(Math.floor(Object.keys(lps).length / ITEMS_PER_PAGE) + extraPages)\n    }\n  }, [ITEMS_PER_PAGE, lps])\n\n  const ListItem = ({ lp, index }) => {\n    return (\n      <DashGrid style={{ height: '48px' }} disbaleLinks={disbaleLinks} focus={true}>\n        {!below600 && (\n          <DataText area=\"number\" fontWeight=\"500\">\n            {index}\n          </DataText>\n        )}\n        <DataText area=\"name\" fontWeight=\"500\" justifyContent=\"flex-start\">\n          <CustomLink style={{ marginLeft: below600 ? 0 : '1rem', whiteSpace: 'nowrap' }} to={'/account/' + lp.user.id}>\n            {below800 ? lp.user.id.slice(0, 4) + '...' + lp.user.id.slice(38, 42) : lp.user.id}\n          </CustomLink>\n        </DataText>\n\n        {/* {!below1080 && (\n          <DataText area=\"type\" justifyContent=\"flex-end\">\n            {lp.type}\n          </DataText>\n        )} */}\n\n        <DataText>\n          <CustomLink area=\"pair\" to={'/pair/' + lp.pairAddress}>\n            <RowFixed>\n              {!below600 && <DoubleTokenLogo a0={lp.token0} a1={lp.token1} size={16} margin={true} />}\n              {lp.pairName}\n            </RowFixed>\n          </CustomLink>\n        </DataText>\n        <DataText area=\"value\">{formattedNum(lp.usd, true)}</DataText>\n      </DashGrid>\n    )\n  }\n\n  const lpList =\n    lps &&\n    lps.slice(ITEMS_PER_PAGE * (page - 1), page * ITEMS_PER_PAGE).map((lp, index) => {\n      return (\n        <div key={index}>\n          <ListItem key={index} index={(page - 1) * 10 + index + 1} lp={lp} />\n          <Divider />\n        </div>\n      )\n    })\n\n  return (\n    <ListWrapper>\n      <DashGrid center={true} disbaleLinks={disbaleLinks} style={{ height: 'fit-content', padding: ' 0 0 1rem 0' }}>\n        {!below600 && (\n          <Flex alignItems=\"center\" justifyContent=\"flex-start\">\n            <TYPE.main area=\"number\">#</TYPE.main>\n          </Flex>\n        )}\n        <Flex alignItems=\"center\" justifyContent=\"flex-start\">\n          <TYPE.main area=\"name\">Account</TYPE.main>\n        </Flex>\n        {/* {!below1080 && (\n          <Flex alignItems=\"center\" justifyContent=\"flexEnd\">\n            <TYPE.main area=\"type\">Type</TYPE.main>\n          </Flex>\n        )} */}\n        <Flex alignItems=\"center\" justifyContent=\"flexEnd\">\n          <TYPE.main area=\"pair\">Pair</TYPE.main>\n        </Flex>\n        <Flex alignItems=\"center\" justifyContent=\"flexEnd\">\n          <TYPE.main area=\"value\">Value</TYPE.main>\n        </Flex>\n      </DashGrid>\n      <Divider />\n      <List p={0}>{!lpList ? <LocalLoader /> : lpList}</List>\n      <PageButtons>\n        <div onClick={() => setPage(page === 1 ? page : page - 1)}>\n          <Arrow faded={page === 1 ? true : false}>←</Arrow>\n        </div>\n        <TYPE.body>{'Page ' + page + ' of ' + maxPage}</TYPE.body>\n        <div onClick={() => setPage(page === maxPage ? page : page + 1)}>\n          <Arrow faded={page === maxPage ? true : false}>→</Arrow>\n        </div>\n      </PageButtons>\n    </ListWrapper>\n  )\n}\n\nexport default withRouter(LPList)\n","import React, { useEffect } from 'react'\nimport 'feather-icons'\nimport { withRouter } from 'react-router-dom'\nimport { TYPE } from '../Theme'\nimport { PageWrapper, FullWrapper } from '../components'\nimport Panel from '../components/Panel'\nimport LPList from '../components/LPList'\nimport styled from 'styled-components'\nimport AccountSearch from '../components/AccountSearch'\nimport { useTopLps } from '../contexts/GlobalData'\nimport LocalLoader from '../components/LocalLoader'\nimport { RowBetween } from '../components/Row'\nimport { useMedia } from 'react-use'\nimport Search from '../components/Search'\n\nconst AccountWrapper = styled.div`\n  @media screen and (max-width: 600px) {\n    width: 100%;\n  }\n`\n\nfunction AccountLookup() {\n  // scroll to top\n  useEffect(() => {\n    window.scrollTo(0, 0)\n  }, [])\n\n  const topLps = useTopLps()\n\n  const below600 = useMedia('(max-width: 600px)')\n\n  return (\n    <PageWrapper>\n      <FullWrapper>\n        <RowBetween>\n          <TYPE.largeHeader>Wallet analytics</TYPE.largeHeader>\n          {!below600 && <Search small={true} />}\n        </RowBetween>\n        <AccountWrapper>\n          <AccountSearch />\n        </AccountWrapper>\n        <TYPE.main fontSize={'1.125rem'} style={{ marginTop: '2rem' }}>\n          Top Liquidity Positions\n        </TYPE.main>\n        <Panel>{topLps && topLps.length > 0 ? <LPList lps={topLps} maxItems={200} /> : <LocalLoader />}</Panel>\n      </FullWrapper>\n    </PageWrapper>\n  )\n}\n\nexport default withRouter(AccountLookup)\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { ApolloProvider } from 'react-apollo'\nimport { client } from './apollo/client'\nimport { Route, Switch, HashRouter, Redirect } from 'react-router-dom'\nimport GlobalPage from './pages/GlobalPage'\nimport TokenPage from './pages/TokenPage'\nimport PairPage from './pages/PairPage'\nimport { useGlobalData, useGlobalChartData } from './contexts/GlobalData'\nimport { isAddress } from './utils'\nimport AccountPage from './pages/AccountPage'\nimport AllTokensPage from './pages/AllTokensPage'\nimport AllPairsPage from './pages/AllPairsPage'\nimport PinnedData from './components/PinnedData'\n\nimport SideNav from './components/SideNav'\nimport AccountLookup from './pages/AccountLookup'\nimport { OVERVIEW_TOKEN_BLACKLIST, PAIR_BLACKLIST } from './constants'\nimport LocalLoader from './components/LocalLoader'\nimport { useLatestBlocks } from './contexts/Application'\n\nconst AppWrapper = styled.div`\n  position: relative;\n  width: 100%;\n`\nconst ContentWrapper = styled.div`\n  display: grid;\n  grid-template-columns: ${({ open }) => (open ? '220px 1fr 200px' : '220px 1fr 64px')};\n\n  @media screen and (max-width: 1400px) {\n    grid-template-columns: 220px 1fr;\n  }\n\n  @media screen and (max-width: 1080px) {\n    grid-template-columns: 1fr;\n    max-width: 100vw;\n    overflow: hidden;\n    grid-gap: 0;\n  }\n`\n\nconst Right = styled.div`\n  position: fixed;\n  right: 0;\n  bottom: 0rem;\n  z-index: 99;\n  width: ${({ open }) => (open ? '220px' : '64px')};\n  height: ${({ open }) => (open ? 'fit-content' : '64px')};\n  overflow: auto;\n  background-color: ${({ theme }) => theme.bg1};\n  @media screen and (max-width: 1400px) {\n    display: none;\n  }\n`\n\nconst Center = styled.div`\n  height: 100%;\n  z-index: 9999;\n  transition: width 0.25s ease;\n  background-color: ${({ theme }) => theme.onlyLight};\n`\n\nconst WarningWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n`\n\nconst WarningBanner = styled.div`\n  background-color: #ff6871;\n  padding: 1.5rem;\n  color: white;\n  width: 100%;\n  text-align: center;\n  font-weight: 500;\n`\n\n/**\n * Wrap the component with the header and sidebar pinned tab\n */\nconst LayoutWrapper = ({ children, savedOpen, setSavedOpen }) => {\n  return (\n    <>\n      <ContentWrapper open={savedOpen}>\n        <SideNav />\n        <Center id=\"center\">{children}</Center>\n        <Right open={savedOpen}>\n          <PinnedData open={savedOpen} setSavedOpen={setSavedOpen} />\n        </Right>\n      </ContentWrapper>\n    </>\n  )\n}\n\nconst BLOCK_DIFFERENCE_THRESHOLD = 30\n\nfunction App() {\n  const [savedOpen, setSavedOpen] = useState(false)\n\n  const globalData = useGlobalData()\n  const globalChartData = useGlobalChartData()\n  const [latestBlock, headBlock] = useLatestBlocks()\n\n  // show warning\n  const showWarning = headBlock && latestBlock ? headBlock - latestBlock > BLOCK_DIFFERENCE_THRESHOLD : false\n\n  return (\n    <ApolloProvider client={client}>\n      <AppWrapper>\n        {showWarning && (\n          <WarningWrapper>\n            <WarningBanner>\n              {`Warning: The data on this site has only synced to Ethereum block ${latestBlock} (out of ${headBlock}). Please check back soon.`}\n            </WarningBanner>\n          </WarningWrapper>\n        )}\n        {globalData &&\n          Object.keys(globalData).length > 0 &&\n          globalChartData &&\n          Object.keys(globalChartData).length > 0 ? (\n          <HashRouter>\n            <Switch>\n              <Route\n                exacts\n                strict\n                path=\"/token/:tokenAddress\"\n                render={({ match }) => {\n                  if (OVERVIEW_TOKEN_BLACKLIST.includes(match.params.tokenAddress.toLowerCase())) {\n                    return <Redirect to=\"/home\" />\n                  }\n                  if (isAddress(match.params.tokenAddress.toLowerCase())) {\n                    return (\n                      <LayoutWrapper savedOpen={savedOpen} setSavedOpen={setSavedOpen}>\n                        <TokenPage address={match.params.tokenAddress.toLowerCase()} />\n                      </LayoutWrapper>\n                    )\n                  } else {\n                    return <Redirect to=\"/home\" />\n                  }\n                }}\n              />\n              <Route\n                exacts\n                strict\n                path=\"/pair/:pairAddress\"\n                render={({ match }) => {\n                  if (PAIR_BLACKLIST.includes(match.params.pairAddress.toLowerCase())) {\n                    return <Redirect to=\"/home\" />\n                  }\n                  if (isAddress(match.params.pairAddress.toLowerCase())) {\n                    return (\n                      <LayoutWrapper savedOpen={savedOpen} setSavedOpen={setSavedOpen}>\n                        <PairPage pairAddress={match.params.pairAddress.toLowerCase()} />\n                      </LayoutWrapper>\n                    )\n                  } else {\n                    return <Redirect to=\"/home\" />\n                  }\n                }}\n              />\n              <Route\n                exacts\n                strict\n                path=\"/account/:accountAddress\"\n                render={({ match }) => {\n                  if (isAddress(match.params.accountAddress.toLowerCase())) {\n                    return (\n                      <LayoutWrapper savedOpen={savedOpen} setSavedOpen={setSavedOpen}>\n                        <AccountPage account={match.params.accountAddress.toLowerCase()} />\n                      </LayoutWrapper>\n                    )\n                  } else {\n                    return <Redirect to=\"/home\" />\n                  }\n                }}\n              />\n\n              <Route path=\"/home\">\n                <LayoutWrapper savedOpen={savedOpen} setSavedOpen={setSavedOpen}>\n                  <GlobalPage />\n                </LayoutWrapper>\n              </Route>\n\n              <Route path=\"/tokens\">\n                <LayoutWrapper savedOpen={savedOpen} setSavedOpen={setSavedOpen}>\n                  <AllTokensPage />\n                </LayoutWrapper>\n              </Route>\n\n              <Route path=\"/pairs\">\n                <LayoutWrapper savedOpen={savedOpen} setSavedOpen={setSavedOpen}>\n                  <AllPairsPage />\n                </LayoutWrapper>\n              </Route>\n\n              <Route path=\"/accounts\">\n                <LayoutWrapper savedOpen={savedOpen} setSavedOpen={setSavedOpen}>\n                  <AccountLookup />\n                </LayoutWrapper>\n              </Route>\n\n              <Redirect to=\"/home\" />\n            </Switch>\n          </HashRouter>\n        ) : (\n          <LocalLoader fill=\"true\" />\n        )}\n      </AppWrapper>\n    </ApolloProvider>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport ThemeProvider, { GlobalStyle } from './Theme'\nimport LocalStorageContextProvider, { Updater as LocalStorageContextUpdater } from './contexts/LocalStorage'\nimport TokenDataContextProvider, { Updater as TokenDataContextUpdater } from './contexts/TokenData'\nimport GlobalDataContextProvider from './contexts/GlobalData'\nimport PairDataContextProvider, { Updater as PairDataContextUpdater } from './contexts/PairData'\nimport ApplicationContextProvider from './contexts/Application'\nimport UserContextProvider from './contexts/User'\nimport App from './App'\n\nfunction ContextProviders({ children }) {\n  return (\n    <LocalStorageContextProvider>\n      <ApplicationContextProvider>\n        <TokenDataContextProvider>\n          <GlobalDataContextProvider>\n            <PairDataContextProvider>\n              <UserContextProvider>{children}</UserContextProvider>\n            </PairDataContextProvider>\n          </GlobalDataContextProvider>\n        </TokenDataContextProvider>\n      </ApplicationContextProvider>\n    </LocalStorageContextProvider>\n  )\n}\n\nfunction Updaters() {\n  return (\n    <>\n      <LocalStorageContextUpdater />\n      <PairDataContextUpdater />\n      <TokenDataContextUpdater />\n    </>\n  )\n}\n\nReactDOM.render(\n  <ContextProviders>\n    <Updaters />\n    <ThemeProvider>\n      <>\n        <GlobalStyle />\n        <App />\n      </>\n    </ThemeProvider>\n  </ContextProviders>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}